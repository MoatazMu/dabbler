[
  {
    "schema_json": "{\n    \"enums\": [\n        {\n            \"name\": \"aal_level\",\n            \"labels\": [\n                \"aal1\",\n                \"aal2\",\n                \"aal3\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"code_challenge_method\",\n            \"labels\": [\n                \"s256\",\n                \"plain\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"factor_status\",\n            \"labels\": [\n                \"unverified\",\n                \"verified\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"factor_type\",\n            \"labels\": [\n                \"totp\",\n                \"webauthn\",\n                \"phone\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"oauth_authorization_status\",\n            \"labels\": [\n                \"pending\",\n                \"approved\",\n                \"denied\",\n                \"expired\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"oauth_client_type\",\n            \"labels\": [\n                \"public\",\n                \"confidential\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"oauth_registration_type\",\n            \"labels\": [\n                \"dynamic\",\n                \"manual\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"oauth_response_type\",\n            \"labels\": [\n                \"code\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"one_time_token_type\",\n            \"labels\": [\n                \"confirmation_token\",\n                \"reauthentication_token\",\n                \"recovery_token\",\n                \"email_change_token_new\",\n                \"email_change_token_current\",\n                \"phone_change_token\"\n            ],\n            \"schema\": \"auth\"\n        },\n        {\n            \"name\": \"destination_type\",\n            \"labels\": [\n                \"bank\",\n                \"wallet_ext\"\n            ],\n            \"schema\": \"public\"\n        },\n        {\n            \"name\": \"ledger_direction\",\n            \"labels\": [\n                \"credit\",\n                \"debit\"\n            ],\n            \"schema\": \"public\"\n        },\n        {\n            \"name\": \"ledger_status\",\n            \"labels\": [\n                \"pending\",\n                \"posted\",\n                \"voided\"\n            ],\n            \"schema\": \"public\"\n        },\n        {\n            \"name\": \"payout_status\",\n            \"labels\": [\n                \"requested\",\n                \"approved\",\n                \"processing\",\n                \"paid\",\n                \"failed\",\n                \"cancelled\"\n            ],\n            \"schema\": \"public\"\n        },\n        {\n            \"name\": \"settlement_status\",\n            \"labels\": [\n                \"pending\",\n                \"settled\",\n                \"refunded\",\n                \"cancelled\"\n            ],\n            \"schema\": \"public\"\n        },\n        {\n            \"name\": \"buckettype\",\n            \"labels\": [\n                \"STANDARD\",\n                \"ANALYTICS\"\n            ],\n            \"schema\": \"storage\"\n        }\n    ],\n    \"tables\": [\n        {\n            \"table\": \"audit_log_entries\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"instance_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"ip_address\",\n                    \"type\": \"character varying(64)\",\n                    \"comment\": null,\n                    \"default\": \"''::character varying\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"payload\",\n                    \"type\": \"json\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Audit trail for user actions.\",\n            \"indexes\": [\n                {\n                    \"name\": \"audit_log_entries_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX audit_log_entries_pkey ON auth.audit_log_entries USING btree (id)\"\n                },\n                {\n                    \"name\": \"audit_logs_instance_id_idx\",\n                    \"definition\": \"CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"audit_log_entries_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"flow_state\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"auth_code\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"auth_code_issued_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"authentication_method\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"code_challenge\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"code_challenge_method\",\n                    \"type\": \"auth.code_challenge_method\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"provider_access_token\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"provider_refresh_token\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"provider_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"stores metadata for pkce logins\",\n            \"indexes\": [\n                {\n                    \"name\": \"flow_state_created_at_idx\",\n                    \"definition\": \"CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC)\"\n                },\n                {\n                    \"name\": \"flow_state_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX flow_state_pkey ON auth.flow_state USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_auth_code\",\n                    \"definition\": \"CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code)\"\n                },\n                {\n                    \"name\": \"idx_user_id_auth_method\",\n                    \"definition\": \"CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"flow_state_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"identities\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email\",\n                    \"type\": \"text\",\n                    \"comment\": \"Auth: Email is a generated column that references the optional email property in the identity_data\",\n                    \"default\": \"lower((identity_data ->> 'email'::text))\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"identity_data\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_sign_in_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"provider\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"provider_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Auth: Stores identities associated to a user.\",\n            \"indexes\": [\n                {\n                    \"name\": \"identities_email_idx\",\n                    \"definition\": \"CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops)\"\n                },\n                {\n                    \"name\": \"identities_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX identities_pkey ON auth.identities USING btree (id)\"\n                },\n                {\n                    \"name\": \"identities_provider_id_provider_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX identities_provider_id_provider_unique ON auth.identities USING btree (provider_id, provider)\"\n                },\n                {\n                    \"name\": \"identities_user_id_idx\",\n                    \"definition\": \"CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"identities_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"identities_provider_id_provider_unique\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (provider_id, provider)\"\n                },\n                {\n                    \"name\": \"identities_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"instances\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"raw_base_config\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"uuid\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Manages users across multiple sites.\",\n            \"indexes\": [\n                {\n                    \"name\": \"instances_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX instances_pkey ON auth.instances USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"instances_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"mfa_amr_claims\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"authentication_method\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"session_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"auth: stores authenticator method reference claims for multi factor authentication\",\n            \"indexes\": [\n                {\n                    \"name\": \"amr_id_pk\",\n                    \"definition\": \"CREATE UNIQUE INDEX amr_id_pk ON auth.mfa_amr_claims USING btree (id)\"\n                },\n                {\n                    \"name\": \"mfa_amr_claims_session_id_authentication_method_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX mfa_amr_claims_session_id_authentication_method_pkey ON auth.mfa_amr_claims USING btree (session_id, authentication_method)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"amr_id_pk\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"mfa_amr_claims_session_id_authentication_method_pkey\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (session_id, authentication_method)\"\n                },\n                {\n                    \"name\": \"mfa_amr_claims_session_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"mfa_challenges\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"factor_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ip_address\",\n                    \"type\": \"inet\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"otp_code\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"verified_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"web_authn_session_data\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"auth: stores metadata about challenge requests made\",\n            \"indexes\": [\n                {\n                    \"name\": \"mfa_challenge_created_at_idx\",\n                    \"definition\": \"CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC)\"\n                },\n                {\n                    \"name\": \"mfa_challenges_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX mfa_challenges_pkey ON auth.mfa_challenges USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"mfa_challenges_auth_factor_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"mfa_challenges_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"mfa_factors\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"factor_type\",\n                    \"type\": \"auth.factor_type\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"friendly_name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_challenged_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"secret\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"auth.factor_status\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"web_authn_aaguid\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"web_authn_credential\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"auth: stores metadata about factors\",\n            \"indexes\": [\n                {\n                    \"name\": \"factor_id_created_at_idx\",\n                    \"definition\": \"CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at)\"\n                },\n                {\n                    \"name\": \"mfa_factors_last_challenged_at_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX mfa_factors_last_challenged_at_key ON auth.mfa_factors USING btree (last_challenged_at)\"\n                },\n                {\n                    \"name\": \"mfa_factors_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX mfa_factors_pkey ON auth.mfa_factors USING btree (id)\"\n                },\n                {\n                    \"name\": \"mfa_factors_user_friendly_name_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text)\"\n                },\n                {\n                    \"name\": \"mfa_factors_user_id_idx\",\n                    \"definition\": \"CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"unique_phone_factor_per_user\",\n                    \"definition\": \"CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"mfa_factors_last_challenged_at_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (last_challenged_at)\"\n                },\n                {\n                    \"name\": \"mfa_factors_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"mfa_factors_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"oauth_authorizations\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"approved_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"authorization_code\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"authorization_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"client_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"code_challenge\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"code_challenge_method\",\n                    \"type\": \"auth.code_challenge_method\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"(now() + '00:03:00'::interval)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"redirect_uri\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"resource\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"response_type\",\n                    \"type\": \"auth.oauth_response_type\",\n                    \"comment\": null,\n                    \"default\": \"'code'::auth.oauth_response_type\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"scope\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"state\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"auth.oauth_authorization_status\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::auth.oauth_authorization_status\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"oauth_auth_pending_exp_idx\",\n                    \"definition\": \"CREATE INDEX oauth_auth_pending_exp_idx ON auth.oauth_authorizations USING btree (expires_at) WHERE (status = 'pending'::auth.oauth_authorization_status)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_authorization_code_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_authorizations_authorization_code_key ON auth.oauth_authorizations USING btree (authorization_code)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_authorization_id_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_authorizations_authorization_id_key ON auth.oauth_authorizations USING btree (authorization_id)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_authorizations_pkey ON auth.oauth_authorizations USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"oauth_authorizations_authorization_code_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (authorization_code)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_authorization_code_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(authorization_code) <= 255))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_authorization_id_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (authorization_id)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_client_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (client_id) REFERENCES auth.oauth_clients(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_code_challenge_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(code_challenge) <= 128))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_expires_at_future\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((expires_at > created_at))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_redirect_uri_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(redirect_uri) <= 2048))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_resource_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(resource) <= 2048))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_scope_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(scope) <= 4096))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_state_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(state) <= 4096))\"\n                },\n                {\n                    \"name\": \"oauth_authorizations_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"oauth_clients\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"client_name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"client_secret_hash\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"client_type\",\n                    \"type\": \"auth.oauth_client_type\",\n                    \"comment\": null,\n                    \"default\": \"'confidential'::auth.oauth_client_type\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"client_uri\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"deleted_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"grant_types\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"logo_uri\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"redirect_uris\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"registration_type\",\n                    \"type\": \"auth.oauth_registration_type\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"oauth_clients_deleted_at_idx\",\n                    \"definition\": \"CREATE INDEX oauth_clients_deleted_at_idx ON auth.oauth_clients USING btree (deleted_at)\"\n                },\n                {\n                    \"name\": \"oauth_clients_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_clients_pkey ON auth.oauth_clients USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"oauth_clients_client_name_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(client_name) <= 1024))\"\n                },\n                {\n                    \"name\": \"oauth_clients_client_uri_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(client_uri) <= 2048))\"\n                },\n                {\n                    \"name\": \"oauth_clients_logo_uri_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(logo_uri) <= 2048))\"\n                },\n                {\n                    \"name\": \"oauth_clients_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"oauth_consents\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"client_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"granted_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"revoked_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"scopes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"oauth_consents_active_client_idx\",\n                    \"definition\": \"CREATE INDEX oauth_consents_active_client_idx ON auth.oauth_consents USING btree (client_id) WHERE (revoked_at IS NULL)\"\n                },\n                {\n                    \"name\": \"oauth_consents_active_user_client_idx\",\n                    \"definition\": \"CREATE INDEX oauth_consents_active_user_client_idx ON auth.oauth_consents USING btree (user_id, client_id) WHERE (revoked_at IS NULL)\"\n                },\n                {\n                    \"name\": \"oauth_consents_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_consents_pkey ON auth.oauth_consents USING btree (id)\"\n                },\n                {\n                    \"name\": \"oauth_consents_user_client_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX oauth_consents_user_client_unique ON auth.oauth_consents USING btree (user_id, client_id)\"\n                },\n                {\n                    \"name\": \"oauth_consents_user_order_idx\",\n                    \"definition\": \"CREATE INDEX oauth_consents_user_order_idx ON auth.oauth_consents USING btree (user_id, granted_at DESC)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"oauth_consents_client_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (client_id) REFERENCES auth.oauth_clients(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"oauth_consents_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"oauth_consents_revoked_after_granted\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((revoked_at IS NULL) OR (revoked_at >= granted_at)))\"\n                },\n                {\n                    \"name\": \"oauth_consents_scopes_length\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(scopes) <= 2048))\"\n                },\n                {\n                    \"name\": \"oauth_consents_scopes_not_empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(TRIM(BOTH FROM scopes)) > 0))\"\n                },\n                {\n                    \"name\": \"oauth_consents_user_client_unique\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (user_id, client_id)\"\n                },\n                {\n                    \"name\": \"oauth_consents_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"one_time_tokens\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp without time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"relates_to\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"token_hash\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"token_type\",\n                    \"type\": \"auth.one_time_token_type\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp without time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"one_time_tokens_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX one_time_tokens_pkey ON auth.one_time_tokens USING btree (id)\"\n                },\n                {\n                    \"name\": \"one_time_tokens_relates_to_hash_idx\",\n                    \"definition\": \"CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to)\"\n                },\n                {\n                    \"name\": \"one_time_tokens_token_hash_hash_idx\",\n                    \"definition\": \"CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash)\"\n                },\n                {\n                    \"name\": \"one_time_tokens_user_id_token_type_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"one_time_tokens_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"one_time_tokens_token_hash_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(token_hash) > 0))\"\n                },\n                {\n                    \"name\": \"one_time_tokens_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"refresh_tokens\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"nextval('auth.refresh_tokens_id_seq'::regclass)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"instance_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"parent\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"revoked\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"session_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"token\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Store of tokens used to refresh JWT tokens once they expire.\",\n            \"indexes\": [\n                {\n                    \"name\": \"refresh_tokens_instance_id_idx\",\n                    \"definition\": \"CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_instance_id_user_id_idx\",\n                    \"definition\": \"CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_parent_idx\",\n                    \"definition\": \"CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX refresh_tokens_pkey ON auth.refresh_tokens USING btree (id)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_session_id_revoked_idx\",\n                    \"definition\": \"CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_token_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX refresh_tokens_token_unique ON auth.refresh_tokens USING btree (token)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_updated_at_idx\",\n                    \"definition\": \"CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"refresh_tokens_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"refresh_tokens_session_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"refresh_tokens_token_unique\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (token)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"saml_providers\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"attribute_mapping\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"entity_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"metadata_url\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"metadata_xml\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"name_id_format\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sso_provider_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Manages SAML Identity Provider connections.\",\n            \"indexes\": [\n                {\n                    \"name\": \"saml_providers_entity_id_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX saml_providers_entity_id_key ON auth.saml_providers USING btree (entity_id)\"\n                },\n                {\n                    \"name\": \"saml_providers_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX saml_providers_pkey ON auth.saml_providers USING btree (id)\"\n                },\n                {\n                    \"name\": \"saml_providers_sso_provider_id_idx\",\n                    \"definition\": \"CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"entity_id not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(entity_id) > 0))\"\n                },\n                {\n                    \"name\": \"metadata_url not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0)))\"\n                },\n                {\n                    \"name\": \"metadata_xml not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(metadata_xml) > 0))\"\n                },\n                {\n                    \"name\": \"saml_providers_entity_id_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (entity_id)\"\n                },\n                {\n                    \"name\": \"saml_providers_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"saml_providers_sso_provider_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"saml_relay_states\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"flow_state_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"for_email\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"redirect_to\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"request_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sso_provider_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Contains SAML Relay State information for each Service Provider initiated login.\",\n            \"indexes\": [\n                {\n                    \"name\": \"saml_relay_states_created_at_idx\",\n                    \"definition\": \"CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC)\"\n                },\n                {\n                    \"name\": \"saml_relay_states_for_email_idx\",\n                    \"definition\": \"CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email)\"\n                },\n                {\n                    \"name\": \"saml_relay_states_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX saml_relay_states_pkey ON auth.saml_relay_states USING btree (id)\"\n                },\n                {\n                    \"name\": \"saml_relay_states_sso_provider_id_idx\",\n                    \"definition\": \"CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"request_id not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(request_id) > 0))\"\n                },\n                {\n                    \"name\": \"saml_relay_states_flow_state_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"saml_relay_states_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"saml_relay_states_sso_provider_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"schema_migrations\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"version\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Auth: Manages updates to the auth system.\",\n            \"indexes\": [\n                {\n                    \"name\": \"schema_migrations_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX schema_migrations_pkey ON auth.schema_migrations USING btree (version)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"schema_migrations_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (version)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"sessions\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"aal\",\n                    \"type\": \"auth.aal_level\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"factor_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ip\",\n                    \"type\": \"inet\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"not_after\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": \"Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.\",\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"oauth_client_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"refreshed_at\",\n                    \"type\": \"timestamp without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"tag\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_agent\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Auth: Stores session data associated to a user.\",\n            \"indexes\": [\n                {\n                    \"name\": \"sessions_not_after_idx\",\n                    \"definition\": \"CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC)\"\n                },\n                {\n                    \"name\": \"sessions_oauth_client_id_idx\",\n                    \"definition\": \"CREATE INDEX sessions_oauth_client_id_idx ON auth.sessions USING btree (oauth_client_id)\"\n                },\n                {\n                    \"name\": \"sessions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX sessions_pkey ON auth.sessions USING btree (id)\"\n                },\n                {\n                    \"name\": \"sessions_user_id_idx\",\n                    \"definition\": \"CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"user_id_created_at_idx\",\n                    \"definition\": \"CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"sessions_oauth_client_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (oauth_client_id) REFERENCES auth.oauth_clients(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"sessions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"sessions_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"sso_domains\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"domain\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sso_provider_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Manages SSO email address domain mapping to an SSO Identity Provider.\",\n            \"indexes\": [\n                {\n                    \"name\": \"sso_domains_domain_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain))\"\n                },\n                {\n                    \"name\": \"sso_domains_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX sso_domains_pkey ON auth.sso_domains USING btree (id)\"\n                },\n                {\n                    \"name\": \"sso_domains_sso_provider_id_idx\",\n                    \"definition\": \"CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"domain not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((char_length(domain) > 0))\"\n                },\n                {\n                    \"name\": \"sso_domains_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"sso_domains_sso_provider_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"sso_providers\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"disabled\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"resource_id\",\n                    \"type\": \"text\",\n                    \"comment\": \"Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.\",\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Manages SSO identity provider information; see saml_providers for SAML.\",\n            \"indexes\": [\n                {\n                    \"name\": \"sso_providers_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX sso_providers_pkey ON auth.sso_providers USING btree (id)\"\n                },\n                {\n                    \"name\": \"sso_providers_resource_id_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id))\"\n                },\n                {\n                    \"name\": \"sso_providers_resource_id_pattern_idx\",\n                    \"definition\": \"CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"resource_id not empty\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))\"\n                },\n                {\n                    \"name\": \"sso_providers_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"users\",\n            \"schema\": \"auth\",\n            \"columns\": [\n                {\n                    \"name\": \"aud\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"banned_until\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"confirmation_sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"confirmation_token\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"confirmed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"LEAST(email_confirmed_at, phone_confirmed_at)\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"deleted_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_change\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_change_confirm_status\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_change_sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_change_token_current\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": \"''::character varying\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_change_token_new\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"email_confirmed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"encrypted_password\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"instance_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"invited_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"is_anonymous\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_sso_user\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.\",\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_super_admin\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"last_sign_in_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"NULL::character varying\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone_change\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"''::character varying\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone_change_sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone_change_token\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": \"''::character varying\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone_confirmed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"raw_app_meta_data\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"raw_user_meta_data\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"reauthentication_sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"reauthentication_token\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": \"''::character varying\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"recovery_sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"recovery_token\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"role\",\n                    \"type\": \"character varying(255)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Auth: Stores user login data within a secure schema.\",\n            \"indexes\": [\n                {\n                    \"name\": \"confirmation_token_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text)\"\n                },\n                {\n                    \"name\": \"email_change_token_current_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text)\"\n                },\n                {\n                    \"name\": \"email_change_token_new_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text)\"\n                },\n                {\n                    \"name\": \"reauthentication_token_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text)\"\n                },\n                {\n                    \"name\": \"recovery_token_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text)\"\n                },\n                {\n                    \"name\": \"users_email_partial_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false)\"\n                },\n                {\n                    \"name\": \"users_instance_id_email_idx\",\n                    \"definition\": \"CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text))\"\n                },\n                {\n                    \"name\": \"users_instance_id_idx\",\n                    \"definition\": \"CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id)\"\n                },\n                {\n                    \"name\": \"users_is_anonymous_idx\",\n                    \"definition\": \"CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous)\"\n                },\n                {\n                    \"name\": \"users_phone_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX users_phone_key ON auth.users USING btree (phone)\"\n                },\n                {\n                    \"name\": \"users_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX users_pkey ON auth.users USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"users_email_change_confirm_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))\"\n                },\n                {\n                    \"name\": \"users_phone_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (phone)\"\n                },\n                {\n                    \"name\": \"users_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"admins\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"admins_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX admins_pkey ON public.admins USING btree (user_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"admins_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"amenities_catalog\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"amenities_catalog_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX amenities_catalog_pkey ON public.amenities_catalog USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"amenities_catalog_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"app_admins\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"app_admins_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX app_admins_pkey ON public.app_admins USING btree (user_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"app_admins_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"app_admins_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"badge_rules\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"badge_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"params\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rule_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"badge_rules_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX badge_rules_pkey ON public.badge_rules USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"rules_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rules_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"badge_rules_badge_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (badge_key) REFERENCES badges(key) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"badge_rules_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"badge_rules_rule_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((rule_type = ANY (ARRAY['user_metric'::text, 'host_weekly'::text, 'venue_dim_top'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"badges\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"description_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"icon_url\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Badge catalog; sport=null means cross-sport.\",\n            \"indexes\": [\n                {\n                    \"name\": \"badges_key_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX badges_key_key ON public.badges USING btree (key)\"\n                },\n                {\n                    \"name\": \"badges_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX badges_pkey ON public.badges USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_badges_active\",\n                    \"definition\": \"CREATE INDEX idx_badges_active ON public.badges USING btree (is_active, sort_order)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"badges_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"badges_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"badges_write_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"badges_key_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (key)\"\n                },\n                {\n                    \"name\": \"badges_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"blackouts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ends_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"starts_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"blackouts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX blackouts_pkey ON public.blackouts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"blackouts_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = blackouts.venue_space_id))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = blackouts.venue_space_id))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"blackouts_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"blackouts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"blackouts_valid_range\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((ends_at > starts_at))\"\n                },\n                {\n                    \"name\": \"blackouts_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"challenge_fixtures\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"away_score\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"away_squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"best_of\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"challenge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"home_score\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"home_squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"round_no\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"scheduled_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"stage_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'scheduled'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"winner_squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"challenge_fixtures_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenge_fixtures_pkey ON public.challenge_fixtures USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_ch_fix_ch\",\n                    \"definition\": \"CREATE INDEX idx_ch_fix_ch ON public.challenge_fixtures USING btree (challenge_id, round_no)\"\n                },\n                {\n                    \"name\": \"idx_ch_fix_stage\",\n                    \"definition\": \"CREATE INDEX idx_ch_fix_stage ON public.challenge_fixtures USING btree (stage_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"chf_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_fixtures.challenge_id) AND (c.owner_user_id = auth.uid())))) OR (EXISTS ( SELECT 1\\n   FROM challenge_squads cs\\n  WHERE ((cs.challenge_id = challenge_fixtures.challenge_id) AND (EXISTS ( SELECT 1\\n           FROM squad_members m\\n          WHERE ((m.squad_id = cs.squad_id) AND (m.user_id = auth.uid()) AND (m.status = 'active'::text))))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"chf_write_owner\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_fixtures.challenge_id) AND (c.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_fixtures.challenge_id) AND (c.owner_user_id = auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenge_fixtures_away_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (away_squad_id) REFERENCES squads(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_challenge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (challenge_id) REFERENCES challenges(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_home_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (home_squad_id) REFERENCES squads(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_stage_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (stage_id) REFERENCES challenge_stages(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['scheduled'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])))\"\n                },\n                {\n                    \"name\": \"challenge_fixtures_winner_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (winner_squad_id) REFERENCES squads(id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"challenge_invites\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"challenge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"challenge_invites_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenge_invites_pkey ON public.challenge_invites USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_ch_inv_squad\",\n                    \"definition\": \"CREATE INDEX idx_ch_inv_squad ON public.challenge_invites USING btree (to_squad_id, status)\"\n                },\n                {\n                    \"name\": \"idx_ch_inv_target\",\n                    \"definition\": \"CREATE INDEX idx_ch_inv_target ON public.challenge_invites USING btree (challenge_id, status)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"chi_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_invites.challenge_id) AND (c.owner_user_id = auth.uid())))) OR (EXISTS ( SELECT 1\\n   FROM squad_members m\\n  WHERE ((m.squad_id = challenge_invites.to_squad_id) AND (m.user_id = auth.uid()) AND (m.status = 'active'::text)))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"chi_write_owner\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_invites.challenge_id) AND (c.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_invites.challenge_id) AND (c.owner_user_id = auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenge_invites_challenge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (challenge_id) REFERENCES challenges(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_invites_created_by_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by_profile_id) REFERENCES profiles(id)\"\n                },\n                {\n                    \"name\": \"challenge_invites_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"challenge_invites_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'expired'::text])))\"\n                },\n                {\n                    \"name\": \"challenge_invites_to_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (to_squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"challenge_squads\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"challenge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"joined_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"seed\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'active'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"challenge_squads_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenge_squads_pkey ON public.challenge_squads USING btree (challenge_id, squad_id)\"\n                },\n                {\n                    \"name\": \"idx_ch_sq_by_ch\",\n                    \"definition\": \"CREATE INDEX idx_ch_sq_by_ch ON public.challenge_squads USING btree (challenge_id)\"\n                },\n                {\n                    \"name\": \"idx_ch_sq_by_sq\",\n                    \"definition\": \"CREATE INDEX idx_ch_sq_by_sq ON public.challenge_squads USING btree (squad_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"chs_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_squads.challenge_id) AND (c.owner_user_id = auth.uid())))) OR (EXISTS ( SELECT 1\\n   FROM squad_members m\\n  WHERE ((m.squad_id = challenge_squads.squad_id) AND (m.user_id = auth.uid()) AND (m.status = 'active'::text)))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"chs_write_owner\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_squads.challenge_id) AND (c.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_squads.challenge_id) AND (c.owner_user_id = auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenge_squads_challenge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (challenge_id) REFERENCES challenges(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_squads_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (challenge_id, squad_id)\"\n                },\n                {\n                    \"name\": \"challenge_squads_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_squads_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['active'::text, 'withdrawn'::text, 'disqualified'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"challenge_stages\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"challenge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"config\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ordinal\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"stage_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"challenge_stages_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenge_stages_pkey ON public.challenge_stages USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_ch_stages_ch\",\n                    \"definition\": \"CREATE INDEX idx_ch_stages_ch ON public.challenge_stages USING btree (challenge_id, ordinal)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"chst_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_stages.challenge_id) AND (c.owner_user_id = auth.uid())))) OR (EXISTS ( SELECT 1\\n   FROM challenge_squads cs\\n  WHERE ((cs.challenge_id = challenge_stages.challenge_id) AND (EXISTS ( SELECT 1\\n           FROM squad_members m\\n          WHERE ((m.squad_id = cs.squad_id) AND (m.user_id = auth.uid()) AND (m.status = 'active'::text))))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"chst_write_owner\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_stages.challenge_id) AND (c.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM challenges c\\n  WHERE ((c.id = challenge_stages.challenge_id) AND (c.owner_user_id = auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenge_stages_challenge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (challenge_id) REFERENCES challenges(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"challenge_stages_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"challenge_stages_stage_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((stage_type = ANY (ARRAY['round_robin'::text, 'knockout'::text, 'groups'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"challenge_types\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"challenge_types_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenge_types_pkey ON public.challenge_types USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenge_types_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"challenges\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"end_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"join_policy\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'invite'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"listing_visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_squads\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"owner_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"preferences\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rules\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"jsonb_build_object('points_win', 3, 'points_draw', 1, 'points_loss', 0, 'best_of', 1, 'tie_breakers', jsonb_build_array('points', 'gd', 'goals_for'))\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'generic'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"start_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'draft'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'challenge'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Sport challenges/tournaments; organiser-owned; squads participate; discovery & joinability separated like games.\",\n            \"indexes\": [\n                {\n                    \"name\": \"challenges_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX challenges_pkey ON public.challenges USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_challenges_owner_visibility\",\n                    \"definition\": \"CREATE INDEX idx_challenges_owner_visibility ON public.challenges USING btree (owner_user_id, visibility)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ch_read\",\n                    \"qual\": \"(is_active AND (is_admin(auth.uid()) OR (owner_user_id = auth.uid()) OR can_view_with_scope(auth.uid(), owner_user_id, listing_visibility, NULL::uuid)))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ch_write_owner\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                },\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"challenges_delete\",\n                    \"qual\": \"can_write_row(owner_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"challenges_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(can_write_row(owner_user_id) AND allow_social_write(owner_user_id))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"challenges_select\",\n                    \"qual\": \"can_read_row(owner_user_id, visibility)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"challenges_update\",\n                    \"qual\": \"can_write_row(owner_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"challenges_join_policy_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((join_policy = ANY (ARRAY['invite'::text, 'request'::text, 'link'::text, 'closed'::text, 'squad'::text])))\"\n                },\n                {\n                    \"name\": \"challenges_listing_visibility_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((listing_visibility = ANY (ARRAY['public'::text, 'circle'::text, 'squad'::text, 'invite'::text, 'link'::text, 'hidden'::text])))\"\n                },\n                {\n                    \"name\": \"challenges_max_squads_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_squads IS NULL) OR (max_squads >= 2)))\"\n                },\n                {\n                    \"name\": \"challenges_owner_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"challenges_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"challenges_title_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(title) >= 3) AND (char_length(title) <= 80)))\"\n                },\n                {\n                    \"name\": \"challenges_type_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (type) REFERENCES challenge_types(key)\"\n                },\n                {\n                    \"name\": \"chk_challenges_status\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['draft'::text, 'published'::text, 'active'::text, 'completed'::text, 'cancelled'::text])))\"\n                },\n                {\n                    \"name\": \"chk_challenges_visibility\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((visibility = ANY (ARRAY['public'::text, 'circle'::text, 'hidden'::text])))\"\n                },\n                {\n                    \"name\": \"fk_challenges_owner_profile\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"comment_reports\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"comment_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"reporter_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"comment_reports_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX comment_reports_pkey ON public.comment_reports USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_comment_reports_comment\",\n                    \"definition\": \"CREATE INDEX idx_comment_reports_comment ON public.comment_reports USING btree (comment_id)\"\n                },\n                {\n                    \"name\": \"idx_comment_reports_status\",\n                    \"definition\": \"CREATE INDEX idx_comment_reports_status ON public.comment_reports USING btree (status, created_at DESC)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"comment_reports_comment_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (comment_id) REFERENCES post_comments(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"comment_reports_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"comment_reports_reporter_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (reporter_user_id) REFERENCES auth.users(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"comment_reports_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'resolved'::text, 'dismissed'::text])))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"commission_rules\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"commission_rate\",\n                    \"type\": \"numeric(5,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ends_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_app_fee_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": \"NULL::numeric\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"min_app_fee_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"organiser_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"starts_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Commission rules: pick most specific match (organiser+sport) then fall back to sport override then global default.\",\n            \"indexes\": [\n                {\n                    \"name\": \"commission_rules_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX commission_rules_pkey ON public.commission_rules USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_commission_lookup\",\n                    \"definition\": \"CREATE INDEX idx_commission_lookup ON public.commission_rules USING btree (organiser_user_id NULLS FIRST, sport_key NULLS FIRST, is_active, starts_at)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"cr_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"cr_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"commission_rules_commission_rate_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((commission_rate >= (0)::numeric) AND (commission_rate <= (100)::numeric)))\"\n                },\n                {\n                    \"name\": \"commission_rules_max_app_fee_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_app_fee_aed IS NULL) OR (max_app_fee_aed >= (0)::numeric)))\"\n                },\n                {\n                    \"name\": \"commission_rules_min_app_fee_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((min_app_fee_aed >= (0)::numeric))\"\n                },\n                {\n                    \"name\": \"commission_rules_organiser_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (organiser_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"commission_rules_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"content_draft_events\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"details\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"draft_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"nextval('content_draft_events_id_seq'::regclass)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"content_draft_events_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX content_draft_events_pkey ON public.content_draft_events USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"cde_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"cde_read_owner\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"content_draft_events_action_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((action = ANY (ARRAY['created'::text, 'updated'::text, 'published'::text, 'archived'::text, 'expired'::text])))\"\n                },\n                {\n                    \"name\": \"content_draft_events_draft_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (draft_id) REFERENCES content_drafts(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"content_draft_events_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"content_drafts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"context\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"payload\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'draft'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Draft-first objects for creation flows. No templates: users reuse by starting from a draft or history suggestion.\",\n            \"indexes\": [\n                {\n                    \"name\": \"content_drafts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX content_drafts_pkey ON public.content_drafts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"drafts_owner_read\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"drafts_owner_write\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"content_drafts_context_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context = ANY (ARRAY['game'::text, 'meetup'::text, 'challenge'::text])))\"\n                },\n                {\n                    \"name\": \"content_drafts_owner_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"content_drafts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"content_drafts_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['draft'::text, 'published'::text, 'archived'::text, 'expired'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"content_enforcement\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"target_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_table\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Per-row moderation state. shadow_hide removes from public listings; takedown indicates removal (views must respect).\",\n            \"indexes\": [\n                {\n                    \"name\": \"content_enforcement_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX content_enforcement_pkey ON public.content_enforcement USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"content_enforcement_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"content_enforcement_action_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((action = ANY (ARRAY['shadow_hide'::text, 'takedown'::text])))\"\n                },\n                {\n                    \"name\": \"content_enforcement_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"content_enforcement_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"content_reports\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"details\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason_code\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reporter_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"resolution_notes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"resolved_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_table\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"User-submitted reports on any content; admins review and resolve with notes.\",\n            \"indexes\": [\n                {\n                    \"name\": \"content_reports_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX content_reports_pkey ON public.content_reports USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_content_reports_status\",\n                    \"definition\": \"CREATE INDEX idx_content_reports_status ON public.content_reports USING btree (status)\"\n                },\n                {\n                    \"name\": \"idx_content_reports_target\",\n                    \"definition\": \"CREATE INDEX idx_content_reports_target ON public.content_reports USING btree (target_table, target_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"content_reports_admin_all\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"content_reports_reporter_ins\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(reporter_user_id = auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"content_reports_reporter_sel\",\n                    \"qual\": \"(reporter_user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"content_reports_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"content_reports_reporter_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (reporter_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"content_reports_resolved_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (resolved_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"content_reports_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'reviewing'::text, 'resolved'::text, 'dismissed'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"context_rating_config\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"context\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"half_life_days\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"180\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"prior_mean\",\n                    \"type\": \"numeric(3,2)\",\n                    \"comment\": null,\n                    \"default\": \"4.50\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"prior_weight\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"8\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"context_rating_config_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX context_rating_config_pkey ON public.context_rating_config USING btree (context)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"context_rating_config_context_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context = ANY (ARRAY['game'::text, 'venue'::text])))\"\n                },\n                {\n                    \"name\": \"context_rating_config_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (context)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"demo_content\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"body\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"demo_content_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX demo_content_pkey ON public.demo_content USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"demo_content_delete\",\n                    \"qual\": \"can_write_row(owner_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"demo_content_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(can_write_row(owner_user_id) AND allow_social_write(owner_user_id))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"demo_content_select\",\n                    \"qual\": \"can_read_row(owner_user_id, visibility)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"demo_content_update\",\n                    \"qual\": \"can_write_row(owner_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": true,\n            \"constraints\": [\n                {\n                    \"name\": \"demo_content_owner_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"demo_content_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"demo_content_visibility_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((visibility = ANY (ARRAY['public'::text, 'circle'::text, 'hidden'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"display_name_banned\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"pattern\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Optional blocklist for display names (literal or regex). Use admin UI/functions to manage.\",\n            \"indexes\": [\n                {\n                    \"name\": \"display_name_banned_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX display_name_banned_pkey ON public.display_name_banned USING btree (pattern)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"display_name_banned_no_read\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"display_name_banned_no_write\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"display_name_banned_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (pattern)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"feed_rank_config\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"engage_half_life_hours\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"48\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"half_life_hours\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"24\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_engage_per_post\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"200\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_km\",\n                    \"type\": \"numeric(6,1)\",\n                    \"comment\": null,\n                    \"default\": \"25.0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_circle\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.08\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_engage\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.25\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_fresh\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.40\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_local\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.07\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_repute\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.15\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_sport\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.05\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_vibes\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.00\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"feed_rank_config_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX feed_rank_config_pkey ON public.feed_rank_config USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"feed_rank_config_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"friend_edges\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"requested_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"responded_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_a\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_b\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"friend_edges_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX friend_edges_pkey ON public.friend_edges USING btree (id)\"\n                },\n                {\n                    \"name\": \"friend_edges_unique_pair\",\n                    \"definition\": \"CREATE UNIQUE INDEX friend_edges_unique_pair ON public.friend_edges USING btree (user_a, user_b)\"\n                },\n                {\n                    \"name\": \"idx_friend_edges_status\",\n                    \"definition\": \"CREATE INDEX idx_friend_edges_status ON public.friend_edges USING btree (status)\"\n                },\n                {\n                    \"name\": \"idx_friend_edges_usera\",\n                    \"definition\": \"CREATE INDEX idx_friend_edges_usera ON public.friend_edges USING btree (user_a)\"\n                },\n                {\n                    \"name\": \"idx_friend_edges_userb\",\n                    \"definition\": \"CREATE INDEX idx_friend_edges_userb ON public.friend_edges USING btree (user_b)\"\n                },\n                {\n                    \"name\": \"ux_friend_edges_pair\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_friend_edges_pair ON public.friend_edges USING btree (LEAST(user_a, user_b), GREATEST(user_a, user_b))\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"friend_edges_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"friend_edges_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR ((auth.uid() = user_a) OR (auth.uid() = user_b)))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"friend_edges_distinct_pair\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((user_a <> user_b))\"\n                },\n                {\n                    \"name\": \"friend_edges_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"friend_edges_requested_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (requested_by) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"friend_edges_responded_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (responded_by) REFERENCES auth.users(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"friend_edges_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text, 'removed'::text])))\"\n                },\n                {\n                    \"name\": \"friend_edges_unique_pair\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (user_a, user_b)\"\n                },\n                {\n                    \"name\": \"friend_edges_user_a_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_a) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"friend_edges_user_b_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_b) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"friend_requests_audit\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"edge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"from_user\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_user\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"friend_requests_audit_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX friend_requests_audit_pkey ON public.friend_requests_audit USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_fra_from\",\n                    \"definition\": \"CREATE INDEX idx_fra_from ON public.friend_requests_audit USING btree (from_user, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_fra_to\",\n                    \"definition\": \"CREATE INDEX idx_fra_to ON public.friend_requests_audit USING btree (to_user, created_at DESC)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"fra_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"fra_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR ((auth.uid() = from_user) OR (auth.uid() = to_user)))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"friend_requests_audit_action_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((action = ANY (ARRAY['requested'::text, 'accepted'::text, 'rejected'::text, 'removed'::text, 'auto_closed'::text])))\"\n                },\n                {\n                    \"name\": \"friend_requests_audit_edge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (edge_id) REFERENCES friend_edges(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"friend_requests_audit_from_user_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (from_user) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"friend_requests_audit_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"friend_requests_audit_to_user_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (to_user) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"friend_status_map\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"friend_status_map_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX friend_status_map_pkey ON public.friend_status_map USING btree (status)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"friend_status_map_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (status)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"friendship_statuses\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"color_hex\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"emoji\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"friendship_statuses_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX friendship_statuses_pkey ON public.friendship_statuses USING btree (status)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"friendship_statuses_color_hex_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((color_hex ~* '^#([0-9A-F]{6})$'::text))\"\n                },\n                {\n                    \"name\": \"friendship_statuses_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (status)\"\n                },\n                {\n                    \"name\": \"friendship_statuses_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'connected'::text, 'rejected'::text, 'blocked'::text, 'removed'::text])))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"friendships\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"peer_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"requested_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Friend (Circle) edges: one row per pair (user_id < peer_user_id).\",\n            \"indexes\": [\n                {\n                    \"name\": \"friendships_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX friendships_pkey ON public.friendships USING btree (user_id, peer_user_id)\"\n                },\n                {\n                    \"name\": \"idx_friendships_requested_by\",\n                    \"definition\": \"CREATE INDEX idx_friendships_requested_by ON public.friendships USING btree (requested_by)\"\n                },\n                {\n                    \"name\": \"idx_friendships_status\",\n                    \"definition\": \"CREATE INDEX idx_friendships_status ON public.friendships USING btree (status)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"friendships_admin_read\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"friendships_insert_requester\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((status = 'pending'::text) AND (requested_by = auth.uid()) AND (((auth.uid() = user_id) AND (user_id < peer_user_id)) OR ((auth.uid() = peer_user_id) AND (user_id < peer_user_id))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"friendships_select_parties\",\n                    \"qual\": \"((auth.uid() = user_id) OR (auth.uid() = peer_user_id))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"friendships_update_parties\",\n                    \"qual\": \"((auth.uid() = user_id) OR (auth.uid() = peer_user_id))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"true\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"friendships_order_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((user_id < peer_user_id))\"\n                },\n                {\n                    \"name\": \"friendships_peer_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (peer_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"friendships_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, peer_user_id)\"\n                },\n                {\n                    \"name\": \"friendships_requested_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (requested_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"friendships_self_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((user_id <> peer_user_id))\"\n                },\n                {\n                    \"name\": \"friendships_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text, 'removed'::text])))\"\n                },\n                {\n                    \"name\": \"friendships_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_invites\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"invited_by_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"responded_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_invites_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_invites_pkey ON public.game_invites USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_game_invites_game\",\n                    \"definition\": \"CREATE INDEX idx_game_invites_game ON public.game_invites USING btree (game_id, to_user_id, status)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"invites_modify_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_invites.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_invites.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"invites_select\",\n                    \"qual\": \"((to_user_id = auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_invites.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid()))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_invites_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_invites_invited_by_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (invited_by_profile_id) REFERENCES profiles(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"game_invites_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"game_invites_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'expired'::text])))\"\n                },\n                {\n                    \"name\": \"game_invites_to_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (to_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_join_requests\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"decided_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"from_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"from_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_join_requests_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_join_requests_pkey ON public.game_join_requests USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"joinreq_insert_requester\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(from_user_id = auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"joinreq_select\",\n                    \"qual\": \"((from_user_id = auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_join_requests.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid()))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"joinreq_update_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_join_requests.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"true\"\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"joinreq_update_requester_cancel\",\n                    \"qual\": \"(from_user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(status = 'cancelled'::text)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_join_requests_from_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (from_profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_join_requests_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_join_requests_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"game_join_requests_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'approved'::text, 'denied'::text, 'cancelled'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_link_tokens\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_uses\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"token\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"used_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_link_tokens_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_link_tokens_pkey ON public.game_link_tokens USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_link_tokens_game\",\n                    \"definition\": \"CREATE INDEX idx_link_tokens_game ON public.game_link_tokens USING btree (game_id, active)\"\n                },\n                {\n                    \"name\": \"idx_link_tokens_token\",\n                    \"definition\": \"CREATE INDEX idx_link_tokens_token ON public.game_link_tokens USING btree (token) WHERE (active = true)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"link_tokens_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_link_tokens.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_link_tokens.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_link_tokens_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"game_link_tokens_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_link_tokens_max_uses_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_uses IS NULL) OR (max_uses >= 1)))\"\n                },\n                {\n                    \"name\": \"game_link_tokens_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"game_link_tokens_used_count_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((used_count >= 0))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_rating_aggregate\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"composite_score\",\n                    \"type\": \"numeric(3,2)\",\n                    \"comment\": null,\n                    \"default\": \"0.00\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_counts\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_sums\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"event_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_event_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_rating_aggregate_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_rating_aggregate_pkey ON public.game_rating_aggregate USING btree (game_id)\"\n                },\n                {\n                    \"name\": \"idx_game_rating_score\",\n                    \"definition\": \"CREATE INDEX idx_game_rating_score ON public.game_rating_aggregate USING btree (composite_score DESC)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"gra_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"gra_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_rating_aggregate_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_rating_aggregate_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (game_id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_rating_dimensions\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weight\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_rating_dimensions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_rating_dimensions_pkey ON public.game_rating_dimensions USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_rating_dimensions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                },\n                {\n                    \"name\": \"game_rating_dimensions_weight_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weight >= (0)::numeric) AND (weight <= (1)::numeric)))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"game_rating_events\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"comment\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"scores\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"One rating per (game, rater_user). Players only.\",\n            \"indexes\": [\n                {\n                    \"name\": \"game_rating_events_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_rating_events_pkey ON public.game_rating_events USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_game_rating_rater\",\n                    \"definition\": \"CREATE INDEX idx_game_rating_rater ON public.game_rating_events USING btree (rater_user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"uq_game_rating_events_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_game_rating_events_unique ON public.game_rating_events USING btree (game_id, rater_user_id)\"\n                },\n                {\n                    \"name\": \"ux_game_rating_once\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_game_rating_once ON public.game_rating_events USING btree (game_id, rater_user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"gre_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"gre_read_scoped\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (rater_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_rating_events_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_rating_events_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"game_rating_events_rater_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"game_rating_events_rater_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_roster\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"joined_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"left_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Roster entries. Only status=active players (role=player) count toward capacity.\",\n            \"indexes\": [\n                {\n                    \"name\": \"game_roster_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_roster_pkey ON public.game_roster USING btree (game_id, profile_id)\"\n                },\n                {\n                    \"name\": \"idx_roster_game_role\",\n                    \"definition\": \"CREATE INDEX idx_roster_game_role ON public.game_roster USING btree (game_id, role, status)\"\n                },\n                {\n                    \"name\": \"idx_roster_user\",\n                    \"definition\": \"CREATE INDEX idx_roster_user ON public.game_roster USING btree (user_id, game_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"roster_delete_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_roster.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"roster_insert_host\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_roster.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"roster_select\",\n                    \"qual\": \"((EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_roster.game_id) AND (is_admin(auth.uid()) OR (g.host_user_id = auth.uid()) OR public.can_view_with_scope(auth.uid(), g.host_user_id, g.listing_visibility))))) OR (user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"roster_update_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_roster.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"true\"\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"roster_update_self_leave\",\n                    \"qual\": \"(user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(status = 'left'::text)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_roster_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_roster_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (game_id, profile_id)\"\n                },\n                {\n                    \"name\": \"game_roster_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_roster_role_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((role = ANY (ARRAY['host'::text, 'player'::text, 'sub'::text, 'spectator'::text])))\"\n                },\n                {\n                    \"name\": \"game_roster_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['active'::text, 'left'::text, 'kicked'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_settlements\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"app_fee_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"app_fee_rate\",\n                    \"type\": \"numeric(5,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"gross_collected_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"notes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"organiser_earnings_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"organiser_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"settled_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"settlement_status\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::settlement_status\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"One settlement snapshot per game. When settled, credits organiser wallet and posts app fee (optional internal account).\",\n            \"indexes\": [\n                {\n                    \"name\": \"game_settlements_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_settlements_pkey ON public.game_settlements USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_game_settlement_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX idx_game_settlement_unique ON public.game_settlements USING btree (game_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"gs_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"gs_self_read\",\n                    \"qual\": \"((auth.uid() = organiser_user_id) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_settlements_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_settlements_gross_collected_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((gross_collected_aed >= (0)::numeric))\"\n                },\n                {\n                    \"name\": \"game_settlements_organiser_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (organiser_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_settlements_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"game_waitlist\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"joined_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"position\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"game_waitlist_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX game_waitlist_pkey ON public.game_waitlist USING btree (game_id, profile_id)\"\n                },\n                {\n                    \"name\": \"idx_waitlist_position\",\n                    \"definition\": \"CREATE INDEX idx_waitlist_position ON public.game_waitlist USING btree (game_id, \\\"position\\\")\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"waitlist_modify_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_waitlist.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_waitlist.game_id) AND ((g.host_user_id = auth.uid()) OR is_admin(auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"waitlist_select\",\n                    \"qual\": \"((EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = game_waitlist.game_id) AND (is_admin(auth.uid()) OR (g.host_user_id = auth.uid()) OR public.can_view_with_scope(auth.uid(), g.host_user_id, g.listing_visibility))))) OR (user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"game_waitlist_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"game_waitlist_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (game_id, profile_id)\"\n                },\n                {\n                    \"name\": \"game_waitlist_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"games\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"allow_spectators\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"cancelled_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"cancelled_reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"capacity\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"end_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"host_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"host_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_cancelled\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"join_policy\",\n                    \"type\": \"text\",\n                    \"comment\": \"How joining works: open|request|invite|link|circle|squad|closed. Independent of listing visibility.\",\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"listing_visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_skill\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"min_skill\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"rules\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"search_tsv\",\n                    \"type\": \"tsvector\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"start_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Core games; listing_visibility controls discoverability; join_policy controls joining. circle/squad logic enforced in gates.\",\n            \"indexes\": [\n                {\n                    \"name\": \"games_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX games_pkey ON public.games USING btree (id)\"\n                },\n                {\n                    \"name\": \"idx_games_cancelled\",\n                    \"definition\": \"CREATE INDEX idx_games_cancelled ON public.games USING btree (is_cancelled)\"\n                },\n                {\n                    \"name\": \"idx_games_host\",\n                    \"definition\": \"CREATE INDEX idx_games_host ON public.games USING btree (host_user_id, host_profile_id)\"\n                },\n                {\n                    \"name\": \"idx_games_search_tsv\",\n                    \"definition\": \"CREATE INDEX idx_games_search_tsv ON public.games USING gin (search_tsv)\"\n                },\n                {\n                    \"name\": \"idx_games_sport_start\",\n                    \"definition\": \"CREATE INDEX idx_games_sport_start ON public.games USING btree (sport, start_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_games_sport_time\",\n                    \"definition\": \"CREATE INDEX idx_games_sport_time ON public.games USING btree (sport, start_at)\"\n                },\n                {\n                    \"name\": \"idx_games_time\",\n                    \"definition\": \"CREATE INDEX idx_games_time ON public.games USING btree (start_at, end_at)\"\n                },\n                {\n                    \"name\": \"idx_games_visibility\",\n                    \"definition\": \"CREATE INDEX idx_games_visibility ON public.games USING btree (listing_visibility, join_policy)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"games_modify_owner\",\n                    \"qual\": \"((host_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((host_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"games_select\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (host_user_id = auth.uid()) OR public.can_view_with_scope(auth.uid(), host_user_id, listing_visibility))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"games_capacity_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((capacity >= 2) AND (capacity <= 64)))\"\n                },\n                {\n                    \"name\": \"games_game_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((game_type = ANY (ARRAY['hosted'::text, 'casual'::text])))\"\n                },\n                {\n                    \"name\": \"games_host_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (host_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"games_join_policy_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((join_policy = ANY (ARRAY['open'::text, 'request'::text, 'invite'::text, 'link'::text])))\"\n                },\n                {\n                    \"name\": \"games_join_policy_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((join_policy = ANY (ARRAY['open'::text, 'request'::text, 'invite'::text, 'link'::text, 'circle'::text, 'squad'::text, 'closed'::text])))\"\n                },\n                {\n                    \"name\": \"games_listing_visibility_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((listing_visibility = ANY (ARRAY['public'::text, 'circle'::text, 'hidden'::text, 'invite'::text, 'link'::text])))\"\n                },\n                {\n                    \"name\": \"games_max_skill_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_skill >= 1) AND (max_skill <= 10)))\"\n                },\n                {\n                    \"name\": \"games_min_skill_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((min_skill >= 1) AND (min_skill <= 10)))\"\n                },\n                {\n                    \"name\": \"games_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"levels\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"level\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"points_required\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Point thresholds mapping to levels (global, not per-sport).\",\n            \"indexes\": [\n                {\n                    \"name\": \"levels_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX levels_pkey ON public.levels USING btree (level)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"levels_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"levels_write_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"levels_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (level)\"\n                },\n                {\n                    \"name\": \"levels_points_required_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((points_required >= 0))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"meetup_attendees\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"actor_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"joined_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meetup_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_meetup_attendees_actor\",\n                    \"definition\": \"CREATE INDEX idx_meetup_attendees_actor ON public.meetup_attendees USING btree (actor_profile_id)\"\n                },\n                {\n                    \"name\": \"idx_meetup_attendees_meetup\",\n                    \"definition\": \"CREATE INDEX idx_meetup_attendees_meetup ON public.meetup_attendees USING btree (meetup_id)\"\n                },\n                {\n                    \"name\": \"idx_meetup_attendees_meetup_status_time\",\n                    \"definition\": \"CREATE INDEX idx_meetup_attendees_meetup_status_time ON public.meetup_attendees USING btree (meetup_id, status, updated_at DESC, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_meetup_attendees_user\",\n                    \"definition\": \"CREATE INDEX idx_meetup_attendees_user ON public.meetup_attendees USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"meetup_attendees_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX meetup_attendees_pkey ON public.meetup_attendees USING btree (meetup_id, actor_profile_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"meetup_attendees_no_direct_delete\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"meetup_attendees_no_direct_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"meetup_attendees_no_direct_update\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"meetup_attendees_select\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_attendees.meetup_id) AND can_read_row(m.owner_user_id, m.visibility))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"meetup_attendees_select_visible\",\n                    \"qual\": \"((auth.uid() = user_id) OR (EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_attendees.meetup_id) AND ((m.visibility = 'public'::text) OR ((m.visibility = 'circle'::text) AND are_synced(auth.uid(), m.owner_user_id)) OR ((m.visibility = 'hidden'::text) AND (auth.uid() = m.owner_user_id)))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"meetup_attendees_write\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_attendees.meetup_id) AND (can_write_row(m.owner_user_id) OR (auth.uid() = meetup_attendees.user_id)))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_attendees.meetup_id) AND (can_write_row(m.owner_user_id) OR (auth.uid() = meetup_attendees.user_id)))))\"\n                }\n            ],\n            \"rls_forced\": true,\n            \"constraints\": [\n                {\n                    \"name\": \"meetup_attendees_actor_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (actor_profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetup_attendees_meetup_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (meetup_id) REFERENCES meetups(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetup_attendees_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (meetup_id, actor_profile_id)\"\n                },\n                {\n                    \"name\": \"meetup_attendees_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['going'::text, 'interested'::text, 'declined'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"meetup_invites\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meetup_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_meetup_inv_meetup\",\n                    \"definition\": \"CREATE INDEX idx_meetup_inv_meetup ON public.meetup_invites USING btree (meetup_id, status)\"\n                },\n                {\n                    \"name\": \"idx_meetup_inv_user\",\n                    \"definition\": \"CREATE INDEX idx_meetup_inv_user ON public.meetup_invites USING btree (to_user_id, status)\"\n                },\n                {\n                    \"name\": \"meetup_invites_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX meetup_invites_pkey ON public.meetup_invites USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"minv_owner_write\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_invites.meetup_id) AND (m.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_invites.meetup_id) AND (m.owner_user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"minv_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_invites.meetup_id) AND (m.owner_user_id = auth.uid())))) OR (to_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"meetup_invites_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"meetup_invites_meetup_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (meetup_id) REFERENCES meetups(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetup_invites_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"meetup_invites_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'expired'::text])))\"\n                },\n                {\n                    \"name\": \"meetup_invites_to_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (to_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"meetup_link_tokens\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_uses\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"meetup_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"token\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"used_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_meetup_link_tokens_m\",\n                    \"definition\": \"CREATE INDEX idx_meetup_link_tokens_m ON public.meetup_link_tokens USING btree (meetup_id, active)\"\n                },\n                {\n                    \"name\": \"idx_meetup_link_tokens_t\",\n                    \"definition\": \"CREATE INDEX idx_meetup_link_tokens_t ON public.meetup_link_tokens USING btree (token) WHERE (active = true)\"\n                },\n                {\n                    \"name\": \"meetup_link_tokens_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX meetup_link_tokens_pkey ON public.meetup_link_tokens USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"mlinks_host\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_link_tokens.meetup_id) AND ((m.owner_user_id = auth.uid()) OR is_admin(auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_link_tokens.meetup_id) AND ((m.owner_user_id = auth.uid()) OR is_admin(auth.uid())))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"meetup_link_tokens_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"meetup_link_tokens_max_uses_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_uses IS NULL) OR (max_uses >= 1)))\"\n                },\n                {\n                    \"name\": \"meetup_link_tokens_meetup_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (meetup_id) REFERENCES meetups(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetup_link_tokens_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"meetup_link_tokens_used_count_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((used_count >= 0))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"meetup_rsvps\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meetup_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"meetup_rsvps_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX meetup_rsvps_pkey ON public.meetup_rsvps USING btree (meetup_id, user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rsvp_read\",\n                    \"qual\": \"((user_id = auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM meetups m\\n  WHERE ((m.id = meetup_rsvps.meetup_id) AND ((m.owner_user_id = auth.uid()) OR is_admin(auth.uid()))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"rsvp_self_write\",\n                    \"qual\": \"(user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(user_id = auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"meetup_rsvps_meetup_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (meetup_id) REFERENCES meetups(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetup_rsvps_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (meetup_id, user_id)\"\n                },\n                {\n                    \"name\": \"meetup_rsvps_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"meetup_rsvps_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['going'::text, 'interested'::text, 'pending'::text, 'declined'::text, 'cancelled'::text])))\"\n                },\n                {\n                    \"name\": \"meetup_rsvps_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"meetups\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"capacity\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"end_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"host_actor_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_cancelled\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lat\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"listing_visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lng\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"location_name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rsvp_policy\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"start_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"starts_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"vibe_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Social “meet-ups”, organiser-hosted. Discovery via listing_visibility; joining via rsvp_policy.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_meetups_owner\",\n                    \"definition\": \"CREATE INDEX idx_meetups_owner ON public.meetups USING btree (owner_user_id)\"\n                },\n                {\n                    \"name\": \"idx_meetups_owner_time\",\n                    \"definition\": \"CREATE INDEX idx_meetups_owner_time ON public.meetups USING btree (owner_user_id, start_at DESC NULLS LAST)\"\n                },\n                {\n                    \"name\": \"idx_meetups_starts_at\",\n                    \"definition\": \"CREATE INDEX idx_meetups_starts_at ON public.meetups USING btree (starts_at)\"\n                },\n                {\n                    \"name\": \"idx_meetups_visibility\",\n                    \"definition\": \"CREATE INDEX idx_meetups_visibility ON public.meetups USING btree (visibility)\"\n                },\n                {\n                    \"name\": \"idx_meetups_visibility_time\",\n                    \"definition\": \"CREATE INDEX idx_meetups_visibility_time ON public.meetups USING btree (visibility, start_at DESC NULLS LAST)\"\n                },\n                {\n                    \"name\": \"meetups_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX meetups_pkey ON public.meetups USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"meetup_owner_write\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"meetup_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (owner_user_id = auth.uid()) OR can_view_with_scope(auth.uid(), owner_user_id, listing_visibility, NULL::uuid))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"meetups_delete_owner\",\n                    \"qual\": \"((auth.uid() = owner_user_id) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"meetups_no_direct_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"meetups_select_visible\",\n                    \"qual\": \"can_view_owner(owner_user_id, visibility)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"meetups_update_owner\",\n                    \"qual\": \"((auth.uid() = owner_user_id) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = owner_user_id) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": true,\n            \"constraints\": [\n                {\n                    \"name\": \"chk_meetups_title_len\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(title) >= 3) AND (char_length(title) <= 80)))\"\n                },\n                {\n                    \"name\": \"chk_meetups_visibility\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((visibility = ANY (ARRAY['public'::text, 'circle'::text, 'hidden'::text])))\"\n                },\n                {\n                    \"name\": \"meetups_capacity_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((capacity IS NULL) OR (capacity > 0)))\"\n                },\n                {\n                    \"name\": \"meetups_host_actor_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (host_actor_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"meetups_listing_visibility_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((listing_visibility = ANY (ARRAY['public'::text, 'circle'::text, 'invite'::text, 'link'::text, 'hidden'::text])))\"\n                },\n                {\n                    \"name\": \"meetups_owner_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"meetups_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"meetups_rsvp_policy_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((rsvp_policy = ANY (ARRAY['open'::text, 'request'::text, 'invite'::text, 'link'::text, 'closed'::text])))\"\n                },\n                {\n                    \"name\": \"meetups_title_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(title) >= 3) AND (char_length(title) <= 120)))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"moderation_actions\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"actor_admin_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"metadata\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"target_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_table\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Append-only audit of all admin/mod actions across the platform.\",\n            \"indexes\": [\n                {\n                    \"name\": \"moderation_actions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX moderation_actions_pkey ON public.moderation_actions USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"mod_actions_admin_read\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"mod_actions_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"moderation_actions_action_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((action_type = ANY (ARRAY['freeze_user'::text, 'unfreeze_user'::text, 'verify_profile'::text, 'unverify_profile'::text, 'ban_username'::text, 'ban_display_name'::text, 'shadow_hide'::text, 'shadow_unhide'::text, 'takedown'::text, 'report_resolved'::text, 'report_dismissed'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_actions_actor_admin_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (actor_admin_id) REFERENCES auth.users(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"moderation_actions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"moderation_ban_terms\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_regex\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lang\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"note\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"scope\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"severity\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"term\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_ban_terms_scope_active\",\n                    \"definition\": \"CREATE INDEX idx_ban_terms_scope_active ON public.moderation_ban_terms USING btree (scope) WHERE (is_active = true)\"\n                },\n                {\n                    \"name\": \"idx_ban_terms_trgm\",\n                    \"definition\": \"CREATE INDEX idx_ban_terms_trgm ON public.moderation_ban_terms USING gin (term gin_trgm_ops)\"\n                },\n                {\n                    \"name\": \"moderation_ban_terms_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX moderation_ban_terms_pkey ON public.moderation_ban_terms USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ban_terms_admin\",\n                    \"qual\": \"(is_admin(auth.uid()) OR is_admin_claimed(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM app_admins a\\n  WHERE (a.user_id = auth.uid()))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR is_admin_claimed(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM app_admins a\\n  WHERE (a.user_id = auth.uid()))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"moderation_ban_terms_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"moderation_ban_terms_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"moderation_ban_terms_scope_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((scope = ANY (ARRAY['post'::text, 'comment'::text, 'username'::text, 'display_name'::text, 'profile_bio'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_ban_terms_severity_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((severity = ANY (ARRAY['warn'::text, 'hide'::text, 'block'::text])))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"moderation_flags\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rule_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"severity\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_kind\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_mod_flags_status\",\n                    \"definition\": \"CREATE INDEX idx_mod_flags_status ON public.moderation_flags USING btree (status, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_mod_flags_target\",\n                    \"definition\": \"CREATE INDEX idx_mod_flags_target ON public.moderation_flags USING btree (target_kind, target_id)\"\n                },\n                {\n                    \"name\": \"moderation_flags_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX moderation_flags_pkey ON public.moderation_flags USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"flags_admin_read\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"flags_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"moderation_flags_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"moderation_flags_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"moderation_flags_severity_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((severity = ANY (ARRAY['warn'::text, 'hide'::text, 'block'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_flags_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'dismissed'::text, 'converted'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_flags_target_kind_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((target_kind = ANY (ARRAY['post'::text, 'comment'::text, 'profile'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"moderation_tickets\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"assigned_to\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"extra\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"priority\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"source\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_kind\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"moderation_tickets_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX moderation_tickets_pkey ON public.moderation_tickets USING btree (id)\"\n                },\n                {\n                    \"name\": \"ux_ticket_open_one\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_ticket_open_one ON public.moderation_tickets USING btree (target_kind, target_id) WHERE (status = ANY (ARRAY['open'::text, 'reviewing'::text]))\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"tickets_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"moderation_tickets_assigned_to_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (assigned_to) REFERENCES auth.users(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"moderation_tickets_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"moderation_tickets_source_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((source = ANY (ARRAY['post_report'::text, 'comment_report'::text, 'auto_flag'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_tickets_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'reviewing'::text, 'resolved'::text, 'dismissed'::text])))\"\n                },\n                {\n                    \"name\": \"moderation_tickets_target_kind_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((target_kind = ANY (ARRAY['post'::text, 'comment'::text, 'profile'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"notification_jobs\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"due_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"fail_reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"payload\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sent_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"type_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_njobs_due\",\n                    \"definition\": \"CREATE INDEX idx_njobs_due ON public.notification_jobs USING btree (status, due_at)\"\n                },\n                {\n                    \"name\": \"idx_njobs_user\",\n                    \"definition\": \"CREATE INDEX idx_njobs_user ON public.notification_jobs USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"notification_jobs_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX notification_jobs_pkey ON public.notification_jobs USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"njobs_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"njobs_read_owner\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"notification_jobs_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"notification_jobs_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'sent'::text, 'skipped'::text, 'cancelled'::text, 'failed'::text])))\"\n                },\n                {\n                    \"name\": \"notification_jobs_type_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (type_key) REFERENCES notification_types(key)\"\n                },\n                {\n                    \"name\": \"notification_jobs_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"notification_templates\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action_route\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"body_template\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"locale\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"title_template\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"notification_templates_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX notification_templates_pkey ON public.notification_templates USING btree (key, locale, version)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ntpl_public\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"notification_templates_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (key) REFERENCES notification_types(key) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"notification_templates_locale_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((locale = ANY (ARRAY['en'::text, 'ar'::text])))\"\n                },\n                {\n                    \"name\": \"notification_templates_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key, locale, version)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"notification_types\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"description_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Stable keys for app events (e.g., game.invited, reward.badge_awarded).\",\n            \"indexes\": [\n                {\n                    \"name\": \"notification_types_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX notification_types_pkey ON public.notification_types USING btree (key)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"nt_public\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"notification_types_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"notifications\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"action_route\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"body\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"context\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_read\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"read_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"title\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"type_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"In-app inbox items. Owner-only view.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_notifications_unread\",\n                    \"definition\": \"CREATE INDEX idx_notifications_unread ON public.notifications USING btree (user_id, is_read) WHERE (is_read = false)\"\n                },\n                {\n                    \"name\": \"idx_notifications_user_created\",\n                    \"definition\": \"CREATE INDEX idx_notifications_user_created ON public.notifications USING btree (user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"notifications_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"notif_read_owner\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"notif_write_owner\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"notifications_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"notifications_type_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (type_key) REFERENCES notification_types(key)\"\n                },\n                {\n                    \"name\": \"notifications_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"opening_hours\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"close_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_open\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"open_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weekday\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_opening_hours_space_day\",\n                    \"definition\": \"CREATE INDEX idx_opening_hours_space_day ON public.opening_hours USING btree (venue_space_id, weekday)\"\n                },\n                {\n                    \"name\": \"opening_hours_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX opening_hours_pkey ON public.opening_hours USING btree (venue_space_id, weekday)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"hours_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = opening_hours.venue_space_id))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = opening_hours.venue_space_id))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"hours_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"opening_hours_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (venue_space_id, weekday)\"\n                },\n                {\n                    \"name\": \"opening_hours_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"opening_hours_weekday_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weekday >= 0) AND (weekday <= 6)))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"payout_beneficiaries\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"destination\",\n                    \"type\": \"destination_type\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"details\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_default\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_verified\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"payout_beneficiaries_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX payout_beneficiaries_pkey ON public.payout_beneficiaries USING btree (id)\"\n                },\n                {\n                    \"name\": \"payout_beneficiaries_user_id_is_default_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX payout_beneficiaries_user_id_is_default_key ON public.payout_beneficiaries USING btree (user_id, is_default)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"ben_self_delete\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"ben_self_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ben_self_select\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"ben_self_update\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = user_id) AND (NOT (is_verified IS DISTINCT FROM is_verified)))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"payout_beneficiaries_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"payout_beneficiaries_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"payout_beneficiaries_user_id_is_default_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (user_id, is_default) DEFERRABLE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"payouts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"amount_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"approved_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"beneficiary_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"failure_reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"paid_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"processed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"requested_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"payout_status\",\n                    \"comment\": null,\n                    \"default\": \"'requested'::payout_status\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"User-initiated withdrawals. Approval/processing by admin or automated ops moves money and posts ledger debits.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_payouts_user_time\",\n                    \"definition\": \"CREATE INDEX idx_payouts_user_time ON public.payouts USING btree (user_id, requested_at DESC)\"\n                },\n                {\n                    \"name\": \"payouts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX payouts_pkey ON public.payouts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"po_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"po_self_read\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"payouts_amount_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((amount_aed > (0)::numeric))\"\n                },\n                {\n                    \"name\": \"payouts_beneficiary_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (beneficiary_id) REFERENCES payout_beneficiaries(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"payouts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"payouts_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"point_ledger\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"delta\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rule_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"source_event_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Append-only. Use negative deltas for clawbacks. Partial-unique (user,rule,event) when event_id is present.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_point_ledger_sport\",\n                    \"definition\": \"CREATE INDEX idx_point_ledger_sport ON public.point_ledger USING btree (sport)\"\n                },\n                {\n                    \"name\": \"idx_point_ledger_user_time\",\n                    \"definition\": \"CREATE INDEX idx_point_ledger_user_time ON public.point_ledger USING btree (user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"point_ledger_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX point_ledger_pkey ON public.point_ledger USING btree (id)\"\n                },\n                {\n                    \"name\": \"uq_point_ledger_idem\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_point_ledger_idem ON public.point_ledger USING btree (user_id, COALESCE(rule_key, '_'::text), source_event_id) WHERE (source_event_id IS NOT NULL)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ledger_no_write\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ledger_owner_read\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"point_ledger_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"point_ledger_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"point_ledger_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"post_comments\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"author_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"author_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"body\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_deleted\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_hidden_admin\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"parent_comment_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"post_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_comments_author\",\n                    \"definition\": \"CREATE INDEX idx_comments_author ON public.post_comments USING btree (author_user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_post_comments_parent\",\n                    \"definition\": \"CREATE INDEX idx_post_comments_parent ON public.post_comments USING btree (parent_comment_id)\"\n                },\n                {\n                    \"name\": \"idx_post_comments_post\",\n                    \"definition\": \"CREATE INDEX idx_post_comments_post ON public.post_comments USING btree (post_id, created_at)\"\n                },\n                {\n                    \"name\": \"post_comments_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX post_comments_pkey ON public.post_comments USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"comments_block_frozen\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(NOT is_frozen(auth.uid(), 'commenting'::text))\"\n                },\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"comments_delete_owner\",\n                    \"qual\": \"(auth.uid() = author_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"comments_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = author_user_id) AND (EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_comments.post_id) AND can_view_post(auth.uid(), p.*)))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"comments_select\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_comments.post_id) AND can_view_post(auth.uid(), p.*))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"comments_update_block_frozen\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(NOT is_frozen(auth.uid(), 'commenting'::text))\"\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"comments_update_owner\",\n                    \"qual\": \"(auth.uid() = author_user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = author_user_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"post_comments_author_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (author_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"post_comments_author_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (author_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_comments_body_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(body) >= 1) AND (char_length(body) <= 2000)))\"\n                },\n                {\n                    \"name\": \"post_comments_parent_comment_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (parent_comment_id) REFERENCES post_comments(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_comments_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"post_comments_post_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"post_hides\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"post_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"post_hides_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX post_hides_pkey ON public.post_hides USING btree (post_id, owner_user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"hides_upsert\",\n                    \"qual\": \"(owner_user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(owner_user_id = auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"post_hides_owner_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_hides_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (post_id, owner_user_id)\"\n                },\n                {\n                    \"name\": \"post_hides_post_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"post_likes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"post_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_post_likes_user\",\n                    \"definition\": \"CREATE INDEX idx_post_likes_user ON public.post_likes USING btree (user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"post_likes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX post_likes_pkey ON public.post_likes USING btree (post_id, user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"likes_delete\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"likes_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = user_id) AND (EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_likes.post_id) AND can_view_post(auth.uid(), p.*)))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"likes_select\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_likes.post_id) AND can_view_post(auth.uid(), p.*))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"post_likes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (post_id, user_id)\"\n                },\n                {\n                    \"name\": \"post_likes_post_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_likes_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"post_reports\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"details\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"post_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reporter_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_post_reports_status\",\n                    \"definition\": \"CREATE INDEX idx_post_reports_status ON public.post_reports USING btree (status, created_at DESC)\"\n                },\n                {\n                    \"name\": \"post_reports_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX post_reports_pkey ON public.post_reports USING btree (id)\"\n                },\n                {\n                    \"name\": \"uniq_one_report_per_user\",\n                    \"definition\": \"CREATE UNIQUE INDEX uniq_one_report_per_user ON public.post_reports USING btree (post_id, reporter_user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"reports_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = reporter_user_id) AND (EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_reports.post_id) AND can_view_post(auth.uid(), p.*)))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"reports_select\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (reporter_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"post_reports_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"post_reports_post_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_reports_reason_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(reason) >= 3) AND (char_length(reason) <= 140)))\"\n                },\n                {\n                    \"name\": \"post_reports_reporter_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (reporter_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"post_reports_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'reviewing'::text, 'resolved'::text, 'dismissed'::text])))\"\n                },\n                {\n                    \"name\": \"uniq_one_report_per_user\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (post_id, reporter_user_id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"post_vibes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"assigned_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"post_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"vibe_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_post_vibes_post\",\n                    \"definition\": \"CREATE INDEX idx_post_vibes_post ON public.post_vibes USING btree (post_id)\"\n                },\n                {\n                    \"name\": \"idx_post_vibes_vibe\",\n                    \"definition\": \"CREATE INDEX idx_post_vibes_vibe ON public.post_vibes USING btree (vibe_id)\"\n                },\n                {\n                    \"name\": \"idx_post_vibes_vibe_post\",\n                    \"definition\": \"CREATE INDEX idx_post_vibes_vibe_post ON public.post_vibes USING btree (vibe_id, post_id)\"\n                },\n                {\n                    \"name\": \"post_vibes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX post_vibes_pkey ON public.post_vibes USING btree (post_id, vibe_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"postv_author_write\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_vibes.post_id) AND (p.author_user_id = auth.uid()))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_vibes.post_id) AND (p.author_user_id = auth.uid()))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"postv_select\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_vibes.post_id) AND can_view_post(auth.uid(), p.*))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"postv_write\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_vibes.post_id) AND (p.author_user_id = auth.uid()))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM posts p\\n  WHERE ((p.id = post_vibes.post_id) AND (p.author_user_id = auth.uid()))))\"\n                }\n            ],\n            \"rls_forced\": true,\n            \"constraints\": [\n                {\n                    \"name\": \"post_vibes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (post_id, vibe_id)\"\n                },\n                {\n                    \"name\": \"post_vibes_post_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"posts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"author_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"author_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"body\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"comment_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"geo_lat\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"geo_lng\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_deleted\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_hidden_admin\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"kind\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lang\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"like_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"link_token\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"media\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'[]'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"primary_vibe_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"search_tsv\",\n                    \"type\": \"tsvector\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_posts_author\",\n                    \"definition\": \"CREATE INDEX idx_posts_author ON public.posts USING btree (author_user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_posts_geo\",\n                    \"definition\": \"CREATE INDEX idx_posts_geo ON public.posts USING btree (geo_lat, geo_lng) WHERE ((geo_lat IS NOT NULL) AND (geo_lng IS NOT NULL))\"\n                },\n                {\n                    \"name\": \"idx_posts_kind_created\",\n                    \"definition\": \"CREATE INDEX idx_posts_kind_created ON public.posts USING btree (kind, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_posts_search_tsv\",\n                    \"definition\": \"CREATE INDEX idx_posts_search_tsv ON public.posts USING gin (search_tsv)\"\n                },\n                {\n                    \"name\": \"idx_posts_sport_created\",\n                    \"definition\": \"CREATE INDEX idx_posts_sport_created ON public.posts USING btree (sport_key, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_posts_venue\",\n                    \"definition\": \"CREATE INDEX idx_posts_venue ON public.posts USING btree (venue_id)\"\n                },\n                {\n                    \"name\": \"idx_posts_venue_created\",\n                    \"definition\": \"CREATE INDEX idx_posts_venue_created ON public.posts USING btree (venue_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"idx_posts_visibility\",\n                    \"definition\": \"CREATE INDEX idx_posts_visibility ON public.posts USING btree (visibility)\"\n                },\n                {\n                    \"name\": \"posts_link_token_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX posts_link_token_key ON public.posts USING btree (link_token)\"\n                },\n                {\n                    \"name\": \"posts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX posts_pkey ON public.posts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"posts_block_frozen\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(NOT is_frozen(auth.uid(), 'posting'::text))\"\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"posts_owner_update\",\n                    \"qual\": \"((auth.uid() = author_user_id) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((auth.uid() = author_user_id) OR is_admin(auth.uid()))\"\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"posts_owner_write\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = author_user_id)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"posts_select\",\n                    \"qual\": \"(is_admin(auth.uid()) OR can_view_post(auth.uid(), posts.*))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"posts_update_block_frozen\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"authenticated\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(NOT is_frozen(auth.uid(), 'posting'::text))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"posts_author_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (author_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"posts_author_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (author_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"posts_kind_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((kind = ANY (ARRAY['moment'::text, 'dab'::text, 'kickin'::text])))\"\n                },\n                {\n                    \"name\": \"posts_link_token_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (link_token)\"\n                },\n                {\n                    \"name\": \"posts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"posts_primary_vibe_fk\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (primary_vibe_id) REFERENCES vibes(id) ON DELETE SET NULL\"\n                },\n                {\n                    \"name\": \"posts_visibility_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((visibility = ANY (ARRAY['public'::text, 'circle'::text, 'link'::text, 'private'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"profile_verifications\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"verified\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"verified_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"verified_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Verification state for a profile (player or organiser).\",\n            \"indexes\": [\n                {\n                    \"name\": \"profile_verifications_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX profile_verifications_pkey ON public.profile_verifications USING btree (profile_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"profile_verif_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"profile_verifications_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (profile_id)\"\n                },\n                {\n                    \"name\": \"profile_verifications_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"profile_verifications_verified_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (verified_by) REFERENCES auth.users(id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"profiles\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"avatar_url\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"bio\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"city\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"country\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'UAE'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"display_name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"display_name_norm\",\n                    \"type\": \"text\",\n                    \"comment\": \"Normalized display name (lowercase, collapsed spaces) for unique constraint & search.\",\n                    \"default\": \"normalize_display_name(display_name)\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"geo_lat\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"geo_lng\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"uuid_generate_v4()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"False when profile is benched (hidden from community but still usable for sports features).\",\n                    \"default\": \"true\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"language\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'en'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"profile_type\",\n                    \"type\": \"text\",\n                    \"comment\": \"Defines the role context: player or organiser.\",\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": \"FK to auth.users; immutable anchor for all user activity.\",\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"username\",\n                    \"type\": \"citext\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"verified\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Represents a Player or Organiser profile. Each user may have one of each type.\",\n            \"indexes\": [\n                {\n                    \"name\": \"gin_profiles_display_name_norm_trgm\",\n                    \"definition\": \"CREATE INDEX gin_profiles_display_name_norm_trgm ON public.profiles USING gin (display_name_norm gin_trgm_ops)\"\n                },\n                {\n                    \"name\": \"gin_profiles_display_name_trgm\",\n                    \"definition\": \"CREATE INDEX gin_profiles_display_name_trgm ON public.profiles USING gin (display_name gin_trgm_ops)\"\n                },\n                {\n                    \"name\": \"idx_profiles_active_true\",\n                    \"definition\": \"CREATE INDEX idx_profiles_active_true ON public.profiles USING btree (id) WHERE (is_active = true)\"\n                },\n                {\n                    \"name\": \"idx_profiles_city_language\",\n                    \"definition\": \"CREATE INDEX idx_profiles_city_language ON public.profiles USING btree (city, language)\"\n                },\n                {\n                    \"name\": \"idx_profiles_geo\",\n                    \"definition\": \"CREATE INDEX idx_profiles_geo ON public.profiles USING btree (geo_lat, geo_lng) WHERE ((geo_lat IS NOT NULL) AND (geo_lng IS NOT NULL))\"\n                },\n                {\n                    \"name\": \"idx_profiles_user_type\",\n                    \"definition\": \"CREATE INDEX idx_profiles_user_type ON public.profiles USING btree (user_id, profile_type)\"\n                },\n                {\n                    \"name\": \"idx_profiles_username\",\n                    \"definition\": \"CREATE INDEX idx_profiles_username ON public.profiles USING btree (username)\"\n                },\n                {\n                    \"name\": \"profiles_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id)\"\n                },\n                {\n                    \"name\": \"profiles_user_id_profile_type_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX profiles_user_id_profile_type_key ON public.profiles USING btree (user_id, profile_type)\"\n                },\n                {\n                    \"name\": \"profiles_username_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX profiles_username_key ON public.profiles USING btree (username)\"\n                },\n                {\n                    \"name\": \"uq_profiles_display_name_norm\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_profiles_display_name_norm ON public.profiles USING btree (display_name_norm) WHERE (display_name_norm IS NOT NULL)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"profiles_insert_self\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"profiles_select_owner\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"profiles_select_public\",\n                    \"qual\": \"(is_active = true)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"profiles_update_owner\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"chk_profiles_display_name_vs_username\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((NOT display_name_conflicts_username(display_name, username)))\"\n                },\n                {\n                    \"name\": \"profiles_display_name_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(display_name) >= 2) AND (char_length(display_name) <= 50)))\"\n                },\n                {\n                    \"name\": \"profiles_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"profiles_profile_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((profile_type = ANY (ARRAY['player'::text, 'organiser'::text])))\"\n                },\n                {\n                    \"name\": \"profiles_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"profiles_user_id_profile_type_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (user_id, profile_type)\"\n                },\n                {\n                    \"name\": \"profiles_username_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (username)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"rating_reports\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rating_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reporter_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'open'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"rating_reports_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX rating_reports_pkey ON public.rating_reports USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"DELETE\",\n                    \"name\": \"rr_delete_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"rr_insert\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(reporter_user_id = auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rr_read\",\n                    \"qual\": \"((reporter_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"rr_update_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"rating_reports_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"rating_reports_rating_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rating_id) REFERENCES ratings(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"rating_reports_reporter_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (reporter_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"rating_reports_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['open'::text, 'reviewed'::text, 'actioned'::text, 'dismissed'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"ratings\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"aspects\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"comment\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"context_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"context_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_flagged\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"stars\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"target_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"target_venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weight\",\n                    \"type\": \"numeric\",\n                    \"comment\": null,\n                    \"default\": \"1.0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_ratings_by_target_game\",\n                    \"definition\": \"CREATE INDEX idx_ratings_by_target_game ON public.ratings USING btree (target_game_id) WHERE (target_game_id IS NOT NULL)\"\n                },\n                {\n                    \"name\": \"idx_ratings_by_target_user\",\n                    \"definition\": \"CREATE INDEX idx_ratings_by_target_user ON public.ratings USING btree (target_user_id) WHERE (target_user_id IS NOT NULL)\"\n                },\n                {\n                    \"name\": \"idx_ratings_by_target_venue\",\n                    \"definition\": \"CREATE INDEX idx_ratings_by_target_venue ON public.ratings USING btree (target_venue_id) WHERE (target_venue_id IS NOT NULL)\"\n                },\n                {\n                    \"name\": \"ratings_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX ratings_pkey ON public.ratings USING btree (id)\"\n                },\n                {\n                    \"name\": \"ux_rate_game\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_rate_game ON public.ratings USING btree (rater_user_id, context_type, context_id, target_type, target_game_id) WHERE (target_type = 'game'::text)\"\n                },\n                {\n                    \"name\": \"ux_rate_user\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_rate_user ON public.ratings USING btree (rater_user_id, context_type, context_id, target_type, target_user_id) WHERE (target_type = ANY (ARRAY['user'::text, 'organiser'::text]))\"\n                },\n                {\n                    \"name\": \"ux_rate_venue\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_rate_venue ON public.ratings USING btree (rater_user_id, context_type, context_id, target_type, target_venue_id) WHERE (target_type = 'venue'::text)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ratings_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ratings_read\",\n                    \"qual\": \"((rater_user_id = auth.uid()) OR (target_user_id = auth.uid()) OR ((target_game_id IS NOT NULL) AND (EXISTS ( SELECT 1\\n   FROM games g\\n  WHERE ((g.id = ratings.target_game_id) AND (g.host_user_id = auth.uid()))))) OR ((target_venue_id IS NOT NULL) AND (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.venue_id = ( SELECT v2.id\\n           FROM (venue_spaces vs2\\n             JOIN venues v2 ON ((v2.id = vs2.venue_id)))\\n          WHERE (vs2.id = ( SELECT gg.venue_space_id\\n                   FROM games gg\\n                  WHERE (gg.id = ratings.context_id)))\\n         LIMIT 1))))) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"ratings_context_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context_type = 'game'::text))\"\n                },\n                {\n                    \"name\": \"ratings_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"ratings_rater_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"ratings_stars_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((stars >= 1) AND (stars <= 5)))\"\n                },\n                {\n                    \"name\": \"ratings_target_presence\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((((target_type = 'user'::text) AND (target_user_id IS NOT NULL) AND (target_venue_id IS NULL) AND (target_game_id IS NULL)) OR ((target_type = 'organiser'::text) AND (target_user_id IS NOT NULL) AND (target_venue_id IS NULL) AND (target_game_id IS NULL)) OR ((target_type = 'venue'::text) AND (target_venue_id IS NOT NULL) AND (target_user_id IS NULL) AND (target_game_id IS NULL)) OR ((target_type = 'game'::text) AND (target_game_id IS NOT NULL) AND (target_user_id IS NULL) AND (target_venue_id IS NULL))))\"\n                },\n                {\n                    \"name\": \"ratings_target_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((target_type = ANY (ARRAY['user'::text, 'organiser'::text, 'venue'::text, 'game'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"reputation_config\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"half_life_days\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"180\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"prior_mean\",\n                    \"type\": \"numeric(3,2)\",\n                    \"comment\": null,\n                    \"default\": \"4.50\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"prior_weight\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"8\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"reputation_config_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reputation_config_pkey ON public.reputation_config USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reputation_config_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"reputation_dimensions\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"applicable_to\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weight\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"reputation_dimensions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reputation_dimensions_pkey ON public.reputation_dimensions USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reputation_dimensions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                },\n                {\n                    \"name\": \"reputation_dimensions_weight_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weight >= (0)::numeric) AND (weight <= (1)::numeric)))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"restrictions\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"target_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Directional restrictions. Hidden = soft mute; Blocked = hard block.\",\n            \"indexes\": [\n                {\n                    \"name\": \"restrictions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX restrictions_pkey ON public.restrictions USING btree (user_id, target_user_id, type)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"restrictions_rw_owner\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"restrictions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, target_user_id, type)\"\n                },\n                {\n                    \"name\": \"restrictions_self_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((user_id <> target_user_id))\"\n                },\n                {\n                    \"name\": \"restrictions_target_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (target_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"restrictions_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((type = ANY (ARRAY['hidden'::text, 'blocked'::text])))\"\n                },\n                {\n                    \"name\": \"restrictions_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"reuse_fingerprints\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"context\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"fields\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"hash\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Normalized keys for draft re-use. No PII; only structural fields for similarity/popularity.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_rf_context\",\n                    \"definition\": \"CREATE INDEX idx_rf_context ON public.reuse_fingerprints USING btree (context, version)\"\n                },\n                {\n                    \"name\": \"reuse_fingerprints_context_version_hash_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX reuse_fingerprints_context_version_hash_key ON public.reuse_fingerprints USING btree (context, version, hash)\"\n                },\n                {\n                    \"name\": \"reuse_fingerprints_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reuse_fingerprints_pkey ON public.reuse_fingerprints USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reuse_fingerprints_context_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context = ANY (ARRAY['game'::text, 'meetup'::text, 'challenge'::text])))\"\n                },\n                {\n                    \"name\": \"reuse_fingerprints_context_version_hash_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (context, version, hash)\"\n                },\n                {\n                    \"name\": \"reuse_fingerprints_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"reuse_global_stats\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"context\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"fingerprint_hash\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_used_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"use_count\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"reuse_global_stats_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reuse_global_stats_pkey ON public.reuse_global_stats USING btree (context, version, fingerprint_hash)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"rgs_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rgs_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reuse_global_stats_context_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context = ANY (ARRAY['game'::text, 'meetup'::text, 'challenge'::text])))\"\n                },\n                {\n                    \"name\": \"reuse_global_stats_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (context, version, fingerprint_hash)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"reuse_user_stats\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"context\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"fingerprint_hash\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_payload\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_used_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"use_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_rus_last\",\n                    \"definition\": \"CREATE INDEX idx_rus_last ON public.reuse_user_stats USING btree (user_id, context, last_used_at DESC)\"\n                },\n                {\n                    \"name\": \"reuse_user_stats_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reuse_user_stats_pkey ON public.reuse_user_stats USING btree (user_id, context, version, fingerprint_hash)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rus_owner_read\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"rus_owner_write\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reuse_user_stats_context_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((context = ANY (ARRAY['game'::text, 'meetup'::text, 'challenge'::text])))\"\n                },\n                {\n                    \"name\": \"reuse_user_stats_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, context, version, fingerprint_hash)\"\n                },\n                {\n                    \"name\": \"reuse_user_stats_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"reward_rules\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"badge_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"conditions\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"cooldown_per_user_sec\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"event_keys\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::text[]\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"notes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"points\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rule_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Dynamic rules: match events & conditions → points/badges; idempotency via ledger (user,rule,event_id).\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_reward_rules_active\",\n                    \"definition\": \"CREATE INDEX idx_reward_rules_active ON public.reward_rules USING btree (is_active, sort_order)\"\n                },\n                {\n                    \"name\": \"idx_reward_rules_event_gin\",\n                    \"definition\": \"CREATE INDEX idx_reward_rules_event_gin ON public.reward_rules USING gin (event_keys)\"\n                },\n                {\n                    \"name\": \"reward_rules_key_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX reward_rules_key_key ON public.reward_rules USING btree (key)\"\n                },\n                {\n                    \"name\": \"reward_rules_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX reward_rules_pkey ON public.reward_rules USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"rules_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"rules_write_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"reward_rules_key_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (key)\"\n                },\n                {\n                    \"name\": \"reward_rules_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"reward_rules_rule_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((rule_type = ANY (ARRAY['event'::text, 'milestone'::text, 'streak'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"role_grants\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"granted_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"granted_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"role_grants_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX role_grants_pkey ON public.role_grants USING btree (user_id, role)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"role_grants_no_rw\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"role_grants_granted_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (granted_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"role_grants_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, role)\"\n                },\n                {\n                    \"name\": \"role_grants_role_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (role) REFERENCES roles(role)\"\n                },\n                {\n                    \"name\": \"role_grants_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"roles\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"roles_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX roles_pkey ON public.roles USING btree (role)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"roles_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (role)\"\n                },\n                {\n                    \"name\": \"roles_role_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((role = ANY (ARRAY['admin'::text, 'moderator'::text, 'venue_admin'::text])))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"space_prices\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"end_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"notes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"price_per_hour_aed\",\n                    \"type\": \"numeric(10,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"start_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weekday\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_prices_space_day\",\n                    \"definition\": \"CREATE INDEX idx_prices_space_day ON public.space_prices USING btree (venue_space_id, weekday, is_active)\"\n                },\n                {\n                    \"name\": \"idx_space_prices_day_time\",\n                    \"definition\": \"CREATE INDEX idx_space_prices_day_time ON public.space_prices USING btree (venue_space_id, weekday, start_time, end_time) WHERE (is_active = true)\"\n                },\n                {\n                    \"name\": \"idx_space_prices_quote\",\n                    \"definition\": \"CREATE INDEX idx_space_prices_quote ON public.space_prices USING btree (venue_space_id, weekday, is_active, start_time)\"\n                },\n                {\n                    \"name\": \"space_prices_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX space_prices_pkey ON public.space_prices USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"prices_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = space_prices.venue_space_id))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = space_prices.venue_space_id))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"prices_public_read\",\n                    \"qual\": \"(is_active = true)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"price_valid_range\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((end_time > start_time))\"\n                },\n                {\n                    \"name\": \"space_prices_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"space_prices_price_per_hour_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((price_per_hour_aed >= (0)::numeric))\"\n                },\n                {\n                    \"name\": \"space_prices_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"space_prices_weekday_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weekday >= 0) AND (weekday <= 6)))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"space_slot_grid\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"base_price_aed\",\n                    \"type\": \"numeric(10,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"generated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"granularity_minutes\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"slot_date\",\n                    \"type\": \"date\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"slot_end\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"slot_start\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_grid_hotpath\",\n                    \"definition\": \"CREATE INDEX idx_grid_hotpath ON public.space_slot_grid USING btree (slot_date, venue_space_id, base_price_aed, granularity_minutes)\"\n                },\n                {\n                    \"name\": \"idx_grid_price\",\n                    \"definition\": \"CREATE INDEX idx_grid_price ON public.space_slot_grid USING btree (base_price_aed)\"\n                },\n                {\n                    \"name\": \"idx_grid_space_date\",\n                    \"definition\": \"CREATE INDEX idx_grid_space_date ON public.space_slot_grid USING btree (venue_space_id, slot_date)\"\n                },\n                {\n                    \"name\": \"idx_grid_time\",\n                    \"definition\": \"CREATE INDEX idx_grid_time ON public.space_slot_grid USING btree (slot_start, slot_end)\"\n                },\n                {\n                    \"name\": \"space_slot_grid_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX space_slot_grid_pkey ON public.space_slot_grid USING btree (id)\"\n                },\n                {\n                    \"name\": \"space_slot_grid_venue_space_id_slot_start_slot_end_granular_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX space_slot_grid_venue_space_id_slot_start_slot_end_granular_key ON public.space_slot_grid USING btree (venue_space_id, slot_start, slot_end, granularity_minutes, version)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"grid_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"grid_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"space_slot_grid_granularity_minutes_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((granularity_minutes = ANY (ARRAY[30, 45, 60, 90, 120])))\"\n                },\n                {\n                    \"name\": \"space_slot_grid_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"space_slot_grid_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"space_slot_grid_venue_space_id_slot_start_slot_end_granular_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (venue_space_id, slot_start, slot_end, granularity_minutes, version)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"space_slot_holds\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"end_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"(now() + '00:10:00'::interval)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"purpose\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'booking'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"start_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_holds_space_time\",\n                    \"definition\": \"CREATE INDEX idx_holds_space_time ON public.space_slot_holds USING btree (venue_space_id, start_at, end_at, expires_at)\"\n                },\n                {\n                    \"name\": \"space_slot_holds_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX space_slot_holds_pkey ON public.space_slot_holds USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"holds_read\",\n                    \"qual\": \"((created_by = auth.uid()) OR is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM (venue_spaces s\\n     JOIN venue_members vm ON (((vm.venue_id = s.venue_id) AND (vm.user_id = auth.uid()))))\\n  WHERE (s.id = space_slot_holds.venue_space_id))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"holds_write\",\n                    \"qual\": \"((created_by = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((created_by = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"hold_valid_range\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((end_at > start_at))\"\n                },\n                {\n                    \"name\": \"space_slot_holds_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"space_slot_holds_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"space_slot_holds_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"spatial_ref_sys\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"auth_name\",\n                    \"type\": \"character varying(256)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"auth_srid\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"proj4text\",\n                    \"type\": \"character varying(2048)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"srid\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"srtext\",\n                    \"type\": \"character varying(2048)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"spatial_ref_sys_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX spatial_ref_sys_pkey ON public.spatial_ref_sys USING btree (srid)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"spatial_ref_sys_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (srid)\"\n                },\n                {\n                    \"name\": \"spatial_ref_sys_srid_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((srid > 0) AND (srid <= 998999)))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"sport_profiles\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"skill_level\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sport_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_sport_profiles_user_sport\",\n                    \"definition\": \"CREATE INDEX idx_sport_profiles_user_sport ON public.sport_profiles USING btree (user_id, sport_key)\"\n                },\n                {\n                    \"name\": \"sport_profiles_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX sport_profiles_pkey ON public.sport_profiles USING btree (user_id, sport_key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"sport_profiles_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, sport_key)\"\n                },\n                {\n                    \"name\": \"sport_profiles_skill_level_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((skill_level >= 1) AND (skill_level <= 10)))\"\n                },\n                {\n                    \"name\": \"sport_profiles_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"squad_invites\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"to_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_sqinv_target\",\n                    \"definition\": \"CREATE INDEX idx_sqinv_target ON public.squad_invites USING btree (squad_id, status)\"\n                },\n                {\n                    \"name\": \"idx_sqinv_to\",\n                    \"definition\": \"CREATE INDEX idx_sqinv_to ON public.squad_invites USING btree (to_user_id, status)\"\n                },\n                {\n                    \"name\": \"squad_invites_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX squad_invites_pkey ON public.squad_invites USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"squad_invites_owner_write\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_invites.squad_id) AND (s.owner_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_invites.squad_id) AND (s.owner_user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"squad_invites_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_invites.squad_id) AND (s.owner_user_id = auth.uid())))) OR (to_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"squad_invites_created_by_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"squad_invites_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"squad_invites_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squad_invites_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'expired'::text])))\"\n                },\n                {\n                    \"name\": \"squad_invites_to_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (to_profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"squad_join_requests\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"decided_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"message\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'pending'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_sq_req_squad\",\n                    \"definition\": \"CREATE INDEX idx_sq_req_squad ON public.squad_join_requests USING btree (squad_id, status)\"\n                },\n                {\n                    \"name\": \"idx_sq_req_user\",\n                    \"definition\": \"CREATE INDEX idx_sq_req_user ON public.squad_join_requests USING btree (user_id, status)\"\n                },\n                {\n                    \"name\": \"squad_join_requests_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX squad_join_requests_pkey ON public.squad_join_requests USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"squad_join_requests_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"squad_join_requests_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"squad_join_requests_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squad_join_requests_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'cancelled'::text])))\"\n                },\n                {\n                    \"name\": \"squad_join_requests_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"squad_link_tokens\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"expires_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_uses\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"token\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"used_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_sq_links_squad\",\n                    \"definition\": \"CREATE INDEX idx_sq_links_squad ON public.squad_link_tokens USING btree (squad_id, active)\"\n                },\n                {\n                    \"name\": \"idx_sq_links_token\",\n                    \"definition\": \"CREATE INDEX idx_sq_links_token ON public.squad_link_tokens USING btree (token) WHERE (active = true)\"\n                },\n                {\n                    \"name\": \"squad_link_tokens_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX squad_link_tokens_pkey ON public.squad_link_tokens USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"slink_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (created_by = auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_link_tokens.squad_id) AND (s.created_by_user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"squad_link_tokens_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"squad_link_tokens_max_uses_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_uses IS NULL) OR (max_uses >= 1)))\"\n                },\n                {\n                    \"name\": \"squad_link_tokens_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"squad_link_tokens_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"squad_members\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"joined_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"left_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"squad_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'active'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Membership for player profiles. Organisers cannot join squads. Captains manage roster.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_squad_members_squad\",\n                    \"definition\": \"CREATE INDEX idx_squad_members_squad ON public.squad_members USING btree (squad_id)\"\n                },\n                {\n                    \"name\": \"idx_squad_members_user\",\n                    \"definition\": \"CREATE INDEX idx_squad_members_user ON public.squad_members USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"squad_members_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX squad_members_pkey ON public.squad_members USING btree (squad_id, profile_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"squad_members_owner_captain_write\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_members.squad_id) AND ((s.owner_user_id = auth.uid()) OR is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n           FROM squad_members sm\\n          WHERE ((sm.squad_id = sm.squad_id) AND (sm.user_id = auth.uid()) AND (sm.role = 'captain'::text) AND (sm.status = 'active'::text))))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_members.squad_id) AND ((s.owner_user_id = auth.uid()) OR is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n           FROM squad_members sm\\n          WHERE ((sm.squad_id = sm.squad_id) AND (sm.user_id = auth.uid()) AND (sm.role = 'captain'::text) AND (sm.status = 'active'::text))))))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"squad_members_read\",\n                    \"qual\": \"((EXISTS ( SELECT 1\\n   FROM squads s\\n  WHERE ((s.id = squad_members.squad_id) AND ((s.owner_user_id = auth.uid()) OR is_admin(auth.uid()))))) OR (user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"squad_members_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (squad_id, profile_id)\"\n                },\n                {\n                    \"name\": \"squad_members_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (profile_id) REFERENCES profiles(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squad_members_role_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((role = ANY (ARRAY['member'::text, 'captain'::text])))\"\n                },\n                {\n                    \"name\": \"squad_members_squad_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (squad_id) REFERENCES squads(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squad_members_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['active'::text, 'left'::text, 'kicked'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"squads\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"bio\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"city\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'Dubai'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_by_role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_by_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"join_policy\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'request'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"listing_visibility\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'public'::text\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"logo_url\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"max_members\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"search_tsv\",\n                    \"type\": \"tsvector\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Sport-scoped teams. Owner may be a player or organiser profile. Players can found ≤1 per sport; organisers unlimited (enforced by RPC).\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_squads_search_tsv\",\n                    \"definition\": \"CREATE INDEX idx_squads_search_tsv ON public.squads USING gin (search_tsv)\"\n                },\n                {\n                    \"name\": \"squads_owner_user_id_sport_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX squads_owner_user_id_sport_key ON public.squads USING btree (owner_user_id, sport)\"\n                },\n                {\n                    \"name\": \"squads_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX squads_pkey ON public.squads USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"squads_insert_self\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(created_by_user_id = auth.uid())\"\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"squads_owner_write\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"squads_read\",\n                    \"qual\": \"can_view_squad(auth.uid(), created_by_user_id, listing_visibility)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"squads_read_public\",\n                    \"qual\": \"is_active\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"squads_created_by_profile_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"squads_created_by_role_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((created_by_role = ANY (ARRAY['player'::text, 'organiser'::text])))\"\n                },\n                {\n                    \"name\": \"squads_created_by_role_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((created_by_role = ANY (ARRAY['player'::text, 'organiser'::text])))\"\n                },\n                {\n                    \"name\": \"squads_created_by_user_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squads_join_policy_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((join_policy = ANY (ARRAY['open'::text, 'request'::text, 'invite'::text, 'closed'::text, 'link'::text])))\"\n                },\n                {\n                    \"name\": \"squads_listing_visibility_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((listing_visibility = ANY (ARRAY['public'::text, 'circle'::text, 'invite'::text, 'hidden'::text])))\"\n                },\n                {\n                    \"name\": \"squads_max_members_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((max_members IS NULL) OR ((max_members >= 2) AND (max_members <= 200))))\"\n                },\n                {\n                    \"name\": \"squads_name_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(name) >= 3) AND (char_length(name) <= 60)))\"\n                },\n                {\n                    \"name\": \"squads_name_len_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(name) >= 3) AND (char_length(name) <= 60)))\"\n                },\n                {\n                    \"name\": \"squads_owner_profile_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"squads_owner_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"squads_owner_user_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"squads_owner_user_id_sport_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (owner_user_id, sport)\"\n                },\n                {\n                    \"name\": \"squads_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"surface_catalog\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"surface_catalog_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX surface_catalog_pkey ON public.surface_catalog USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"surface_catalog_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"user_actor_pref\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"preferred_actor_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Stores a user’s preferred acting role. Used by choose_actor() when the app omits actor_type.\",\n            \"indexes\": [\n                {\n                    \"name\": \"user_actor_pref_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_actor_pref_pkey ON public.user_actor_pref USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"user_actor_pref_rw_self\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_actor_pref_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"user_actor_pref_preferred_actor_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((preferred_actor_type = ANY (ARRAY['player'::text, 'organiser'::text])))\"\n                },\n                {\n                    \"name\": \"user_actor_pref_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_badges\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"awarded_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"badge_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"badge_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"context\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"source_rule_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Distinct badges per user; re-award prevented by PK.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_user_badges_user\",\n                    \"definition\": \"CREATE INDEX idx_user_badges_user ON public.user_badges USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"uq_user_badges_user_badge_window\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_user_badges_user_badge_window ON public.user_badges USING btree (user_id, badge_key, ((context ->> 'window'::text)))\"\n                },\n                {\n                    \"name\": \"user_badges_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_badges_pkey ON public.user_badges USING btree (user_id, badge_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ub_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ub_owner_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"user_badges_no_write\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"user_badges_owner_read\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_badges_badge_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (badge_id) REFERENCES badges(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"user_badges_badge_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (badge_key) REFERENCES badges(key)\"\n                },\n                {\n                    \"name\": \"user_badges_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id, badge_id)\"\n                },\n                {\n                    \"name\": \"user_badges_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_freezes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"actor_id()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"frozen_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_frozen\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lifted_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"scope\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'all'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"until\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Frozen users cannot create posts/games, join games, send invites/requests; read-only access remains.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_user_freezes_active\",\n                    \"definition\": \"CREATE INDEX idx_user_freezes_active ON public.user_freezes USING btree (user_id, is_active) WHERE (is_active = true)\"\n                },\n                {\n                    \"name\": \"user_freezes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_freezes_pkey ON public.user_freezes USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"freezes_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"freezes_self_read\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"user_freezes_admin\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_freezes_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"user_freezes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"user_freezes_scope_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((scope = ANY (ARRAY['all'::text, 'posting'::text, 'commenting'::text, 'messaging'::text, 'hosting'::text])))\"\n                },\n                {\n                    \"name\": \"user_freezes_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_hidden_modes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"mode\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'hidden'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"target_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_hidden_owner\",\n                    \"definition\": \"CREATE INDEX idx_hidden_owner ON public.user_hidden_modes USING btree (owner_user_id)\"\n                },\n                {\n                    \"name\": \"idx_hidden_target\",\n                    \"definition\": \"CREATE INDEX idx_hidden_target ON public.user_hidden_modes USING btree (target_user_id)\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_owner_user_id_target_user_id_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_hidden_modes_owner_user_id_target_user_id_key ON public.user_hidden_modes USING btree (owner_user_id, target_user_id)\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_hidden_modes_pkey ON public.user_hidden_modes USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"hidden_owner_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (owner_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"hidden_owner_write\",\n                    \"qual\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((owner_user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_hidden_modes_mode_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((mode = 'hidden'::text))\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_owner_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_owner_user_id_target_user_id_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (owner_user_id, target_user_id)\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"user_hidden_modes_target_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (target_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_reputation_aggregate\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"composite_score\",\n                    \"type\": \"numeric(3,2)\",\n                    \"comment\": null,\n                    \"default\": \"0.00\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_counts\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_sums\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"event_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_event_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_ura_score\",\n                    \"definition\": \"CREATE INDEX idx_ura_score ON public.user_reputation_aggregate USING btree (composite_score DESC)\"\n                },\n                {\n                    \"name\": \"user_reputation_aggregate_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_reputation_aggregate_pkey ON public.user_reputation_aggregate USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ura_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ura_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_reputation_aggregate_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"user_reputation_aggregate_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_reputation_events\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"comment\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ratee_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"scores\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"One row per (game, rater_user, ratee_user). Write via RPC; visible only to rater, ratee, admin.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_repu_ratee_time\",\n                    \"definition\": \"CREATE INDEX idx_repu_ratee_time ON public.user_reputation_events USING btree (ratee_user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"user_reputation_events_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_reputation_events_pkey ON public.user_reputation_events USING btree (id)\"\n                },\n                {\n                    \"name\": \"ux_repu_once_per_game\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_repu_once_per_game ON public.user_reputation_events USING btree (game_id, rater_user_id, ratee_user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ure_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ure_read_scoped\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (rater_user_id = auth.uid()) OR (ratee_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_reputation_events_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"user_reputation_events_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"user_reputation_events_ratee_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (ratee_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"user_reputation_events_rater_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"user_reputation_events_rater_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_settings\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"email_enabled\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"locale\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'en'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"push_enabled\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"quiet_end\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"quiet_start\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"timezone\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'Asia/Dubai'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"user_settings_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_settings_pkey ON public.user_settings USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"us_read_self\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"us_write_self\",\n                    \"qual\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"((user_id = auth.uid()) OR is_admin(auth.uid()))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_settings_locale_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((locale = ANY (ARRAY['en'::text, 'ar'::text])))\"\n                },\n                {\n                    \"name\": \"user_settings_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"user_settings_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"user_status\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"bench_until\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": \"If set, bench automatically ends at/after this time.\",\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"benched_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"block_friend_requests\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"When benched, do not allow new vibe requests (friend requests).\",\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"hide_in_feed\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"When benched, hide authored social content from feeds.\",\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"hide_in_search\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"When benched, exclude from people search & suggestions.\",\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_benched\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"suppress_social_notifications\",\n                    \"type\": \"boolean\",\n                    \"comment\": \"When benched, suppress social-only pings; sports notifications still allowed.\",\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Tracks bench mode. When benched, hide community features but keep sports features active.\",\n            \"indexes\": [\n                {\n                    \"name\": \"user_status_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX user_status_pkey ON public.user_status USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"user_status_insert_self\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"user_status_select_self\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"user_status_update_self\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(auth.uid() = user_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"user_status_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"user_status_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"username_attempts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"attempted_username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"nextval('username_attempts_id_seq'::regclass)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ok\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Telemetry for availability/claim attempts and outcomes.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_username_attempts_user_time\",\n                    \"definition\": \"CREATE INDEX idx_username_attempts_user_time ON public.username_attempts USING btree (user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"username_attempts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX username_attempts_pkey ON public.username_attempts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"username_attempts_insert_by_definer\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"username_attempts_owner_read\",\n                    \"qual\": \"(user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"username_attempts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"username_attempts_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"username_banned\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Globally banned usernames (lowercase), cannot be claimed.\",\n            \"indexes\": [\n                {\n                    \"name\": \"username_banned_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX username_banned_pkey ON public.username_banned USING btree (username)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"username_banned_no_read\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"username_banned_write_by_definer\",\n                    \"qual\": \"(CURRENT_USER = 'postgres'::name)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"username_banned_format_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username ~* '^[a-z0-9_]{3,20}$'::text))\"\n                },\n                {\n                    \"name\": \"username_banned_lower_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username = lower(username)))\"\n                },\n                {\n                    \"name\": \"username_banned_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (username)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"username_changes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"changed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"nextval('username_changes_id_seq'::regclass)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"new_username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"old_username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"profile_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Audit of username changes per user & profile type.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_username_changes_user_time\",\n                    \"definition\": \"CREATE INDEX idx_username_changes_user_time ON public.username_changes USING btree (user_id, changed_at DESC)\"\n                },\n                {\n                    \"name\": \"username_changes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX username_changes_pkey ON public.username_changes USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"username_changes_insert_by_definer\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"username_changes_owner_read\",\n                    \"qual\": \"(user_id = auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"username_changes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"username_changes_profile_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((profile_type = ANY (ARRAY['player'::text, 'organiser'::text])))\"\n                },\n                {\n                    \"name\": \"username_changes_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"username_registry\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"claimed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"released_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"source\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Global username ownership registry with history; one active row per username.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_username_registry_owner\",\n                    \"definition\": \"CREATE INDEX idx_username_registry_owner ON public.username_registry USING btree (owner_user_id, claimed_at DESC)\"\n                },\n                {\n                    \"name\": \"uq_username_registry_active_username\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_username_registry_active_username ON public.username_registry USING btree (username) WHERE (released_at IS NULL)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"username_registry_no_read\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"UPDATE\",\n                    \"name\": \"username_registry_update_by_definer\",\n                    \"qual\": \"(CURRENT_USER = 'postgres'::name)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                },\n                {\n                    \"cmd\": \"INSERT\",\n                    \"name\": \"username_registry_write_by_definer\",\n                    \"qual\": null,\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"username_registry_format_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username ~* '^[a-z0-9_]{3,20}$'::text))\"\n                },\n                {\n                    \"name\": \"username_registry_lower_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username = lower(username)))\"\n                },\n                {\n                    \"name\": \"username_registry_owner_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (owner_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"username_reserved\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"until\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"username\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Globally reserved usernames (lowercase), blocked until NULL or future time.\",\n            \"indexes\": [\n                {\n                    \"name\": \"username_reserved_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX username_reserved_pkey ON public.username_reserved USING btree (username)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"username_reserved_no_read\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"username_reserved_write_by_definer\",\n                    \"qual\": \"(CURRENT_USER = 'postgres'::name)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(CURRENT_USER = 'postgres'::name)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"username_reserved_format_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username ~* '^[a-z0-9_]{3,20}$'::text))\"\n                },\n                {\n                    \"name\": \"username_reserved_lower_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((username = lower(username)))\"\n                },\n                {\n                    \"name\": \"username_reserved_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (username)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_amenities\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"amenity_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"venue_amenities_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_amenities_pkey ON public.venue_amenities USING btree (venue_id, amenity_key)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"amenities_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_amenities.venue_id) AND (vm.user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_amenities.venue_id) AND (vm.user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"amenities_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_amenities_amenity_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (amenity_key) REFERENCES amenities_catalog(key)\"\n                },\n                {\n                    \"name\": \"venue_amenities_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (venue_id, amenity_key)\"\n                },\n                {\n                    \"name\": \"venue_amenities_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_blackouts\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ends_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"reason\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"starts_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_blackouts_space_time\",\n                    \"definition\": \"CREATE INDEX idx_blackouts_space_time ON public.venue_blackouts USING btree (venue_space_id, starts_at, ends_at)\"\n                },\n                {\n                    \"name\": \"idx_blackouts_venue_time\",\n                    \"definition\": \"CREATE INDEX idx_blackouts_venue_time ON public.venue_blackouts USING btree (venue_id, starts_at, ends_at)\"\n                },\n                {\n                    \"name\": \"venue_blackouts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_blackouts_pkey ON public.venue_blackouts USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vblackouts_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vblackouts_write\",\n                    \"qual\": \"is_venue_admin(auth.uid(), venue_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_venue_admin(auth.uid(), venue_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_blackouts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_blackouts_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_blackouts_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_bookings\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_by\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"ends_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"source_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"source_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"starts_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'confirmed'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Conflict-free holds per space. Games/Meetups insert here via RPC to prevent double bookings.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_bookings_space_time\",\n                    \"definition\": \"CREATE INDEX idx_bookings_space_time ON public.venue_bookings USING btree (venue_space_id, starts_at, ends_at)\"\n                },\n                {\n                    \"name\": \"venue_bookings_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_bookings_pkey ON public.venue_bookings USING btree (id)\"\n                },\n                {\n                    \"name\": \"venue_bookings_venue_space_id_tstzrange_excl\",\n                    \"definition\": \"CREATE INDEX venue_bookings_venue_space_id_tstzrange_excl ON public.venue_bookings USING gist (venue_space_id, tstzrange(starts_at, ends_at, '[)'::text)) WHERE (status = ANY (ARRAY['tentative'::text, 'confirmed'::text]))\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vbookings_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vbookings_read\",\n                    \"qual\": \"((EXISTS ( SELECT 1\\n   FROM venue_spaces s\\n  WHERE ((s.id = venue_bookings.venue_space_id) AND is_venue_admin(auth.uid(), s.venue_id)))) OR is_admin(auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"chk_time_order\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((ends_at > starts_at))\"\n                },\n                {\n                    \"name\": \"venue_bookings_created_by_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (created_by) REFERENCES auth.users(id)\"\n                },\n                {\n                    \"name\": \"venue_bookings_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_bookings_source_type_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((source_type = ANY (ARRAY['game'::text, 'meetup'::text, 'manual'::text])))\"\n                },\n                {\n                    \"name\": \"venue_bookings_status_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((status = ANY (ARRAY['tentative'::text, 'confirmed'::text, 'cancelled'::text])))\"\n                },\n                {\n                    \"name\": \"venue_bookings_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_bookings_venue_space_id_tstzrange_excl\",\n                    \"type\": \"x\",\n                    \"definition\": \"EXCLUDE USING gist (venue_space_id WITH =, tstzrange(starts_at, ends_at, '[)'::text) WITH &&) WHERE ((status = ANY (ARRAY['tentative'::text, 'confirmed'::text])))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_members\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"added_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"role\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'manager'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_venue_members_user\",\n                    \"definition\": \"CREATE INDEX idx_venue_members_user ON public.venue_members USING btree (user_id)\"\n                },\n                {\n                    \"name\": \"venue_members_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_members_pkey ON public.venue_members USING btree (venue_id, user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vm_read\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (user_id = auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm2\\n  WHERE ((vm2.venue_id = venue_members.venue_id) AND (vm2.user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vm_write\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm2\\n  WHERE ((vm2.venue_id = venue_members.venue_id) AND (vm2.user_id = auth.uid()) AND (vm2.role = ANY (ARRAY['owner'::text, 'manager'::text]))))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm2\\n  WHERE ((vm2.venue_id = venue_members.venue_id) AND (vm2.user_id = auth.uid()) AND (vm2.role = ANY (ARRAY['owner'::text, 'manager'::text]))))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_members_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (venue_id, user_id)\"\n                },\n                {\n                    \"name\": \"venue_members_role_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((role = ANY (ARRAY['owner'::text, 'manager'::text, 'staff'::text])))\"\n                },\n                {\n                    \"name\": \"venue_members_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_members_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_opening_hours\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"close_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_open\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"open_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weekday\",\n                    \"type\": \"smallint\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"venue_opening_hours_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_opening_hours_pkey ON public.venue_opening_hours USING btree (id)\"\n                },\n                {\n                    \"name\": \"venue_opening_hours_venue_id_weekday_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_opening_hours_venue_id_weekday_key ON public.venue_opening_hours USING btree (venue_id, weekday)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vhours_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vhours_write\",\n                    \"qual\": \"is_venue_admin(auth.uid(), venue_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_venue_admin(auth.uid(), venue_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_opening_hours_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_opening_hours_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_opening_hours_venue_id_weekday_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (venue_id, weekday)\"\n                },\n                {\n                    \"name\": \"venue_opening_hours_weekday_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weekday >= 0) AND (weekday <= 6)))\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_photos\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"url\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_venue_photos_venue\",\n                    \"definition\": \"CREATE INDEX idx_venue_photos_venue ON public.venue_photos USING btree (venue_id, sort_order)\"\n                },\n                {\n                    \"name\": \"venue_photos_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_photos_pkey ON public.venue_photos USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"photos_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_photos.venue_id) AND (vm.user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_photos.venue_id) AND (vm.user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"photos_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_photos_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_photos_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_price_rules\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dow\",\n                    \"type\": \"smallint[]\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"end_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"note\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"price_aed\",\n                    \"type\": \"numeric(10,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"start_time\",\n                    \"type\": \"time without time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_space_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_price_rules_space\",\n                    \"definition\": \"CREATE INDEX idx_price_rules_space ON public.venue_price_rules USING btree (venue_space_id)\"\n                },\n                {\n                    \"name\": \"venue_price_rules_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_price_rules_pkey ON public.venue_price_rules USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vprices_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vprices_write\",\n                    \"qual\": \"(EXISTS ( SELECT 1\\n   FROM venue_spaces s\\n  WHERE ((s.id = venue_price_rules.venue_space_id) AND is_venue_admin(auth.uid(), s.venue_id))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(EXISTS ( SELECT 1\\n   FROM venue_spaces s\\n  WHERE ((s.id = venue_price_rules.venue_space_id) AND is_venue_admin(auth.uid(), s.venue_id))))\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_price_rules_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_price_rules_venue_space_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_space_id) REFERENCES venue_spaces(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_rating_aggregate\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"composite_score\",\n                    \"type\": \"numeric(3,2)\",\n                    \"comment\": null,\n                    \"default\": \"0.00\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_counts\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"dim_sums\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::jsonb\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"event_count\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_event_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_venue_rating_score\",\n                    \"definition\": \"CREATE INDEX idx_venue_rating_score ON public.venue_rating_aggregate USING btree (composite_score DESC)\"\n                },\n                {\n                    \"name\": \"venue_rating_aggregate_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_rating_aggregate_pkey ON public.venue_rating_aggregate USING btree (venue_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vra_admin_write\",\n                    \"qual\": \"is_admin(auth.uid())\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_admin(auth.uid())\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vra_public_read\",\n                    \"qual\": \"true\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_rating_aggregate_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (venue_id)\"\n                },\n                {\n                    \"name\": \"venue_rating_aggregate_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_rating_dimensions\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"weight\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"venue_rating_dimensions_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_rating_dimensions_pkey ON public.venue_rating_dimensions USING btree (key)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_rating_dimensions_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (key)\"\n                },\n                {\n                    \"name\": \"venue_rating_dimensions_weight_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((weight >= (0)::numeric) AND (weight <= (1)::numeric)))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"venue_rating_events\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"comment\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"game_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_profile_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"rater_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"scores\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"One rating per (game, venue, rater_user). Players and organisers allowed if tied to the game at that venue.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_venue_rating_venue\",\n                    \"definition\": \"CREATE INDEX idx_venue_rating_venue ON public.venue_rating_events USING btree (venue_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"uq_venue_rating_events_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX uq_venue_rating_events_unique ON public.venue_rating_events USING btree (game_id, rater_user_id)\"\n                },\n                {\n                    \"name\": \"ux_venue_rating_once\",\n                    \"definition\": \"CREATE UNIQUE INDEX ux_venue_rating_once ON public.venue_rating_events USING btree (game_id, venue_id, rater_user_id)\"\n                },\n                {\n                    \"name\": \"venue_rating_events_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_rating_events_pkey ON public.venue_rating_events USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vre_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vre_read_scoped\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (rater_user_id = auth.uid()))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_rating_events_game_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_rating_events_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_rating_events_rater_profile_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_profile_id) REFERENCES profiles(id) ON DELETE RESTRICT\"\n                },\n                {\n                    \"name\": \"venue_rating_events_rater_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (rater_user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_rating_events_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venue_spaces\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"capacity\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"indoor\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lighting\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"max_players\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"min_players\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"notes\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sport\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"surface\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"surface_key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"venue_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_spaces_active_sport\",\n                    \"definition\": \"CREATE INDEX idx_spaces_active_sport ON public.venue_spaces USING btree (is_active, sport)\"\n                },\n                {\n                    \"name\": \"idx_spaces_sport\",\n                    \"definition\": \"CREATE INDEX idx_spaces_sport ON public.venue_spaces USING btree (sport, is_active)\"\n                },\n                {\n                    \"name\": \"idx_spaces_venue\",\n                    \"definition\": \"CREATE INDEX idx_spaces_venue ON public.venue_spaces USING btree (venue_id, is_active)\"\n                },\n                {\n                    \"name\": \"idx_vspaces_sport_active\",\n                    \"definition\": \"CREATE INDEX idx_vspaces_sport_active ON public.venue_spaces USING btree (sport, is_active)\"\n                },\n                {\n                    \"name\": \"idx_vspaces_venue\",\n                    \"definition\": \"CREATE INDEX idx_vspaces_venue ON public.venue_spaces USING btree (venue_id)\"\n                },\n                {\n                    \"name\": \"venue_spaces_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_spaces_pkey ON public.venue_spaces USING btree (id)\"\n                },\n                {\n                    \"name\": \"venue_spaces_venue_id_name_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX venue_spaces_venue_id_name_key ON public.venue_spaces USING btree (venue_id, name)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"spaces_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_spaces.venue_id) AND (vm.user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venue_spaces.venue_id) AND (vm.user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"spaces_public_read\",\n                    \"qual\": \"(is_active = true)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"vspaces_read\",\n                    \"qual\": \"is_active\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"vspaces_write\",\n                    \"qual\": \"is_venue_admin(auth.uid(), venue_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_venue_admin(auth.uid(), venue_id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venue_spaces_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"venue_spaces_players_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((((min_players IS NULL) OR (min_players >= 1)) AND ((max_players IS NULL) OR (max_players >= 1)) AND ((min_players IS NULL) OR (max_players IS NULL) OR (min_players <= max_players))))\"\n                },\n                {\n                    \"name\": \"venue_spaces_sport_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((sport = ANY (ARRAY['football'::text, 'padel'::text, 'cricket'::text])))\"\n                },\n                {\n                    \"name\": \"venue_spaces_surface_key_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (surface_key) REFERENCES surface_catalog(key)\"\n                },\n                {\n                    \"name\": \"venue_spaces_venue_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (venue_id) REFERENCES venues(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"venue_spaces_venue_id_name_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (venue_id, name)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"venues\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"address_line1\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"amenities\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::text[]\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"city\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'Dubai'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"description_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"district\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"instagram\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_verified\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"lat\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"latitude\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"lng\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"longitude\",\n                    \"type\": \"double precision\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"phone\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"search_tsv\",\n                    \"type\": \"tsvector\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"timezone\",\n                    \"type\": \"text\",\n                    \"comment\": \"IANA TZ; default Asia/Dubai\",\n                    \"default\": \"'Asia/Dubai'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"website\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": \"Physical venue (facility) — multiple spaces/courts.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_venues_active_city\",\n                    \"definition\": \"CREATE INDEX idx_venues_active_city ON public.venues USING btree (is_active, city)\"\n                },\n                {\n                    \"name\": \"idx_venues_city_active\",\n                    \"definition\": \"CREATE INDEX idx_venues_city_active ON public.venues USING btree (city, is_active)\"\n                },\n                {\n                    \"name\": \"idx_venues_geo\",\n                    \"definition\": \"CREATE INDEX idx_venues_geo ON public.venues USING gist (point(lng, lat))\"\n                },\n                {\n                    \"name\": \"idx_venues_is_active\",\n                    \"definition\": \"CREATE INDEX idx_venues_is_active ON public.venues USING btree (is_active)\"\n                },\n                {\n                    \"name\": \"idx_venues_name_en_trgm\",\n                    \"definition\": \"CREATE INDEX idx_venues_name_en_trgm ON public.venues USING gin (name_en gin_trgm_ops)\"\n                },\n                {\n                    \"name\": \"idx_venues_name_trgm\",\n                    \"definition\": \"CREATE INDEX idx_venues_name_trgm ON public.venues USING gin (name_en gin_trgm_ops)\"\n                },\n                {\n                    \"name\": \"idx_venues_search_tsv\",\n                    \"definition\": \"CREATE INDEX idx_venues_search_tsv ON public.venues USING gin (search_tsv)\"\n                },\n                {\n                    \"name\": \"venues_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX venues_pkey ON public.venues USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"venues_manage\",\n                    \"qual\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venues.id) AND (vm.user_id = auth.uid())))))\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"(is_admin(auth.uid()) OR (EXISTS ( SELECT 1\\n   FROM venue_members vm\\n  WHERE ((vm.venue_id = venues.id) AND (vm.user_id = auth.uid())))))\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"venues_public_read\",\n                    \"qual\": \"(is_active = true)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"venues_read\",\n                    \"qual\": \"is_active\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                },\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"venues_write_admin\",\n                    \"qual\": \"is_venue_admin(auth.uid(), id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"is_venue_admin(auth.uid(), id)\"\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"venues_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"vibe_collection_items\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"collection_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"vibe_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_vci_coll_order\",\n                    \"definition\": \"CREATE INDEX idx_vci_coll_order ON public.vibe_collection_items USING btree (collection_id, sort_order)\"\n                },\n                {\n                    \"name\": \"idx_vci_vibe\",\n                    \"definition\": \"CREATE INDEX idx_vci_vibe ON public.vibe_collection_items USING btree (vibe_id)\"\n                },\n                {\n                    \"name\": \"vibe_collection_items_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibe_collection_items_pkey ON public.vibe_collection_items USING btree (collection_id, vibe_id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"vibe_collection_items_collection_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (collection_id) REFERENCES vibe_collections(id) ON DELETE CASCADE\"\n                },\n                {\n                    \"name\": \"vibe_collection_items_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (collection_id, vibe_id)\"\n                },\n                {\n                    \"name\": \"vibe_collection_items_vibe_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (vibe_id) REFERENCES vibes(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"vibe_collections\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"contexts\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::text[]\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"description_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"description_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_vc_active\",\n                    \"definition\": \"CREATE INDEX idx_vc_active ON public.vibe_collections USING btree (is_active)\"\n                },\n                {\n                    \"name\": \"idx_vc_contexts\",\n                    \"definition\": \"CREATE INDEX idx_vc_contexts ON public.vibe_collections USING gin (contexts)\"\n                },\n                {\n                    \"name\": \"idx_vc_key\",\n                    \"definition\": \"CREATE INDEX idx_vc_key ON public.vibe_collections USING btree (key)\"\n                },\n                {\n                    \"name\": \"vibe_collections_key_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibe_collections_key_key ON public.vibe_collections USING btree (key)\"\n                },\n                {\n                    \"name\": \"vibe_collections_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibe_collections_pkey ON public.vibe_collections USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"vibe_collections_key_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (key)\"\n                },\n                {\n                    \"name\": \"vibe_collections_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"vibes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"app_flavors\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::text[]\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"color_hex\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"contexts\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"'{}'::text[]\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"emoji\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"gradient\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"is_active\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"label_ar\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"label_en\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"sort_order\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"theme\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"urgency_level\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"1\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"vibes_key_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibes_key_key ON public.vibes USING btree (key)\"\n                },\n                {\n                    \"name\": \"vibes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibes_pkey ON public.vibes USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"vibes_color_hex_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((color_hex ~* '^#([0-9A-F]{6})$'::text))\"\n                },\n                {\n                    \"name\": \"vibes_ctx_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (is_valid_contexts(contexts))\"\n                },\n                {\n                    \"name\": \"vibes_emoji_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((char_length(emoji) >= 1) AND (char_length(emoji) <= 4)))\"\n                },\n                {\n                    \"name\": \"vibes_gradient_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (is_valid_gradient(gradient))\"\n                },\n                {\n                    \"name\": \"vibes_key_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (key)\"\n                },\n                {\n                    \"name\": \"vibes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"vibes_type_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((type = ANY (ARRAY['feeling'::text, 'action'::text])))\"\n                },\n                {\n                    \"name\": \"vibes_urgency_chk\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK (((urgency_level >= 0) AND (urgency_level <= 3)))\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"vibes_reco_config\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"boost_org\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.08\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"boost_player\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.05\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"true\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"max_km\",\n                    \"type\": \"numeric(6,1)\",\n                    \"comment\": null,\n                    \"default\": \"30.0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"recent_days\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"30\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_activity\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.05\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_locality\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.25\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_mutuals\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.35\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_quality\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.15\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"w_skill\",\n                    \"type\": \"numeric(4,3)\",\n                    \"comment\": null,\n                    \"default\": \"0.20\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"vibes_reco_config_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX vibes_reco_config_pkey ON public.vibes_reco_config USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"vibes_reco_config_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"visibility_scopes\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"scope\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"visibility_scopes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX visibility_scopes_pkey ON public.visibility_scopes USING btree (scope)\"\n                },\n                {\n                    \"name\": \"visibility_scopes_scope_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX visibility_scopes_scope_key ON public.visibility_scopes USING btree (scope)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"visibility_scopes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (scope)\"\n                },\n                {\n                    \"name\": \"visibility_scopes_scope_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((scope = ANY (ARRAY['public'::text, 'circle'::text, 'hidden'::text, 'invite'::text, 'link'::text, 'squad'::text])))\"\n                },\n                {\n                    \"name\": \"visibility_scopes_scope_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (scope)\"\n                }\n            ],\n            \"rls_enabled\": false\n        },\n        {\n            \"table\": \"wallet_ledger\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"amount_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"direction\",\n                    \"type\": \"ledger_direction\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"nextval('wallet_ledger_id_seq'::regclass)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"memo\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"meta\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"ref_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"ref_type\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"status\",\n                    \"type\": \"ledger_status\",\n                    \"comment\": null,\n                    \"default\": \"'posted'::ledger_status\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": \"Append-only journal. Only SECURITY DEFINER engine functions insert rows.\",\n            \"indexes\": [\n                {\n                    \"name\": \"idx_wallet_ledger_ref\",\n                    \"definition\": \"CREATE INDEX idx_wallet_ledger_ref ON public.wallet_ledger USING btree (ref_type, ref_id)\"\n                },\n                {\n                    \"name\": \"idx_wallet_ledger_user_time\",\n                    \"definition\": \"CREATE INDEX idx_wallet_ledger_user_time ON public.wallet_ledger USING btree (user_id, created_at DESC)\"\n                },\n                {\n                    \"name\": \"wallet_ledger_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX wallet_ledger_pkey ON public.wallet_ledger USING btree (id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"ledger_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"ledger_self_read\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"wallet_ledger_amount_aed_check\",\n                    \"type\": \"c\",\n                    \"definition\": \"CHECK ((amount_aed > (0)::numeric))\"\n                },\n                {\n                    \"name\": \"wallet_ledger_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"wallet_ledger_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"wallets\",\n            \"schema\": \"public\",\n            \"columns\": [\n                {\n                    \"name\": \"balance_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"currency\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'AED'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"held_aed\",\n                    \"type\": \"numeric(12,2)\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"wallets_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX wallets_pkey ON public.wallets USING btree (user_id)\"\n                }\n            ],\n            \"policies\": [\n                {\n                    \"cmd\": \"ALL\",\n                    \"name\": \"wallets_block_dml\",\n                    \"qual\": \"false\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": \"false\"\n                },\n                {\n                    \"cmd\": \"SELECT\",\n                    \"name\": \"wallets_self_read\",\n                    \"qual\": \"(auth.uid() = user_id)\",\n                    \"roles\": [\n                        \"public\"\n                    ],\n                    \"permissive\": \"PERMISSIVE\",\n                    \"with_check\": null\n                }\n            ],\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"wallets_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (user_id)\"\n                },\n                {\n                    \"name\": \"wallets_user_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"buckets\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"allowed_mime_types\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"avif_autodetection\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"file_size_limit\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner\",\n                    \"type\": \"uuid\",\n                    \"comment\": \"Field is deprecated, use owner_id instead\",\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"owner_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"public\",\n                    \"type\": \"boolean\",\n                    \"comment\": null,\n                    \"default\": \"false\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"storage.buckettype\",\n                    \"comment\": null,\n                    \"default\": \"'STANDARD'::storage.buckettype\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"bname\",\n                    \"definition\": \"CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name)\"\n                },\n                {\n                    \"name\": \"buckets_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX buckets_pkey ON storage.buckets USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"buckets_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"buckets_analytics\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"format\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": \"'ICEBERG'::text\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"type\",\n                    \"type\": \"storage.buckettype\",\n                    \"comment\": null,\n                    \"default\": \"'ANALYTICS'::storage.buckettype\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"buckets_analytics_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX buckets_analytics_pkey ON storage.buckets_analytics USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"buckets_analytics_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"migrations\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"executed_at\",\n                    \"type\": \"timestamp without time zone\",\n                    \"comment\": null,\n                    \"default\": \"CURRENT_TIMESTAMP\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"hash\",\n                    \"type\": \"character varying(40)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"character varying(100)\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"migrations_name_key\",\n                    \"definition\": \"CREATE UNIQUE INDEX migrations_name_key ON storage.migrations USING btree (name)\"\n                },\n                {\n                    \"name\": \"migrations_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX migrations_pkey ON storage.migrations USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"migrations_name_key\",\n                    \"type\": \"u\",\n                    \"definition\": \"UNIQUE (name)\"\n                },\n                {\n                    \"name\": \"migrations_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"objects\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"bucket_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"last_accessed_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"level\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"metadata\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"owner\",\n                    \"type\": \"uuid\",\n                    \"comment\": \"Field is deprecated, use owner_id instead\",\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"owner_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"path_tokens\",\n                    \"type\": \"text[]\",\n                    \"comment\": null,\n                    \"default\": \"string_to_array(name, '/'::text)\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"user_metadata\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"bucketid_objname\",\n                    \"definition\": \"CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name)\"\n                },\n                {\n                    \"name\": \"idx_name_bucket_level_unique\",\n                    \"definition\": \"CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE \\\"C\\\", bucket_id, level)\"\n                },\n                {\n                    \"name\": \"idx_objects_bucket_id_name\",\n                    \"definition\": \"CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE \\\"C\\\")\"\n                },\n                {\n                    \"name\": \"idx_objects_lower_name\",\n                    \"definition\": \"CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level)\"\n                },\n                {\n                    \"name\": \"name_prefix_search\",\n                    \"definition\": \"CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops)\"\n                },\n                {\n                    \"name\": \"objects_bucket_id_level_idx\",\n                    \"definition\": \"CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE \\\"C\\\")\"\n                },\n                {\n                    \"name\": \"objects_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX objects_pkey ON storage.objects USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"objects_bucketId_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)\"\n                },\n                {\n                    \"name\": \"objects_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"prefixes\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"bucket_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"level\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": \"storage.get_level(name)\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"name\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"updated_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": false\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_prefixes_lower_name\",\n                    \"definition\": \"CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops)\"\n                },\n                {\n                    \"name\": \"prefixes_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX prefixes_pkey ON storage.prefixes USING btree (bucket_id, level, name)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"prefixes_bucketId_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)\"\n                },\n                {\n                    \"name\": \"prefixes_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (bucket_id, level, name)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"s3_multipart_uploads\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"bucket_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"in_progress_size\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"upload_signature\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"user_metadata\",\n                    \"type\": \"jsonb\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"idx_multipart_uploads_list\",\n                    \"definition\": \"CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at)\"\n                },\n                {\n                    \"name\": \"s3_multipart_uploads_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX s3_multipart_uploads_pkey ON storage.s3_multipart_uploads USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"s3_multipart_uploads_bucket_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)\"\n                },\n                {\n                    \"name\": \"s3_multipart_uploads_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                }\n            ],\n            \"rls_enabled\": true\n        },\n        {\n            \"table\": \"s3_multipart_uploads_parts\",\n            \"schema\": \"storage\",\n            \"columns\": [\n                {\n                    \"name\": \"bucket_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"created_at\",\n                    \"type\": \"timestamp with time zone\",\n                    \"comment\": null,\n                    \"default\": \"now()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"etag\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"id\",\n                    \"type\": \"uuid\",\n                    \"comment\": null,\n                    \"default\": \"gen_random_uuid()\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"key\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"owner_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": false\n                },\n                {\n                    \"name\": \"part_number\",\n                    \"type\": \"integer\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"size\",\n                    \"type\": \"bigint\",\n                    \"comment\": null,\n                    \"default\": \"0\",\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"upload_id\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                },\n                {\n                    \"name\": \"version\",\n                    \"type\": \"text\",\n                    \"comment\": null,\n                    \"default\": null,\n                    \"not_null\": true\n                }\n            ],\n            \"comment\": null,\n            \"indexes\": [\n                {\n                    \"name\": \"s3_multipart_uploads_parts_pkey\",\n                    \"definition\": \"CREATE UNIQUE INDEX s3_multipart_uploads_parts_pkey ON storage.s3_multipart_uploads_parts USING btree (id)\"\n                }\n            ],\n            \"policies\": null,\n            \"rls_forced\": false,\n            \"constraints\": [\n                {\n                    \"name\": \"s3_multipart_uploads_parts_bucket_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)\"\n                },\n                {\n                    \"name\": \"s3_multipart_uploads_parts_pkey\",\n                    \"type\": \"p\",\n                    \"definition\": \"PRIMARY KEY (id)\"\n                },\n                {\n                    \"name\": \"s3_multipart_uploads_parts_upload_id_fkey\",\n                    \"type\": \"f\",\n                    \"definition\": \"FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE\"\n                }\n            ],\n            \"rls_enabled\": true\n        }\n    ],\n    \"functions\": [\n        {\n            \"args\": \"\",\n            \"name\": \"email\",\n            \"schema\": \"auth\",\n            \"comment\": \"Deprecated. Use auth.jwt() -> 'email' instead.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"jwt\",\n            \"schema\": \"auth\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"role\",\n            \"schema\": \"auth\",\n            \"comment\": \"Deprecated. Use auth.jwt() -> 'role' instead.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"uid\",\n            \"schema\": \"auth\",\n            \"comment\": \"Deprecated. Use auth.jwt() -> 'sub' instead.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"a uuid, b uuid\",\n            \"name\": \"_assert_not_self\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_badge_key text, p_rule_key text, p_sport text, p_context jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"_award_badge_if_absent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_points integer, p_reason_key text, p_rule_key text, p_sport text, p_event_id uuid\",\n            \"name\": \"_award_points\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p boolean\",\n            \"name\": \"_bool01\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game uuid\",\n            \"name\": \"_can_view_game_for_join\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p double precision\",\n            \"name\": \"_clamp01\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"x numeric\",\n            \"name\": \"_clamp01\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p numeric\",\n            \"name\": \"_clamp_star\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_schema text, p_table text, p_column text\",\n            \"name\": \"_column_exists\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_space_id uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"_compute_slot_price_for_window\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_conditions jsonb, p_sport text, p_ctx jsonb\",\n            \"name\": \"_conditions_match\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game uuid, p_token uuid\",\n            \"name\": \"_consume_link_token\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_event_at timestamp with time zone, p_half_life_days integer\",\n            \"name\": \"_decay_factor\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_half_life_hours integer, p_cap integer\",\n            \"name\": \"_engagement_score\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"a uuid, b uuid\",\n            \"name\": \"_friend_pair\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_venue_id uuid\",\n            \"name\": \"_game_belongs_to_venue\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_gen_link_token\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_context text\",\n            \"name\": \"_get_context_config\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"u uuid, sport text\",\n            \"name\": \"_get_skill_level\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"a uuid, b uuid\",\n            \"name\": \"_is_hidden\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"viewer uuid, author uuid\",\n            \"name\": \"_is_synced\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"lat1 double precision, lng1 double precision, lat2 double precision, lng2 double precision\",\n            \"name\": \"_km_between\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game uuid, p_token uuid\",\n            \"name\": \"_link_token_valid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_meetup uuid, p_token uuid\",\n            \"name\": \"_meetup_link_consume\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup uuid, p_token uuid\",\n            \"name\": \"_meetup_link_valid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"u1 uuid, u2 uuid\",\n            \"name\": \"_mutuals_count\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_ts timestamp with time zone\",\n            \"name\": \"_next_week_same_time\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_q text\",\n            \"name\": \"_normalize_query\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"a uuid, b uuid\",\n            \"name\": \"_order_pair\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"u1 uuid, u2 uuid\",\n            \"name\": \"_pair\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p jsonb, k text, d integer\",\n            \"name\": \"_param_int\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p jsonb, k text, d numeric\",\n            \"name\": \"_param_num\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p jsonb, k text, d text\",\n            \"name\": \"_param_txt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"_post_search_vector\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_kind text, p_vibe_id uuid\",\n            \"name\": \"_post_vibe_kind_ok\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"_post_vibes_json\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"oldname text, newname text, version text\",\n            \"name\": \"_postgis_deprecate\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"tbl regclass, col text\",\n            \"name\": \"_postgis_index_extent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"regclass, text, regclass, text, text DEFAULT '2'::text\",\n            \"name\": \"_postgis_join_selectivity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_postgis_pgsql_version\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_postgis_scripts_pgsql_version\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"tbl regclass, att_name text, geom geometry, mode text DEFAULT '2'::text\",\n            \"name\": \"_postgis_selectivity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"tbl regclass, att_name text, text DEFAULT '2'::text\",\n            \"name\": \"_postgis_stats\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_profile uuid\",\n            \"name\": \"_profile_guard_organiser\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile uuid\",\n            \"name\": \"_profile_type\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile uuid\",\n            \"name\": \"_profile_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"u uuid, p_recent_days integer\",\n            \"name\": \"_recent_activity_score\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_set_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_set_updated_at_simple\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"u uuid, sport text\",\n            \"name\": \"_skill_level\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"my_level numeric, their_level numeric\",\n            \"name\": \"_skill_proximity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"my_level integer, their_level integer\",\n            \"name\": \"_skill_proximity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_space uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"_slot_conflicts_blackout\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_space uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"_slot_conflicts_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_space uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"_slot_conflicts_hold\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_ts timestamp with time zone, p_minutes integer DEFAULT 30\",\n            \"name\": \"_slot_key\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_squad uuid, p_token uuid\",\n            \"name\": \"_squad_link_consume\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad uuid, p_token uuid\",\n            \"name\": \"_squad_link_valid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_squad uuid\",\n            \"name\": \"_squad_sport\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"_st_3ddfullywithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"_st_3ddwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_3dintersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, geometry, integer, integer, text, text\",\n            \"name\": \"_st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, geometry, integer, integer, text\",\n            \"name\": \"_st_asx3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"_st_bestsrid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"_st_bestsrid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_contains\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_containsproperly\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_coveredby\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"_st_coveredby\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"_st_covers\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_covers\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_crosses\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"_st_dfullywithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"_st_distancetree\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, geography, double precision, boolean\",\n            \"name\": \"_st_distancetree\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography, boolean\",\n            \"name\": \"_st_distanceuncached\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"_st_distanceuncached\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, geography, double precision, boolean\",\n            \"name\": \"_st_distanceuncached\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography, tolerance double precision, use_spheroid boolean DEFAULT true\",\n            \"name\": \"_st_dwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"_st_dwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography, double precision\",\n            \"name\": \"_st_dwithinuncached\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, geography, double precision, boolean\",\n            \"name\": \"_st_dwithinuncached\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_equals\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, double precision\",\n            \"name\": \"_st_expand\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"_st_geomfromgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_intersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"line1 geometry, line2 geometry\",\n            \"name\": \"_st_linecrossingdirection\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_longestline\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_maxdistance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_orderingequals\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_overlaps\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"_st_pointoutside\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry\",\n            \"name\": \"_st_sortablehash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_touches\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"g1 geometry, clip geometry DEFAULT NULL::geometry, tolerance double precision DEFAULT 0.0, return_polygons boolean DEFAULT true\",\n            \"name\": \"_st_voronoi\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"_st_within\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_ts timestamp with time zone, p_half_life_hours integer\",\n            \"name\": \"_time_decay\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_touch_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_game_id uuid\",\n            \"name\": \"_user_hosted_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_game_id uuid\",\n            \"name\": \"_user_played_in_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"_vibes_momentum_nudge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_wallet_after_ledger\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"_wallet_recalc\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"now_ts timestamp with time zone\",\n            \"name\": \"_week_bounds\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"_whoami_definer\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game_id uuid\",\n            \"name\": \"_you_invited\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid\",\n            \"name\": \"_you_joined\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid, p_action text\",\n            \"name\": \"actor_can\",\n            \"schema\": \"public\",\n            \"comment\": \"Generic capability predicate; expand as domains ship.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text DEFAULT NULL::text\",\n            \"name\": \"actor_capabilities\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"actor_id\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"actor_is_organiser\",\n            \"schema\": \"public\",\n            \"comment\": \"True if profile_id is an active Organiser profile.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"actor_is_player\",\n            \"schema\": \"public\",\n            \"comment\": \"True if profile_id is an active Player profile.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"addauth\",\n            \"schema\": \"public\",\n            \"comment\": \"args: auth_token - Adds an authorization token to be used in the current transaction.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"schema_name character varying, table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean DEFAULT true\",\n            \"name\": \"addgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name, column_name, srid, type, dimension, use_typmod=true - Adds a geometry column to an existing table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer, new_type character varying, new_dim integer, use_typmod boolean DEFAULT true\",\n            \"name\": \"addgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: catalog_name, schema_name, table_name, column_name, srid, type, dimension, use_typmod=true - Adds a geometry column to an existing table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"table_name character varying, column_name character varying, new_srid integer, new_type character varying, new_dim integer, use_typmod boolean DEFAULT true\",\n            \"name\": \"addgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: table_name, column_name, srid, type, dimension, use_typmod=true - Adds a geometry column to an existing table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_payout_id uuid\",\n            \"name\": \"admin_approve_payout\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_payout_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"admin_cancel_payout\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid\",\n            \"name\": \"admin_is_hidden\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_payout_id uuid, p_meta jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"admin_mark_payout_paid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_payout_id uuid, p_meta jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"admin_mark_payout_processing\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"admin_override\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"admin_overview_row\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_direction ledger_direction, p_amount_aed numeric, p_memo text DEFAULT 'Adjustment'::text, p_meta jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"admin_wallet_adjust\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"admin_whois_profile\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"allow_roster_visibility\",\n            \"schema\": \"public\",\n            \"comment\": \"Always true for active profiles; used by game roster views to show benched players as participants.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"allow_social_notifications\",\n            \"schema\": \"public\",\n            \"comment\": \"True if social notifications should be delivered. When benched, may suppress depending on flag.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"allow_social_visibility\",\n            \"schema\": \"public\",\n            \"comment\": \"True if the user’s content may appear in feeds; false when benched & hide_in_feed is true.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"allow_social_write\",\n            \"schema\": \"public\",\n            \"comment\": \"False when benched: block creating posts/comments/likes while on the bench.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"a uuid, b uuid\",\n            \"name\": \"are_synced\",\n            \"schema\": \"public\",\n            \"comment\": \"True if users are friends (Synced).\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"assert_actor\",\n            \"schema\": \"public\",\n            \"comment\": \"Checks that the given profile belongs to auth.uid() and is active; raises on failure.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_profile_type text\",\n            \"name\": \"assert_profile_exists\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns profile id if exists and active; null otherwise.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_type text\",\n            \"name\": \"assert_profile_exists_for_user\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the active profile_id for user/type or NULL if none.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_badge_key text, p_params jsonb\",\n            \"name\": \"award_top_host_weekly\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_badge_key text, p_params jsonb\",\n            \"name\": \"award_user_metric_badge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_badge_key text, p_params jsonb\",\n            \"name\": \"award_venue_dim_top\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_key text\",\n            \"name\": \"badge_id_by_key\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"box\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"box\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"box2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a BOX2D representing the 2D extent of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"box2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"box2d_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d\",\n            \"name\": \"box2d_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"box2df_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2df\",\n            \"name\": \"box2df_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d\",\n            \"name\": \"box3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"box3d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a BOX3D representing the 3D extent of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"box3d_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"box3d_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"box3dtobox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"bytea\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"bytea\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_assign_captain\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_create_challenge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid, p_game_type text\",\n            \"name\": \"can_create_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_create_meetup\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_create_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_create_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_actor_type text DEFAULT 'player'::text, p_link_token uuid DEFAULT NULL::uuid\",\n            \"name\": \"can_current_user_join_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_link_token uuid DEFAULT NULL::uuid\",\n            \"name\": \"can_current_user_rsvp_meetup\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_join_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_join_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid, p_game_type text\",\n            \"name\": \"can_manage_roster\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_rate_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor uuid\",\n            \"name\": \"can_rate_venue\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"owner_user_id uuid, visibility text\",\n            \"name\": \"can_read_row\",\n            \"schema\": \"public\",\n            \"comment\": \"Owner or admin or passes visibility scope.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"can_receive_friend_requests\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user is not benched OR benched but explicitly allows requests.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_to_user uuid\",\n            \"name\": \"can_send_vibe_request\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"can_user_rename\",\n            \"schema\": \"public\",\n            \"comment\": \"Rate limit: allow <3 username changes per 30 days.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"owner_user_id uuid, scope text\",\n            \"name\": \"can_view_owner\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_viewer uuid, p_post posts\",\n            \"name\": \"can_view_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_viewer uuid, p_owner uuid, p_visibility text\",\n            \"name\": \"can_view_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"viewer_user_id uuid, owner_user_id uuid, scope text\",\n            \"name\": \"can_view_with_scope\",\n            \"schema\": \"public\",\n            \"comment\": \"Generic visibility: public|circle|hidden (owner-only). Block edges deny.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"viewer_user_id uuid, owner_user_id uuid, scope text, p_squad_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"can_view_with_scope\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"viewer_user_id uuid, owner_user_id uuid, scope text\",\n            \"name\": \"can_view_with_scope3\",\n            \"schema\": \"public\",\n            \"comment\": \"3-arg visibility resolver used by RLS (public|circle|hidden).\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"owner_user_id uuid\",\n            \"name\": \"can_write_row\",\n            \"schema\": \"public\",\n            \"comment\": \"Owner or admin.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"money, money\",\n            \"name\": \"cash_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"checkauth\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_table_name, a_key_column_name - Creates a trigger on a table to prevent/allow updates and deletes of rows based on authorization token.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text, text\",\n            \"name\": \"checkauth\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_schema_name, a_table_name, a_key_column_name - Creates a trigger on a table to prevent/allow updates and deletes of rows based on authorization token.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"checkauthtrigger\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_profile_type text DEFAULT NULL::text\",\n            \"name\": \"choose_actor\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns a valid profile_id for the requested type (or preferred). Raises if missing.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"boolean\",\n            \"name\": \"citext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"inet\",\n            \"name\": \"citext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"character\",\n            \"name\": \"citext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_eq\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_ge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_gt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext\",\n            \"name\": \"citext_hash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, bigint\",\n            \"name\": \"citext_hash_extended\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_larger\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_le\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_lt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_ne\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_pattern_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_pattern_ge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_pattern_gt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_pattern_le\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_pattern_lt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"citext_smaller\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"citextin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext\",\n            \"name\": \"citextout\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"citextrecv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext\",\n            \"name\": \"citextsend\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"p_payload jsonb\",\n            \"name\": \"compute_challenge_fingerprint\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_payload jsonb\",\n            \"name\": \"compute_game_fingerprint\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_payload jsonb\",\n            \"name\": \"compute_meetup_fingerprint\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"box2df, box2df\",\n            \"name\": \"contains_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2df, geometry\",\n            \"name\": \"contains_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, box2df\",\n            \"name\": \"contains_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"cube, double precision\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision[]\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision[], double precision[]\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, double precision, double precision\",\n            \"name\": \"cube\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_cmp\",\n            \"schema\": \"public\",\n            \"comment\": \"btree comparison function\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_contained\",\n            \"schema\": \"public\",\n            \"comment\": \"contained in\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_contains\",\n            \"schema\": \"public\",\n            \"comment\": \"contains\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, integer\",\n            \"name\": \"cube_coord\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, integer\",\n            \"name\": \"cube_coord_llur\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube\",\n            \"name\": \"cube_dim\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, double precision, integer\",\n            \"name\": \"cube_enlarge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_eq\",\n            \"schema\": \"public\",\n            \"comment\": \"same as\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_ge\",\n            \"schema\": \"public\",\n            \"comment\": \"greater than or equal to\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_gt\",\n            \"schema\": \"public\",\n            \"comment\": \"greater than\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"cube_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_inter\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube\",\n            \"name\": \"cube_is_point\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_le\",\n            \"schema\": \"public\",\n            \"comment\": \"lower than or equal to\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, integer\",\n            \"name\": \"cube_ll_coord\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_lt\",\n            \"schema\": \"public\",\n            \"comment\": \"lower than\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_ne\",\n            \"schema\": \"public\",\n            \"comment\": \"different\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube\",\n            \"name\": \"cube_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_overlap\",\n            \"schema\": \"public\",\n            \"comment\": \"overlaps\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"cube_recv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube\",\n            \"name\": \"cube_send\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube\",\n            \"name\": \"cube_size\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, integer[]\",\n            \"name\": \"cube_subset\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"cube_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, integer\",\n            \"name\": \"cube_ur_coord\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"date, date\",\n            \"name\": \"date_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"disablelongtransactions\",\n            \"schema\": \"public\",\n            \"comment\": \"Disables long transaction support.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_display_name text, p_username citext\",\n            \"name\": \"display_name_conflicts_username\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns true if display_name (case/space-insensitive) equals username (underscores ignored).\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"distance_chebyshev\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube\",\n            \"name\": \"distance_taxicab\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"schema_name character varying, table_name character varying, column_name character varying\",\n            \"name\": \"dropgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name, column_name - Removes a geometry column from a spatial table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"table_name character varying, column_name character varying\",\n            \"name\": \"dropgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: table_name, column_name - Removes a geometry column from a spatial table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"catalog_name character varying, schema_name character varying, table_name character varying, column_name character varying\",\n            \"name\": \"dropgeometrycolumn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: catalog_name, schema_name, table_name, column_name - Removes a geometry column from a spatial table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"table_name character varying\",\n            \"name\": \"dropgeometrytable\",\n            \"schema\": \"public\",\n            \"comment\": \"args: table_name - Drops a table and all its references in geometry_columns.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"schema_name character varying, table_name character varying\",\n            \"name\": \"dropgeometrytable\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name - Drops a table and all its references in geometry_columns.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"catalog_name character varying, schema_name character varying, table_name character varying\",\n            \"name\": \"dropgeometrytable\",\n            \"schema\": \"public\",\n            \"comment\": \"args: catalog_name, schema_name, table_name - Drops a table and all its references in geometry_columns.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"earth\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"earth, double precision\",\n            \"name\": \"earth_box\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"earth, earth\",\n            \"name\": \"earth_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"event_key text, entity_type text, entity_id uuid, actor_user_id uuid, payload jsonb\",\n            \"name\": \"emit_event\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"enablelongtransactions\",\n            \"schema\": \"public\",\n            \"comment\": \"Enables long transaction support.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"equals\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_venue_space_id uuid, p_on_date date, p_step_minutes integer DEFAULT 30\",\n            \"name\": \"find_slots\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"character varying, character varying, character varying\",\n            \"name\": \"find_srid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_schema_name, a_table_name, a_geomfield_name - Returns the SRID defined for a geometry column.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"real, real\",\n            \"name\": \"float4_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision\",\n            \"name\": \"float8_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"u uuid\",\n            \"name\": \"fn_is_benched\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"internal, cube, smallint, oid, internal\",\n            \"name\": \"g_cube_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, cube, smallint, oid, internal\",\n            \"name\": \"g_cube_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"g_cube_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"g_cube_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cube, cube, internal\",\n            \"name\": \"g_cube_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"g_cube_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_game uuid\",\n            \"name\": \"game_is_joinable\",\n            \"schema\": \"public\",\n            \"comment\": \"True if not cancelled and in the future.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"game_rating_rebuild_all\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid\",\n            \"name\": \"game_rating_recompute\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game uuid\",\n            \"name\": \"game_slots_left\",\n            \"schema\": \"public\",\n            \"comment\": \"Remaining player slots (capacity - active players).\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_bit_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, bit, smallint, oid, internal\",\n            \"name\": \"gbt_bit_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_bit_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bit_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey_var, gbtreekey_var, internal\",\n            \"name\": \"gbt_bit_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bit_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_bool_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, boolean, smallint, oid, internal\",\n            \"name\": \"gbt_bool_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_bool_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_bool_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bool_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey2, gbtreekey2, internal\",\n            \"name\": \"gbt_bool_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bool_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_bpchar_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, character, smallint, oid, internal\",\n            \"name\": \"gbt_bpchar_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_bytea_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, bytea, smallint, oid, internal\",\n            \"name\": \"gbt_bytea_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_bytea_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bytea_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey_var, gbtreekey_var, internal\",\n            \"name\": \"gbt_bytea_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_bytea_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_cash_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, money, smallint, oid, internal\",\n            \"name\": \"gbt_cash_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, money, smallint, oid, internal\",\n            \"name\": \"gbt_cash_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_cash_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_cash_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_cash_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_cash_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_cash_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_date_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, date, smallint, oid, internal\",\n            \"name\": \"gbt_date_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, date, smallint, oid, internal\",\n            \"name\": \"gbt_date_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_date_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_date_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_date_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8, gbtreekey8, internal\",\n            \"name\": \"gbt_date_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_date_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_decompress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_enum_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyenum, smallint, oid, internal\",\n            \"name\": \"gbt_enum_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_enum_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_enum_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_enum_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8, gbtreekey8, internal\",\n            \"name\": \"gbt_enum_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_enum_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_float4_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, real, smallint, oid, internal\",\n            \"name\": \"gbt_float4_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, real, smallint, oid, internal\",\n            \"name\": \"gbt_float4_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_float4_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_float4_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_float4_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8, gbtreekey8, internal\",\n            \"name\": \"gbt_float4_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_float4_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_float8_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, double precision, smallint, oid, internal\",\n            \"name\": \"gbt_float8_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, double precision, smallint, oid, internal\",\n            \"name\": \"gbt_float8_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_float8_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_float8_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_float8_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_float8_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_float8_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_inet_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, inet, smallint, oid, internal\",\n            \"name\": \"gbt_inet_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_inet_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_inet_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_inet_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_inet_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int2_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, smallint, smallint, oid, internal\",\n            \"name\": \"gbt_int2_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, smallint, smallint, oid, internal\",\n            \"name\": \"gbt_int2_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int2_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_int2_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int2_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey4, gbtreekey4, internal\",\n            \"name\": \"gbt_int2_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int2_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int4_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, integer, smallint, oid, internal\",\n            \"name\": \"gbt_int4_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, integer, smallint, oid, internal\",\n            \"name\": \"gbt_int4_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int4_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_int4_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int4_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8, gbtreekey8, internal\",\n            \"name\": \"gbt_int4_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int4_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int8_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, bigint, smallint, oid, internal\",\n            \"name\": \"gbt_int8_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, bigint, smallint, oid, internal\",\n            \"name\": \"gbt_int8_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_int8_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_int8_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int8_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_int8_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_int8_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_intv_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, interval, smallint, oid, internal\",\n            \"name\": \"gbt_intv_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_intv_decompress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, interval, smallint, oid, internal\",\n            \"name\": \"gbt_intv_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_intv_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_intv_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_intv_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey32, gbtreekey32, internal\",\n            \"name\": \"gbt_intv_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_intv_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_macad8_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, macaddr8, smallint, oid, internal\",\n            \"name\": \"gbt_macad8_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_macad8_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_macad8_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_macad8_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_macad8_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_macad8_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_macad_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, macaddr, smallint, oid, internal\",\n            \"name\": \"gbt_macad_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_macad_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_macad_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_macad_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_macad_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_macad_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_numeric_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, numeric, smallint, oid, internal\",\n            \"name\": \"gbt_numeric_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_numeric_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_numeric_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey_var, gbtreekey_var, internal\",\n            \"name\": \"gbt_numeric_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_numeric_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_oid_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, smallint, oid, internal\",\n            \"name\": \"gbt_oid_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, smallint, oid, internal\",\n            \"name\": \"gbt_oid_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_oid_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_oid_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_oid_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8, gbtreekey8, internal\",\n            \"name\": \"gbt_oid_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_oid_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_text_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, text, smallint, oid, internal\",\n            \"name\": \"gbt_text_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_text_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_text_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey_var, gbtreekey_var, internal\",\n            \"name\": \"gbt_text_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_text_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_time_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, time without time zone, smallint, oid, internal\",\n            \"name\": \"gbt_time_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, time without time zone, smallint, oid, internal\",\n            \"name\": \"gbt_time_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_time_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_time_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_time_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_time_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_time_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_timetz_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, time with time zone, smallint, oid, internal\",\n            \"name\": \"gbt_timetz_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_ts_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, timestamp without time zone, smallint, oid, internal\",\n            \"name\": \"gbt_ts_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, timestamp without time zone, smallint, oid, internal\",\n            \"name\": \"gbt_ts_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_ts_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_ts_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_ts_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16, gbtreekey16, internal\",\n            \"name\": \"gbt_ts_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_ts_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_tstz_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, timestamp with time zone, smallint, oid, internal\",\n            \"name\": \"gbt_tstz_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, timestamp with time zone, smallint, oid, internal\",\n            \"name\": \"gbt_tstz_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_uuid_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, uuid, smallint, oid, internal\",\n            \"name\": \"gbt_uuid_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_uuid_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gbt_uuid_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_uuid_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey32, gbtreekey32, internal\",\n            \"name\": \"gbt_uuid_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gbt_uuid_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_var_decompress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gbt_var_fetch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey16_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey16\",\n            \"name\": \"gbtreekey16_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey2_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey2\",\n            \"name\": \"gbtreekey2_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey32_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey32\",\n            \"name\": \"gbtreekey32_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey4_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey4\",\n            \"name\": \"gbtreekey4_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey8_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey8\",\n            \"name\": \"gbtreekey8_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gbtreekey_var_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gbtreekey_var\",\n            \"name\": \"gbtreekey_var_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision\",\n            \"name\": \"gc_to_sec\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_from date, p_to date, p_granularity_minutes integer DEFAULT 60, p_sport text DEFAULT NULL::text, p_city text DEFAULT NULL::text\",\n            \"name\": \"generate_slot_grid_range\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_space_id uuid, p_date date, p_granularity_minutes integer DEFAULT 60\",\n            \"name\": \"generate_space_slot_grid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"point, point\",\n            \"name\": \"geo_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal, internal\",\n            \"name\": \"geog_brin_inclusion_add_value\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"geography\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"geography\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, integer, boolean\",\n            \"name\": \"geography\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geography_analyze\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_distance_knn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_eq\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_ge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geography_gist_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geography, integer\",\n            \"name\": \"geography_gist_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geography_gist_decompress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geography, integer\",\n            \"name\": \"geography_gist_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"geography_gist_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_gist_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d, box2d, internal\",\n            \"name\": \"geography_gist_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"geography_gist_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_gt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring, oid, integer\",\n            \"name\": \"geography_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_le\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_lt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"geography_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"geography_overlaps\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, integer\",\n            \"name\": \"geography_recv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"geography_send\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_spgist_choose_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geography_spgist_compress_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_spgist_config_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_spgist_inner_consistent_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_spgist_leaf_consistent_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geography_spgist_picksplit_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring[]\",\n            \"name\": \"geography_typmod_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"geography_typmod_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal, internal\",\n            \"name\": \"geom2d_brin_inclusion_add_value\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal, internal\",\n            \"name\": \"geom3d_brin_inclusion_add_value\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal, internal\",\n            \"name\": \"geom4d_brin_inclusion_add_value\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer, boolean\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"point\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"path\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"polygon\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_above\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_analyze\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_below\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_contained_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_contains\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_contains_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_contains_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_distance_box\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_distance_centroid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_distance_centroid_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_distance_cpa\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_eq\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_ge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_gist_compress_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_gist_compress_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, integer\",\n            \"name\": \"geometry_gist_consistent_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, integer\",\n            \"name\": \"geometry_gist_consistent_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_gist_decompress_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_gist_decompress_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, integer\",\n            \"name\": \"geometry_gist_distance_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, integer\",\n            \"name\": \"geometry_gist_distance_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"geometry_gist_penalty_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"geometry_gist_penalty_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_gist_picksplit_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_gist_picksplit_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, internal\",\n            \"name\": \"geometry_gist_same_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry, internal\",\n            \"name\": \"geometry_gist_same_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_gist_sortsupport_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"geometry_gist_union_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"geometry_gist_union_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_gt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"geometry_hash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"geometry_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_le\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_left\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_lt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"geometry_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overabove\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overbelow\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overlaps\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overlaps_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_overlaps_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overleft\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_overright\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_recv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_right\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_same_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_same_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"geometry_send\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_sortsupport\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_choose_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_choose_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_choose_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_spgist_compress_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_spgist_compress_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"geometry_spgist_compress_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_config_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_config_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_config_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_inner_consistent_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_inner_consistent_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_inner_consistent_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_leaf_consistent_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_leaf_consistent_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_leaf_consistent_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_picksplit_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_picksplit_3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"geometry_spgist_picksplit_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring[]\",\n            \"name\": \"geometry_typmod_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"geometry_typmod_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"geometry_within\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"geometry_within_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"geometrytype\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the type of a geometry as text.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"geometrytype\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"geomfromewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"geomfromewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"get_proj4_from_srid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"gettransactionid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gidx_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gidx\",\n            \"name\": \"gidx_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, smallint, anyelement, integer, internal, internal\",\n            \"name\": \"gin_btree_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyenum, anyenum, smallint, internal\",\n            \"name\": \"gin_compare_prefix_anyenum\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit, bit, smallint, internal\",\n            \"name\": \"gin_compare_prefix_bit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"boolean, boolean, smallint, internal\",\n            \"name\": \"gin_compare_prefix_bool\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"character, character, smallint, internal\",\n            \"name\": \"gin_compare_prefix_bpchar\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, bytea, smallint, internal\",\n            \"name\": \"gin_compare_prefix_bytea\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\\\"char\\\", \\\"char\\\", smallint, internal\",\n            \"name\": \"gin_compare_prefix_char\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cidr, cidr, smallint, internal\",\n            \"name\": \"gin_compare_prefix_cidr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"date, date, smallint, internal\",\n            \"name\": \"gin_compare_prefix_date\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"real, real, smallint, internal\",\n            \"name\": \"gin_compare_prefix_float4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, smallint, internal\",\n            \"name\": \"gin_compare_prefix_float8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"inet, inet, smallint, internal\",\n            \"name\": \"gin_compare_prefix_inet\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"smallint, smallint, smallint, internal\",\n            \"name\": \"gin_compare_prefix_int2\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, integer, smallint, internal\",\n            \"name\": \"gin_compare_prefix_int4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bigint, bigint, smallint, internal\",\n            \"name\": \"gin_compare_prefix_int8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"interval, interval, smallint, internal\",\n            \"name\": \"gin_compare_prefix_interval\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr, macaddr, smallint, internal\",\n            \"name\": \"gin_compare_prefix_macaddr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr8, macaddr8, smallint, internal\",\n            \"name\": \"gin_compare_prefix_macaddr8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"money, money, smallint, internal\",\n            \"name\": \"gin_compare_prefix_money\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"name, name, smallint, internal\",\n            \"name\": \"gin_compare_prefix_name\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"numeric, numeric, smallint, internal\",\n            \"name\": \"gin_compare_prefix_numeric\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"oid, oid, smallint, internal\",\n            \"name\": \"gin_compare_prefix_oid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text, smallint, internal\",\n            \"name\": \"gin_compare_prefix_text\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time without time zone, time without time zone, smallint, internal\",\n            \"name\": \"gin_compare_prefix_time\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp without time zone, timestamp without time zone, smallint, internal\",\n            \"name\": \"gin_compare_prefix_timestamp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp with time zone, timestamp with time zone, smallint, internal\",\n            \"name\": \"gin_compare_prefix_timestamptz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time with time zone, time with time zone, smallint, internal\",\n            \"name\": \"gin_compare_prefix_timetz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"uuid, uuid, smallint, internal\",\n            \"name\": \"gin_compare_prefix_uuid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit varying, bit varying, smallint, internal\",\n            \"name\": \"gin_compare_prefix_varbit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyenum, anyenum\",\n            \"name\": \"gin_enum_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyenum, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_anyenum\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_bit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"boolean, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_bool\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"character, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_bpchar\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_bytea\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\\\"char\\\", internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_char\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cidr, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_cidr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"date, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_date\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"real, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_float4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_float8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"inet, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_inet\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"smallint, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_int2\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_int4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bigint, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_int8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"interval, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_interval\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_macaddr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr8, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_macaddr8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"money, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_money\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"name, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_name\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"numeric, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_numeric\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"oid, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_oid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_text\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time without time zone, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_time\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp without time zone, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_timestamp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp with time zone, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_timestamptz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time with time zone, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_timetz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, internal, smallint, internal, internal, internal, internal\",\n            \"name\": \"gin_extract_query_trgm\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"uuid, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_uuid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit varying, internal, smallint, internal, internal\",\n            \"name\": \"gin_extract_query_varbit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyenum, internal\",\n            \"name\": \"gin_extract_value_anyenum\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit, internal\",\n            \"name\": \"gin_extract_value_bit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"boolean, internal\",\n            \"name\": \"gin_extract_value_bool\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"character, internal\",\n            \"name\": \"gin_extract_value_bpchar\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"gin_extract_value_bytea\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\\\"char\\\", internal\",\n            \"name\": \"gin_extract_value_char\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cidr, internal\",\n            \"name\": \"gin_extract_value_cidr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"date, internal\",\n            \"name\": \"gin_extract_value_date\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"real, internal\",\n            \"name\": \"gin_extract_value_float4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, internal\",\n            \"name\": \"gin_extract_value_float8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"inet, internal\",\n            \"name\": \"gin_extract_value_inet\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"smallint, internal\",\n            \"name\": \"gin_extract_value_int2\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, internal\",\n            \"name\": \"gin_extract_value_int4\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bigint, internal\",\n            \"name\": \"gin_extract_value_int8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"interval, internal\",\n            \"name\": \"gin_extract_value_interval\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr, internal\",\n            \"name\": \"gin_extract_value_macaddr\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"macaddr8, internal\",\n            \"name\": \"gin_extract_value_macaddr8\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"money, internal\",\n            \"name\": \"gin_extract_value_money\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"name, internal\",\n            \"name\": \"gin_extract_value_name\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"numeric, internal\",\n            \"name\": \"gin_extract_value_numeric\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"oid, internal\",\n            \"name\": \"gin_extract_value_oid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, internal\",\n            \"name\": \"gin_extract_value_text\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time without time zone, internal\",\n            \"name\": \"gin_extract_value_time\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp without time zone, internal\",\n            \"name\": \"gin_extract_value_timestamp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp with time zone, internal\",\n            \"name\": \"gin_extract_value_timestamptz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"time with time zone, internal\",\n            \"name\": \"gin_extract_value_timetz\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, internal\",\n            \"name\": \"gin_extract_value_trgm\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"uuid, internal\",\n            \"name\": \"gin_extract_value_uuid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bit varying, internal\",\n            \"name\": \"gin_extract_value_varbit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"numeric, numeric\",\n            \"name\": \"gin_numeric_cmp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, smallint, text, integer, internal, internal, internal, internal\",\n            \"name\": \"gin_trgm_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, smallint, text, integer, internal, internal, internal\",\n            \"name\": \"gin_trgm_triconsistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, internal, smallint\",\n            \"name\": \"gserialized_gist_joinsel_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, internal, smallint\",\n            \"name\": \"gserialized_gist_joinsel_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, internal, integer\",\n            \"name\": \"gserialized_gist_sel_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, oid, internal, integer\",\n            \"name\": \"gserialized_gist_sel_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gtrgm_compress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, text, smallint, oid, internal\",\n            \"name\": \"gtrgm_consistent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gtrgm_decompress\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, text, smallint, oid, internal\",\n            \"name\": \"gtrgm_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"gtrgm_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"gtrgm_options\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gtrgm\",\n            \"name\": \"gtrgm_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal\",\n            \"name\": \"gtrgm_penalty\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gtrgm_picksplit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gtrgm, gtrgm, internal\",\n            \"name\": \"gtrgm_same\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"gtrgm_union\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"guard_posting\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"guard_social_write\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"guard_user_not_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"smallint, smallint\",\n            \"name\": \"int2_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer, integer\",\n            \"name\": \"int4_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bigint, bigint\",\n            \"name\": \"int8_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"interval, interval\",\n            \"name\": \"interval_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_user uuid DEFAULT auth.uid()\",\n            \"name\": \"is_admin\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user has global admin role.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_admin_claimed\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_benched\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user is currently benched (flag on and not past bench_until).\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"either uuid, other uuid\",\n            \"name\": \"is_blocked\",\n            \"schema\": \"public\",\n            \"comment\": \"True if either side blocked the other.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"box2df, box2df\",\n            \"name\": \"is_contained_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, box2df\",\n            \"name\": \"is_contained_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"box2df, geometry\",\n            \"name\": \"is_contained_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_name text\",\n            \"name\": \"is_display_name_banned\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns true when display name exactly matches a banned literal (no regex). Extend if needed.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_scope text\",\n            \"name\": \"is_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"from_user uuid, to_user uuid\",\n            \"name\": \"is_hidden\",\n            \"schema\": \"public\",\n            \"comment\": \"True if \\\"either → other\\\" is Hidden Mode.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_squad uuid\",\n            \"name\": \"is_in_squad\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user has an active membership in the squad.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_moderator\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user has moderator role.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_owner uuid\",\n            \"name\": \"is_owner\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_posting_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid\",\n            \"name\": \"is_profile_publicly_visible\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns true when profile is active, owner not benched, and search visibility allows it.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_at timestamp with time zone DEFAULT now()\",\n            \"name\": \"is_quiet_hour\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid\",\n            \"name\": \"is_shadow_hidden\",\n            \"schema\": \"public\",\n            \"comment\": \"True if a row is shadow-hidden by moderation.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_squad uuid, p_user uuid\",\n            \"name\": \"is_squad_owner_or_captain\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid\",\n            \"name\": \"is_takedown\",\n            \"schema\": \"public\",\n            \"comment\": \"True if a row is marked taken down (hard remove from views).\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_username text\",\n            \"name\": \"is_username_available\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns true if not banned, not reserved(active), and not taken (active) in registry.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"arr text[]\",\n            \"name\": \"is_valid_contexts\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"j jsonb\",\n            \"name\": \"is_valid_gradient\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid\",\n            \"name\": \"is_venue_admin\",\n            \"schema\": \"public\",\n            \"comment\": \"True if user has venue_admin role.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_venue uuid\",\n            \"name\": \"is_venue_admin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"json\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"jsonb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"jwt_claims\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"jwt_role\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"earth\",\n            \"name\": \"latitude\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_points integer\",\n            \"name\": \"level_for_points\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"list_active_usernames\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"list_challenge_statuses\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_space_id uuid, p_from_utc timestamp with time zone DEFAULT now(), p_days integer DEFAULT 3, p_slot_minutes integer DEFAULT 60, p_step_minutes integer DEFAULT 60\",\n            \"name\": \"list_space_slots\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"double precision, double precision\",\n            \"name\": \"ll_to_earth\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text, text, timestamp without time zone\",\n            \"name\": \"lockrow\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_table_name, a_row_key, an_auth_token, expire_dt - Sets lock/authorization for a row in a table.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text, text, text\",\n            \"name\": \"lockrow\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text, text\",\n            \"name\": \"lockrow\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_table_name, a_row_key, an_auth_token - Sets lock/authorization for a row in a table.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text, text, text, timestamp without time zone\",\n            \"name\": \"lockrow\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_schema_name, a_table_name, a_row_key, an_auth_token, expire_dt - Sets lock/authorization for a row in a table.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"earth\",\n            \"name\": \"longitude\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"longtransactionsenabled\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"citext\",\n            \"name\": \"max\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid\",\n            \"name\": \"meetup_counts\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_actor uuid\",\n            \"name\": \"meetup_my_status\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_meetup uuid\",\n            \"name\": \"meetup_slots_left\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext\",\n            \"name\": \"min\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"p text\",\n            \"name\": \"normalize_display_name\",\n            \"schema\": \"public\",\n            \"comment\": \"Normalizes display_name by trimming, collapsing spaces, and lowercasing; enforces 2..50 length and rejects pure punctuation.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"_scores jsonb\",\n            \"name\": \"normalize_game_scores\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p text\",\n            \"name\": \"normalize_username\",\n            \"schema\": \"public\",\n            \"comment\": \"Normalizes input to lowercase ASCII [a-z0-9_], 3..20 chars, collapses underscores, trims edges; raises username_invalid on failure.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"_scores jsonb\",\n            \"name\": \"normalize_venue_scores\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"oid, oid\",\n            \"name\": \"oid_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, box2df\",\n            \"name\": \"overlaps_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"box2df, box2df\",\n            \"name\": \"overlaps_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2df, geometry\",\n            \"name\": \"overlaps_2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, gidx\",\n            \"name\": \"overlaps_geog\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"gidx, geography\",\n            \"name\": \"overlaps_geog\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gidx, gidx\",\n            \"name\": \"overlaps_geog\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"gidx, geometry\",\n            \"name\": \"overlaps_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, gidx\",\n            \"name\": \"overlaps_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"gidx, gidx\",\n            \"name\": \"overlaps_nd\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"path\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_asflatgeobuf_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, boolean\",\n            \"name\": \"pgis_asflatgeobuf_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement\",\n            \"name\": \"pgis_asflatgeobuf_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, boolean, text\",\n            \"name\": \"pgis_asflatgeobuf_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_asgeobuf_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement\",\n            \"name\": \"pgis_asgeobuf_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, text\",\n            \"name\": \"pgis_asgeobuf_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"pgis_asmvt_combinefn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"pgis_asmvt_deserialfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_asmvt_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_asmvt_serialfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, text, integer, text\",\n            \"name\": \"pgis_asmvt_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement\",\n            \"name\": \"pgis_asmvt_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, text\",\n            \"name\": \"pgis_asmvt_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, text, integer\",\n            \"name\": \"pgis_asmvt_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, anyelement, text, integer, text, text\",\n            \"name\": \"pgis_asmvt_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, double precision, integer\",\n            \"name\": \"pgis_geometry_accum_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, double precision\",\n            \"name\": \"pgis_geometry_accum_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry\",\n            \"name\": \"pgis_geometry_accum_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_clusterintersecting_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_clusterwithin_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_collect_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_makeline_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_polygonize_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal\",\n            \"name\": \"pgis_geometry_union_parallel_combinefn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, internal\",\n            \"name\": \"pgis_geometry_union_parallel_deserialfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_union_parallel_finalfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"pgis_geometry_union_parallel_serialfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry, double precision\",\n            \"name\": \"pgis_geometry_union_parallel_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, geometry\",\n            \"name\": \"pgis_geometry_union_parallel_transfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"pick_challenge_status\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"point\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_user uuid, p_sport text DEFAULT NULL::text\",\n            \"name\": \"points_total\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"polygon\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"tbl_oid oid, use_typmod boolean DEFAULT true\",\n            \"name\": \"populate_geometry_columns\",\n            \"schema\": \"public\",\n            \"comment\": \"args: relation_oid, use_typmod=true - Ensures geometry columns are defined with type modifiers or have appropriate spatial constraints.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"use_typmod boolean DEFAULT true\",\n            \"name\": \"populate_geometry_columns\",\n            \"schema\": \"public\",\n            \"comment\": \"args: use_typmod=true - Ensures geometry columns are defined with type modifiers or have appropriate spatial constraints.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_addbbox\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Add bounding box to the geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_cache_bbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geomschema text, geomtable text, geomcolumn text\",\n            \"name\": \"postgis_constraint_dims\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geomschema text, geomtable text, geomcolumn text\",\n            \"name\": \"postgis_constraint_srid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geomschema text, geomtable text, geomcolumn text\",\n            \"name\": \"postgis_constraint_type\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_dropbbox\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Drop the bounding box cache from the geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_extensions_upgrade\",\n            \"schema\": \"public\",\n            \"comment\": \"Packages and upgrades PostGIS extensions (e.g. postgis_raster,postgis_topology, postgis_sfcgal) to latest available version.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_full_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Reports full PostGIS version and build configuration infos.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_geos_noop\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_geos_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the GEOS library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_getbbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_hasbbox\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns TRUE if the bbox of this geometry is cached, FALSE otherwise.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"postgis_index_supportfn\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_lib_build_date\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns build date of the PostGIS library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_lib_revision\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_lib_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the PostGIS library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_libjson_version\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_liblwgeom_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the liblwgeom library. This should match the version of PostGIS.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_libprotobuf_version\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_libxml_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the libxml2 library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"postgis_noop\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_proj_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the PROJ4 library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_scripts_build_date\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns build date of the PostGIS scripts.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_scripts_installed\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns version of the PostGIS scripts installed in this database.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_scripts_released\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the postgis.sql script released with the installed PostGIS lib.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_svn_version\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, text, text, integer\",\n            \"name\": \"postgis_transform_geometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geomname character varying, coord_dimension integer, use_new_name boolean DEFAULT true\",\n            \"name\": \"postgis_type_name\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"postgis_typmod_dims\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"postgis_typmod_srid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"integer\",\n            \"name\": \"postgis_typmod_type\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns PostGIS version number and compile-time options.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"postgis_wagyu_version\",\n            \"schema\": \"public\",\n            \"comment\": \"Returns the version number of the internal Wagyu library.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"p_space_id uuid, p_start_utc timestamp with time zone, p_end_utc timestamp with time zone\",\n            \"name\": \"quote_space_slot_price\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"regexp_match\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"regexp_match\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"regexp_matches\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"regexp_matches\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text, text\",\n            \"name\": \"regexp_replace\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"regexp_replace\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"regexp_split_to_array\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"regexp_split_to_array\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"regexp_split_to_table\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"regexp_split_to_table\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_type_key text, p_user uuid, p_context jsonb\",\n            \"name\": \"render_notification\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"citext, citext, citext\",\n            \"name\": \"replace\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_event_at timestamp with time zone\",\n            \"name\": \"reputation_decay_factor\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"reputation_rebuild_all\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid\",\n            \"name\": \"reputation_recompute\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_amount_aed numeric, p_beneficiary_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"request_payout\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_organiser_user_id uuid, p_sport_key text, p_at timestamp with time zone DEFAULT now()\",\n            \"name\": \"resolve_commission\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_other_user uuid, p_action text\",\n            \"name\": \"respond_vibe_request\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_context text, p_fields jsonb, p_hash text, p_version integer, p_user uuid, p_payload jsonb\",\n            \"name\": \"reuse_touch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text DEFAULT NULL::text\",\n            \"name\": \"rpc_act_as\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_author_profile_id uuid, p_body text, p_parent_comment_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_add_comment\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_scope text DEFAULT 'all'::text, p_days integer DEFAULT NULL::integer, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_admin_freeze_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_hide boolean, p_notes text DEFAULT NULL::text\",\n            \"name\": \"rpc_admin_hide_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_freeze_id uuid\",\n            \"name\": \"rpc_admin_unfreeze_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_author_user_id uuid, p_kind text DEFAULT NULL::text, p_since timestamp with time zone DEFAULT NULL::timestamp with time zone, p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_author_feed\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_display_name text, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_ban_display_name\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_scope text, p_term text, p_lang text DEFAULT NULL::text, p_severity text DEFAULT 'warn'::text, p_is_regex boolean DEFAULT false, p_note text DEFAULT NULL::text, p_active boolean DEFAULT true, p_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_ban_term_upsert\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_username text, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_ban_username\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"target_user uuid\",\n            \"name\": \"rpc_block_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_peer uuid, p_block boolean\",\n            \"name\": \"rpc_block_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_booking_id uuid\",\n            \"name\": \"rpc_booking_cancel\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_space_id uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"rpc_booking_hold_for_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_space_id uuid, p_start timestamp with time zone, p_end timestamp with time zone\",\n            \"name\": \"rpc_booking_hold_for_meetup\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_cancel_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_challenge_id uuid, p_squad_id uuid, p_seed integer DEFAULT NULL::integer\",\n            \"name\": \"rpc_challenge_add_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text, p_title text, p_visibility text, p_description text\",\n            \"name\": \"rpc_challenge_create\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_challenge_id uuid, p_type text DEFAULT NULL::text, p_start_at timestamp with time zone DEFAULT NULL::timestamp with time zone, p_rounds integer DEFAULT 1\",\n            \"name\": \"rpc_challenge_generate_fixtures\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_challenge_id uuid, p_to_squad_id uuid\",\n            \"name\": \"rpc_challenge_invite_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_fixture_id uuid, p_home_score integer, p_away_score integer\",\n            \"name\": \"rpc_challenge_record_result\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_invite_id uuid, p_decision text\",\n            \"name\": \"rpc_challenge_respond_invite\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_challenge_id uuid, p_status text\",\n            \"name\": \"rpc_challenge_set_status\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_fixture_id uuid, p_start_at timestamp with time zone, p_venue_space_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_challenge_spawn_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_circle_list\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_actor_type text, p_sport text, p_title text, p_start_at timestamp with time zone, p_end_at timestamp with time zone, p_capacity integer, p_listing_visibility text, p_join_policy text, p_venue_space_id uuid DEFAULT NULL::uuid, p_rules jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"rpc_create_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_author_profile_id uuid, p_kind text, p_visibility text, p_body text DEFAULT NULL::text, p_lang text DEFAULT NULL::text, p_sport_key text DEFAULT NULL::text, p_venue_id uuid DEFAULT NULL::uuid, p_geo_lat double precision DEFAULT NULL::double precision, p_geo_lng double precision DEFAULT NULL::double precision, p_media jsonb DEFAULT '[]'::jsonb, p_vibe_ids uuid[] DEFAULT NULL::uuid[]\",\n            \"name\": \"rpc_create_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"profile_type text, username text, display_name text DEFAULT NULL::text\",\n            \"name\": \"rpc_create_profile\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_actor_profile_id uuid, p_sport text, p_name text, p_bio text DEFAULT NULL::text, p_logo_url text DEFAULT NULL::text\",\n            \"name\": \"rpc_create_squad\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_request_id uuid, p_approve boolean\",\n            \"name\": \"rpc_decide_join_request\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"rpc_delete_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_draft_id uuid\",\n            \"name\": \"rpc_draft_archive\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_context text, p_payload jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"rpc_draft_create\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_draft_id uuid\",\n            \"name\": \"rpc_draft_publish_challenge\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_draft_id uuid\",\n            \"name\": \"rpc_draft_publish_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_draft_id uuid\",\n            \"name\": \"rpc_draft_publish_meetup\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_draft_id uuid, p_patch jsonb\",\n            \"name\": \"rpc_draft_update\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_end_bench\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"profile_type text, username text, display_name text DEFAULT NULL::text\",\n            \"name\": \"rpc_ensure_profile\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_expire_freezes\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_kind text DEFAULT NULL::text, p_scope text DEFAULT 'home'::text, p_author_user_id uuid DEFAULT NULL::uuid, p_since timestamp with time zone DEFAULT NULL::timestamp with time zone, p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_feed_posts\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_scope text DEFAULT 'home'::text, p_author_user_id uuid DEFAULT NULL::uuid, p_sport text DEFAULT NULL::text, p_lat double precision DEFAULT NULL::double precision, p_lng double precision DEFAULT NULL::double precision, p_radius_km numeric DEFAULT NULL::numeric, p_since timestamp with time zone DEFAULT NULL::timestamp with time zone, p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_feed_ranked\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid, p_reason_code text, p_details text DEFAULT NULL::text\",\n            \"name\": \"rpc_flag_content\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_reason text DEFAULT NULL::text, p_until timestamp with time zone DEFAULT NULL::timestamp with time zone\",\n            \"name\": \"rpc_freeze_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_peer uuid\",\n            \"name\": \"rpc_friend_remove\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_peer uuid\",\n            \"name\": \"rpc_friend_request_accept\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_peer uuid\",\n            \"name\": \"rpc_friend_request_reject\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_peer uuid\",\n            \"name\": \"rpc_friend_request_send\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_friend_requests_inbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_friend_requests_outbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_peer uuid\",\n            \"name\": \"rpc_friend_unfriend\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_get_my_status\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"rpc_hide_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_peer uuid, p_hide boolean\",\n            \"name\": \"rpc_hide_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"target_user uuid\",\n            \"name\": \"rpc_hide_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_to_user_id uuid\",\n            \"name\": \"rpc_invite_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_actor_type text, p_game_id uuid, p_link_token uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_join_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_actor_type text, p_game_id uuid\",\n            \"name\": \"rpc_leave_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_mark_all_read\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_id uuid\",\n            \"name\": \"rpc_mark_notification_read\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_status text DEFAULT NULL::text, p_limit integer DEFAULT 50, p_offset integer DEFAULT 0\",\n            \"name\": \"rpc_meetup_attendees\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid\",\n            \"name\": \"rpc_meetup_cancel\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_profile_type text DEFAULT 'player'::text\",\n            \"name\": \"rpc_meetup_card\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text, p_title text, p_starts_at timestamp with time zone, p_visibility text\",\n            \"name\": \"rpc_meetup_create\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_owner_profile_id uuid, p_title text, p_description text, p_start_at timestamp with time zone, p_end_at timestamp with time zone DEFAULT NULL::timestamp with time zone, p_location_name text DEFAULT NULL::text, p_lat double precision DEFAULT NULL::double precision, p_lng double precision DEFAULT NULL::double precision, p_listing_visibility text DEFAULT 'public'::text, p_rsvp_policy text DEFAULT 'open'::text, p_capacity integer DEFAULT NULL::integer, p_vibe_key text DEFAULT NULL::text, p_meta jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"rpc_meetup_create\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_to_user_id uuid, p_expires_at timestamp with time zone DEFAULT NULL::timestamp with time zone\",\n            \"name\": \"rpc_meetup_invite_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_expires_at timestamp with time zone DEFAULT NULL::timestamp with time zone, p_max_uses integer DEFAULT NULL::integer\",\n            \"name\": \"rpc_meetup_mint_link\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_meetup_my\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_action text, p_profile_id uuid DEFAULT NULL::uuid, p_link_token uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_meetup_rsvp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_profile_type text DEFAULT 'player'::text, p_status text DEFAULT 'going'::text\",\n            \"name\": \"rpc_meetup_rsvp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_target_actor uuid, p_status text\",\n            \"name\": \"rpc_meetup_set_attendee\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_meetup_id uuid, p_profile_type text DEFAULT 'player'::text\",\n            \"name\": \"rpc_meetup_unrsvp\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"rpc_meetup_visible\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_expires_at timestamp with time zone DEFAULT NULL::timestamp with time zone, p_max_uses integer DEFAULT NULL::integer\",\n            \"name\": \"rpc_mint_join_link\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_ticket_id uuid, p_action text, p_notes text DEFAULT NULL::text, p_freeze_scope text DEFAULT NULL::text, p_freeze_days integer DEFAULT NULL::integer\",\n            \"name\": \"rpc_moderation_resolve_ticket\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_ticket_id uuid\",\n            \"name\": \"rpc_moderation_take_ticket\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_limit integer DEFAULT 200\",\n            \"name\": \"rpc_notifications_drain_events\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_limit integer DEFAULT 500\",\n            \"name\": \"rpc_notifications_send_due\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text, p_payload jsonb\",\n            \"name\": \"rpc_post_as\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_sport text DEFAULT NULL::text, p_as_role text DEFAULT 'player'::text, p_lat double precision DEFAULT NULL::double precision, p_lng double precision DEFAULT NULL::double precision, p_radius_km numeric DEFAULT NULL::numeric, p_limit integer DEFAULT 20\",\n            \"name\": \"rpc_potential_vibes\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_sport text DEFAULT NULL::text, p_as_role text DEFAULT 'player'::text, p_lat double precision DEFAULT NULL::double precision, p_lng double precision DEFAULT NULL::double precision, p_radius_km numeric DEFAULT NULL::numeric, p_limit integer DEFAULT 20, p_me uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_potential_vibes\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_me uuid, p_sport text DEFAULT NULL::text, p_as_role text DEFAULT 'player'::text, p_lat double precision DEFAULT NULL::double precision, p_lng double precision DEFAULT NULL::double precision, p_radius_km numeric DEFAULT NULL::numeric, p_limit integer DEFAULT 20\",\n            \"name\": \"rpc_potential_vibes_debug\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_author_profile_id uuid, p_since timestamp with time zone DEFAULT NULL::timestamp with time zone, p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_profile_feed\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_q text DEFAULT NULL::text, p_city text DEFAULT NULL::text, p_language text DEFAULT NULL::text, p_limit integer DEFAULT 20, p_offset integer DEFAULT 0\",\n            \"name\": \"rpc_profile_search\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_profile_type text, p_display_name text DEFAULT NULL::text, p_avatar_url text DEFAULT NULL::text, p_bio text DEFAULT NULL::text, p_city text DEFAULT NULL::text, p_language text DEFAULT NULL::text\",\n            \"name\": \"rpc_profile_update_basic\",\n            \"schema\": \"public\",\n            \"comment\": \"Owner-only update of profile fields; validates display_name (global unique) and non-equality with username.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_rater_profile_id uuid, p_scores jsonb, p_comment text DEFAULT NULL::text\",\n            \"name\": \"rpc_rate_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_rater_profile_id uuid, p_ratee_user_id uuid, p_scores jsonb, p_comment text DEFAULT NULL::text\",\n            \"name\": \"rpc_rate_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_venue_id uuid, p_rater_profile_id uuid, p_scores jsonb, p_comment text DEFAULT NULL::text\",\n            \"name\": \"rpc_rate_venue\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_shift_week boolean DEFAULT true\",\n            \"name\": \"rpc_recreate_from_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_context text, p_sport text DEFAULT NULL::text, p_limit integer DEFAULT 5\",\n            \"name\": \"rpc_recreate_suggestions\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_reason text, p_details text DEFAULT NULL::text\",\n            \"name\": \"rpc_report_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_rating_id uuid, p_reason text\",\n            \"name\": \"rpc_report_rating\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_start_at timestamp with time zone, p_end_at timestamp with time zone\",\n            \"name\": \"rpc_reschedule_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_target uuid, p_type text\",\n            \"name\": \"rpc_restrict_clear\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_target uuid, p_type text\",\n            \"name\": \"rpc_restrict_set\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_report_id uuid, p_new_status text, p_resolution_notes text DEFAULT NULL::text, p_action text DEFAULT NULL::text\",\n            \"name\": \"rpc_review_report\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_event_id uuid, p_user_id uuid, p_event_key text, p_sport text DEFAULT NULL::text, p_context jsonb DEFAULT '{}'::jsonb\",\n            \"name\": \"rpc_rewards_apply_event\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_q text, p_scope text[] DEFAULT ARRAY['people'::text, 'venues'::text, 'squads'::text, 'games'::text, 'arenas'::text], p_sport text DEFAULT NULL::text, p_limit integer DEFAULT 40\",\n            \"name\": \"rpc_search_entities\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_q text DEFAULT NULL::text, p_sport text DEFAULT NULL::text, p_roles text[] DEFAULT ARRAY['player'::text, 'organiser'::text], p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_search_people\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_vibe_keys text[] DEFAULT NULL::text[], p_sport text DEFAULT NULL::text, p_venue uuid DEFAULT NULL::uuid, p_text text DEFAULT NULL::text, p_since timestamp with time zone DEFAULT NULL::timestamp with time zone, p_limit integer DEFAULT 30\",\n            \"name\": \"rpc_search_posts\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"preferred text\",\n            \"name\": \"rpc_set_actor\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_vibe_id uuid\",\n            \"name\": \"rpc_set_post_primary_vibe\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid, p_reason text DEFAULT NULL::text, p_expires timestamp with time zone DEFAULT NULL::timestamp with time zone\",\n            \"name\": \"rpc_shadow_hide\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_shadow_unhide\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad_id uuid, p_profile_id uuid, p_as_captain boolean DEFAULT false\",\n            \"name\": \"rpc_squad_add_member\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_created_by_profile_id uuid, p_sport text, p_name text, p_bio text DEFAULT NULL::text, p_listing_visibility text DEFAULT 'public'::text, p_join_policy text DEFAULT 'request'::text, p_max_members integer DEFAULT NULL::integer, p_captain_user_id uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_squad_create\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad_id uuid, p_to_profile_id uuid, p_expires_at timestamp with time zone DEFAULT NULL::timestamp with time zone\",\n            \"name\": \"rpc_squad_invite\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad_id uuid, p_profile_id uuid\",\n            \"name\": \"rpc_squad_remove_member\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad_id uuid, p_profile_id uuid, p_message text DEFAULT NULL::text, p_link_token uuid DEFAULT NULL::uuid\",\n            \"name\": \"rpc_squad_request_join\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_invite_id uuid, p_decision text\",\n            \"name\": \"rpc_squad_respond_invite\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_invite_id uuid, p_action text, p_profile_id uuid\",\n            \"name\": \"rpc_squad_respond_invite\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_squad_id uuid, p_profile_id uuid, p_is_captain boolean\",\n            \"name\": \"rpc_squad_set_captain\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_table text, p_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_takedown\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_is_benched boolean, p_reason text DEFAULT NULL::text, p_bench_until timestamp with time zone DEFAULT NULL::timestamp with time zone, p_hide_in_feed boolean DEFAULT true, p_hide_in_search boolean DEFAULT true, p_block_friend_requests boolean DEFAULT true, p_suppress_social_notifications boolean DEFAULT false\",\n            \"name\": \"rpc_toggle_bench\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid\",\n            \"name\": \"rpc_toggle_like\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_post_id uuid, p_vibe_id uuid\",\n            \"name\": \"rpc_toggle_post_vibe\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_window_hours integer DEFAULT 48, p_sport text DEFAULT NULL::text, p_venue uuid DEFAULT NULL::uuid, p_vibe_keys text[] DEFAULT NULL::text[], p_limit integer DEFAULT 20\",\n            \"name\": \"rpc_trending_posts\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"target_user uuid\",\n            \"name\": \"rpc_unblock_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_unfreeze_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"target_user uuid\",\n            \"name\": \"rpc_unhide_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_unverify_profile\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_username text\",\n            \"name\": \"rpc_username_availability\",\n            \"schema\": \"public\",\n            \"comment\": \"Check availability without leaking owners; returns normalized value and reason.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text, p_username text\",\n            \"name\": \"rpc_username_claim\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_type text\",\n            \"name\": \"rpc_username_release\",\n            \"schema\": \"public\",\n            \"comment\": \"Releases current username for the given profile; discouraged for squatting—enable only if product allows.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_base text, p_profile_type text DEFAULT 'player'::text, p_city text DEFAULT NULL::text, p_sport text DEFAULT NULL::text, p_limit integer DEFAULT 3\",\n            \"name\": \"rpc_username_suggest\",\n            \"schema\": \"public\",\n            \"comment\": \"Suggest up to p_limit available usernames based on base/city/sport/profile_type.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_profile_id uuid, p_reason text DEFAULT NULL::text\",\n            \"name\": \"rpc_verify_profile\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_rule_key text, p_user uuid, p_window_seconds integer\",\n            \"name\": \"rule_on_cooldown\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"run_badge_engine\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_user uuid, p_game_id uuid, p_start_at timestamp with time zone, p_payload jsonb\",\n            \"name\": \"schedule_game_reminders_for_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"double precision\",\n            \"name\": \"sec_to_gc\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_to_user uuid\",\n            \"name\": \"send_vibe_request\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_target_user uuid, p_enable boolean, p_reason text DEFAULT NULL::text\",\n            \"name\": \"set_hidden_mode\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"real\",\n            \"name\": \"set_limit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"set_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_game_id uuid, p_organiser_user_id uuid, p_sport_key text, p_gross_collected numeric, p_finalize boolean DEFAULT true\",\n            \"name\": \"settle_game\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"show_limit\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"show_trgm\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"similarity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"similarity_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"similarity_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"cstring\",\n            \"name\": \"spheroid_in\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"spheroid\",\n            \"name\": \"spheroid_out\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext, integer\",\n            \"name\": \"split_part\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dclosestpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 3D point on g1 that is closest to g2. This is the first point of the 3D shortest line.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_3ddfullywithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3ddistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 3D cartesian minimum distance (based on spatial ref) between two geometries in projected units.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_3ddwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_3dextent\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomfield - Aggregate function that returns the 3D bounding box of geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dintersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_3dlength\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_3dlinestring - Returns the 3D length of a linear geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_3dlineinterpolatepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, a_fraction - Returns a point interpolated along a 3D line at a fractional location.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dlongestline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 3D longest line between two geometries\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dmakebox\",\n            \"schema\": \"public\",\n            \"comment\": \"args: point3DLowLeftBottom, point3DUpRightTop - Creates a BOX3D defined by two 3D point geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dmaxdistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 3D cartesian maximum distance (based on spatial ref) between two geometries in projected units.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_3dperimeter\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the 3D perimeter of a polygonal geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_3dshortestline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 3D shortest line between two geometries\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision\",\n            \"name\": \"st_addmeasure\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom_mline, measure_start, measure_end - Interpolates measures along a linear geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, integer\",\n            \"name\": \"st_addpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring, point, position = -1 - Add a point to a LineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_addpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring, point - Add a point to a LineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision, double precision\",\n            \"name\": \"st_affine\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, a, b, c, d, e, f, g, h, i, xoff, yoff, zoff - Apply a 3D affine transformation to a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision, double precision, double precision, double precision\",\n            \"name\": \"st_affine\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, a, b, d, e, xoff, yoff - Apply a 3D affine transformation to a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"line1 geometry, line2 geometry\",\n            \"name\": \"st_angle\",\n            \"schema\": \"public\",\n            \"comment\": \"args: line1, line2 - Returns the angle between two vectors defined by 3 or 4 points, or 2 lines.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"pt1 geometry, pt2 geometry, pt3 geometry, pt4 geometry DEFAULT '0101000000000000000000F87F000000000000F87F'::geometry\",\n            \"name\": \"st_angle\",\n            \"schema\": \"public\",\n            \"comment\": \"args: point1, point2, point3, point4 - Returns the angle between two vectors defined by 3 or 4 points, or 2 lines.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_area\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_area\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the area of a polygonal geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_area\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geog, use_spheroid=true - Returns the area of a polygonal geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_area2d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, text\",\n            \"name\": \"st_asbinary\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_asbinary\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"st_asbinary\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, text\",\n            \"name\": \"st_asbinary\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, nprecision integer DEFAULT 5\",\n            \"name\": \"st_asencodedpolyline\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_asewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, text\",\n            \"name\": \"st_asewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_asewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_asewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"st_asewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, integer\",\n            \"name\": \"st_asewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_asewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyelement, boolean\",\n            \"name\": \"st_asflatgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement\",\n            \"name\": \"st_asflatgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, boolean, text\",\n            \"name\": \"st_asflatgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, text\",\n            \"name\": \"st_asgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement\",\n            \"name\": \"st_asgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geog geography, maxdecimaldigits integer DEFAULT 9, options integer DEFAULT 0\",\n            \"name\": \"st_asgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, maxdecimaldigits integer DEFAULT 9, options integer DEFAULT 8\",\n            \"name\": \"st_asgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"r record, geom_column text DEFAULT ''::text, maxdecimaldigits integer DEFAULT 9, pretty_bool boolean DEFAULT false\",\n            \"name\": \"st_asgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_asgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"version integer, geog geography, maxdecimaldigits integer DEFAULT 15, options integer DEFAULT 0, nprefix text DEFAULT 'gml'::text, id text DEFAULT ''::text\",\n            \"name\": \"st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"version integer, geom geometry, maxdecimaldigits integer DEFAULT 15, options integer DEFAULT 0, nprefix text DEFAULT NULL::text, id text DEFAULT NULL::text\",\n            \"name\": \"st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, maxdecimaldigits integer DEFAULT 15, options integer DEFAULT 0\",\n            \"name\": \"st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, maxdecimaldigits integer DEFAULT 15, options integer DEFAULT 0, nprefix text DEFAULT 'gml'::text, id text DEFAULT ''::text\",\n            \"name\": \"st_asgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, text\",\n            \"name\": \"st_ashexewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_ashexewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, maxdecimaldigits integer DEFAULT 15, nprefix text DEFAULT ''::text\",\n            \"name\": \"st_askml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_askml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, maxdecimaldigits integer DEFAULT 15, nprefix text DEFAULT ''::text\",\n            \"name\": \"st_askml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, tmpl text DEFAULT ''::text\",\n            \"name\": \"st_aslatlontext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, format text DEFAULT 'hdddmmss'::text\",\n            \"name\": \"st_asmarc21\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyelement\",\n            \"name\": \"st_asmvt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, text, integer\",\n            \"name\": \"st_asmvt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, text, integer, text\",\n            \"name\": \"st_asmvt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, text, integer, text, text\",\n            \"name\": \"st_asmvt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"anyelement, text\",\n            \"name\": \"st_asmvt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geom geometry, bounds box2d, extent integer DEFAULT 4096, buffer integer DEFAULT 256, clip_geom boolean DEFAULT true\",\n            \"name\": \"st_asmvtgeom\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, rel integer DEFAULT 0, maxdecimaldigits integer DEFAULT 15\",\n            \"name\": \"st_assvg\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_assvg\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, rel integer DEFAULT 0, maxdecimaldigits integer DEFAULT 15\",\n            \"name\": \"st_assvg\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_astext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_astext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"st_astext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, integer\",\n            \"name\": \"st_astext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_astext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, prec integer DEFAULT NULL::integer, prec_z integer DEFAULT NULL::integer, prec_m integer DEFAULT NULL::integer, with_sizes boolean DEFAULT NULL::boolean, with_boxes boolean DEFAULT NULL::boolean\",\n            \"name\": \"st_astwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry[], ids bigint[], prec integer DEFAULT NULL::integer, prec_z integer DEFAULT NULL::integer, prec_m integer DEFAULT NULL::integer, with_sizes boolean DEFAULT NULL::boolean, with_boxes boolean DEFAULT NULL::boolean\",\n            \"name\": \"st_astwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, maxdecimaldigits integer DEFAULT 15, options integer DEFAULT 0\",\n            \"name\": \"st_asx3d\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_azimuth\",\n            \"schema\": \"public\",\n            \"comment\": \"args: origin, target - Returns the north-based azimuth of a line between two points.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"st_azimuth\",\n            \"schema\": \"public\",\n            \"comment\": \"args: origin, target - Returns the north-based azimuth of a line between two points.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_bdmpolyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_bdpolyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_boundary\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the boundary of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, fits boolean DEFAULT false\",\n            \"name\": \"st_boundingdiagonal\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, fits=false - Returns the diagonal of a geometrys bounding box.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer DEFAULT NULL::integer\",\n            \"name\": \"st_box2dfromgeohash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, double precision, integer\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, radius double precision, options text DEFAULT ''::text\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, radius_of_buffer, buffer_style_parameters = ' - Computes a geometry covering all points within a given distance from a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, radius double precision, quadsegs integer\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, radius_of_buffer, num_seg_quarter_circle - Computes a geometry covering all points within a given distance from a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, double precision, text\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, double precision\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, double precision, text\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, radius_of_buffer, buffer_style_parameters - Computes a geometry covering all points within a given distance from a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, double precision, integer\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, radius_of_buffer, num_seg_quarter_circle - Computes a geometry covering all points within a given distance from a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, double precision\",\n            \"name\": \"st_buffer\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_buildarea\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Creates a polygonal geometry formed by the linework of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_centroid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, use_spheroid=true - Returns the geometric center of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_centroid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_centroid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the geometric center of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer DEFAULT 1, boolean DEFAULT false\",\n            \"name\": \"st_chaikinsmoothing\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, nIterations = 1, preserveEndPoints = false - Returns a smoothed version of a geometry, using the Chaikin algorithm\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_cleangeometry\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, box box2d\",\n            \"name\": \"st_clipbybox2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, box - Computes the portion of a geometry falling within a rectangle.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_closestpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom1, geom2 - Returns the 2D point on g1 that is closest to g2. This is the first point of the shortest line from one geometry to the other.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"st_closestpointofapproach\",\n            \"schema\": \"public\",\n            \"comment\": \"args: track1, track2 - Returns a measure at the closest point of approach of two trajectories.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, eps double precision, minpoints integer\",\n            \"name\": \"st_clusterdbscan\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, eps, minpoints - Window function that returns a cluster id for each input geometry using the DBSCAN algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry[]\",\n            \"name\": \"st_clusterintersecting\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_clusterintersecting\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Aggregate function that clusters the input geometries into connected sets.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geom geometry, k integer, max_radius double precision DEFAULT NULL::double precision\",\n            \"name\": \"st_clusterkmeans\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, number_of_clusters, max_radius - Window function that returns a cluster id for each input geometry using the K-means algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry[], double precision\",\n            \"name\": \"st_clusterwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_clusterwithin\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, distance - Aggregate function that clusters the input geometries by separation distance.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_collect\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Creates a GeometryCollection or Multi* geometry from a set of geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_collect\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1field - Creates a GeometryCollection or Multi* geometry from a set of geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geometry[]\",\n            \"name\": \"st_collect\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1_array - Creates a GeometryCollection or Multi* geometry from a set of geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_collectionextract\",\n            \"schema\": \"public\",\n            \"comment\": \"args: collection - Given a geometry collection, returns a multi-geometry containing only elements of a specified type.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_collectionextract\",\n            \"schema\": \"public\",\n            \"comment\": \"args: collection, type - Given a geometry collection, returns a multi-geometry containing only elements of a specified type.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_collectionhomogenize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: collection - Returns the simplest representation of a geometry collection.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d, geometry\",\n            \"name\": \"st_combinebbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d, box3d\",\n            \"name\": \"st_combinebbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d, geometry\",\n            \"name\": \"st_combinebbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"param_geom geometry, param_pctconvex double precision, param_allow_holes boolean DEFAULT false\",\n            \"name\": \"st_concavehull\",\n            \"schema\": \"public\",\n            \"comment\": \"args: param_geom, param_pctconvex, param_allow_holes = false - Computes a possibly concave geometry that encloses all input geometry vertices\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_contains\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_containsproperly\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_convexhull\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Computes the convex hull of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry geometry\",\n            \"name\": \"st_coorddim\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Return the coordinate dimension of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_coveredby\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_coveredby\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"st_coveredby\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_covers\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_covers\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"st_covers\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry, double precision\",\n            \"name\": \"st_cpawithin\",\n            \"schema\": \"public\",\n            \"comment\": \"args: track1, track2, dist - Tests if the closest point of approach of two trajectoriesis within the specified distance.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_crosses\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, tol double precision DEFAULT 32, toltype integer DEFAULT 0, flags integer DEFAULT 0\",\n            \"name\": \"st_curvetoline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: curveGeom, tolerance, tolerance_type, flags - Converts a geometry containing curves to a linear geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"g1 geometry, tolerance double precision DEFAULT 0.0, flags integer DEFAULT 0\",\n            \"name\": \"st_delaunaytriangles\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, tolerance, flags - Returns the Delaunay triangulation of the vertices of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_dfullywithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, gridsize double precision DEFAULT '-1.0'::numeric\",\n            \"name\": \"st_difference\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, geomB, gridSize = -1 - Computes a geometry representing the part of geometry A that does not intersect geometry B.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_dimension\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns the topological dimension of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_disjoint\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_distance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geog1, geog2, use_spheroid=true - Returns the distance between two geometry or geography values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_distance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the distance between two geometry or geography values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_distance\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"st_distancecpa\",\n            \"schema\": \"public\",\n            \"comment\": \"args: track1, track2 - Returns the distance between the closest point of approach of two trajectories.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_distancesphere\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, radius double precision\",\n            \"name\": \"st_distancesphere\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomlonlatA, geomlonlatB, radius=6371008 - Returns minimum distance in meters between two lon/lat geometries using a spherical earth model.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, spheroid\",\n            \"name\": \"st_distancespheroid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomlonlatA, geomlonlatB, measurement_spheroid=WGS84 - Returns the minimum distance between two lon/lat geometries using a spheroidal earth model.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_distancespheroid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_dump\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns a set of geometry_dump rows for the components of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_dumppoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a set of geometry_dump rows for the coordinates in a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_dumprings\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_polygon - Returns a set of geometry_dump rows for the exterior and interior rings of a Polygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_dumpsegments\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a set of geometry_dump rows for the segments in a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text, double precision\",\n            \"name\": \"st_dwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_dwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography, tolerance double precision, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_dwithin\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_endpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns the last point of a LineString or CircularLineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_envelope\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns a geometry representing the bounding box of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_equals\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_estimatedextent\",\n            \"schema\": \"public\",\n            \"comment\": \"args: table_name, geocolumn_name - Returns the estimated extent of a spatial table.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text, text, boolean\",\n            \"name\": \"st_estimatedextent\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name, geocolumn_name, parent_only - Returns the estimated extent of a spatial table.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text, text\",\n            \"name\": \"st_estimatedextent\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name, geocolumn_name - Returns the estimated extent of a spatial table.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, dx double precision, dy double precision, dz double precision DEFAULT 0, dm double precision DEFAULT 0\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, dx, dy, dz=0, dm=0 - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box box2d, dx double precision, dy double precision\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: box, dx, dy - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box2d, double precision\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: box, units_to_expand - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d, double precision\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: box, units_to_expand - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, units_to_expand - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box box3d, dx double precision, dy double precision, dz double precision DEFAULT 0\",\n            \"name\": \"st_expand\",\n            \"schema\": \"public\",\n            \"comment\": \"args: box, dx, dy, dz=0 - Returns a bounding box expanded from another bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_extent\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomfield - Aggregate function that returns the bounding box of geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_exteriorring\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_polygon - Returns a LineString representing the exterior ring of a Polygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision DEFAULT NULL::double precision, boolean DEFAULT false\",\n            \"name\": \"st_filterbym\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, min, max = null, returnM = false - Removes vertices based on their M value\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_findextent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"text, text, text\",\n            \"name\": \"st_findextent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_flipcoordinates\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a version of a geometry with X and Y axis flipped.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_force2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Force the geometries into a \\\"2-dimensional mode\\\".\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, zvalue double precision DEFAULT 0.0\",\n            \"name\": \"st_force3d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, Zvalue = 0.0 - Force the geometries into XYZ mode. This is an alias for ST_Force3DZ.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, mvalue double precision DEFAULT 0.0\",\n            \"name\": \"st_force3dm\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, Mvalue = 0.0 - Force the geometries into XYM mode.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, zvalue double precision DEFAULT 0.0\",\n            \"name\": \"st_force3dz\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, Zvalue = 0.0 - Force the geometries into XYZ mode.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, zvalue double precision DEFAULT 0.0, mvalue double precision DEFAULT 0.0\",\n            \"name\": \"st_force4d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, Zvalue = 0.0, Mvalue = 0.0 - Force the geometries into XYZM mode.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcecollection\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Convert the geometry into a GEOMETRYCOLLECTION.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcecurve\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Upcast a geometry into its curved type, if applicable.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcepolygonccw\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Orients all exterior rings counter-clockwise and all interior rings clockwise.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcepolygoncw\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Orients all exterior rings clockwise and all interior rings counter-clockwise.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcerhr\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Force the orientation of the vertices in a polygon to follow the Right-Hand-Rule.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_forcesfs\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Force the geometries to use SFS 1.1 geometry types only.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, version text\",\n            \"name\": \"st_forcesfs\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, version - Force the geometries to use SFS 1.1 geometry types only.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision DEFAULT '-1'::integer\",\n            \"name\": \"st_frechetdistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2, densifyFrac = -1 - Returns the Fréchet distance between two geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"anyelement, bytea\",\n            \"name\": \"st_fromflatgeobuf\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text, bytea\",\n            \"name\": \"st_fromflatgeobuftotable\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"area geometry, npoints integer, seed integer\",\n            \"name\": \"st_generatepoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, npoints, seed - Generates random points contained in a Polygon or MultiPolygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"area geometry, npoints integer\",\n            \"name\": \"st_generatepoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, npoints - Generates random points contained in a Polygon or MultiPolygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geogfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_geogfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geographyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, maxchars integer DEFAULT 0\",\n            \"name\": \"st_geohash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, maxchars integer DEFAULT 0\",\n            \"name\": \"st_geohash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomcollfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_geomcollfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_geomcollfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_geomcollfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"g geometry, tolerance double precision DEFAULT NULL::double precision, max_iter integer DEFAULT 10000, fail_if_not_converged boolean DEFAULT false\",\n            \"name\": \"st_geometricmedian\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, tolerance = NULL, max_iter = 10000, fail_if_not_converged = false - Returns the geometric median of a MultiPoint.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_geometryfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geometryfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_geometryn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, n - Return an element of a geometry collection.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_geometrytype\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the SQL-MM type of a geometry as text.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_geomfromewkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomfromewkt\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer DEFAULT NULL::integer\",\n            \"name\": \"st_geomfromgeohash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"jsonb\",\n            \"name\": \"st_geomfromgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomfromgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"json\",\n            \"name\": \"st_geomfromgeojson\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomfromgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_geomfromgml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomfromkml\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"marc21xml text\",\n            \"name\": \"st_geomfrommarc21\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_geomfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_geomfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_geomfromtwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_geomfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_geomfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_gmltosql\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_gmltosql\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry geometry\",\n            \"name\": \"st_hasarc\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Tests if a geometry contains a circular arc\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_hausdorffdistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2, densifyFrac - Returns the Hausdorff distance between two geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_hausdorffdistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the Hausdorff distance between two geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"size double precision, cell_i integer, cell_j integer, origin geometry DEFAULT '010100000000000000000000000000000000000000'::geometry\",\n            \"name\": \"st_hexagon\",\n            \"schema\": \"public\",\n            \"comment\": \"args: size, cell_i, cell_j, origin - Returns a single hexagon, using the provided edge size and cell coordinate within the hexagon grid space.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"size double precision, bounds geometry, OUT geom geometry, OUT i integer, OUT j integer\",\n            \"name\": \"st_hexagongrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: size, bounds - Returns a set of hexagons and cell indices that completely cover the bounds of the geometry argument.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_interiorringn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_polygon, n - Returns the Nth interior ring (hole) of a Polygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"line geometry, point geometry\",\n            \"name\": \"st_interpolatepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linear_geom_with_measure, point - Returns the interpolated measure of a geometry closest to a point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_intersection\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geography, geography\",\n            \"name\": \"st_intersection\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geogA, geogB - Computes a geometry representing the shared portion of geometries A and B.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, gridsize double precision DEFAULT '-1'::integer\",\n            \"name\": \"st_intersection\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, geomB, gridSize = -1 - Computes a geometry representing the shared portion of geometries A and B.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog1 geography, geog2 geography\",\n            \"name\": \"st_intersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_intersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_intersects\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isclosed\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Tests if a LineStringss start and end points are coincident. For a PolyhedralSurface tests if it is closed (volumetric).\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_iscollection\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Tests if a geometry is a geometry collection type.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isempty\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Tests if a geometry is empty.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_ispolygonccw\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Tests if Polygons have exterior rings oriented counter-clockwise and interior rings oriented clockwise.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_ispolygoncw\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Tests if Polygons have exterior rings oriented clockwise and interior rings oriented counter-clockwise.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isring\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Tests if a LineString is closed and simple.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_issimple\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Tests if a geometry has no points of self-intersection or self-tangency.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_isvalid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, flags - Tests if a geometry is well-formed in 2D.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isvalid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Tests if a geometry is well-formed in 2D.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, flags integer DEFAULT 0\",\n            \"name\": \"st_isvaliddetail\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, flags - Returns a valid_detail row stating if a geometry is valid or if not a reason and a location.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_isvalidreason\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, flags - Returns text stating if a geometry is valid, or a reason for invalidity.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isvalidreason\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns text stating if a geometry is valid, or a reason for invalidity.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_isvalidtrajectory\",\n            \"schema\": \"public\",\n            \"comment\": \"args: line - Tests if the geometry is a valid trajectory.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_length\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_2dlinestring - Returns the 2D length of a linear geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_length\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geog, use_spheroid=true - Returns the 2D length of a linear geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_length\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_length2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_2dlinestring - Returns the 2D length of a linear geometry. Alias for ST_Length\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, spheroid\",\n            \"name\": \"st_length2dspheroid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, spheroid\",\n            \"name\": \"st_lengthspheroid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_geometry, a_spheroid - Returns the 2D or 3D length/perimeter of a lon/lat geometry on a spheroid.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"letters text, font json DEFAULT NULL::json\",\n            \"name\": \"st_letters\",\n            \"schema\": \"public\",\n            \"comment\": \"args:  letters,  font - Returns the input letters rendered as geometry with a default start position at the origin and default text height of 100.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"line1 geometry, line2 geometry\",\n            \"name\": \"st_linecrossingdirection\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"txtin text, nprecision integer DEFAULT 5\",\n            \"name\": \"st_linefromencodedpolyline\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_linefrommultipoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aMultiPoint - Creates a LineString from a MultiPoint geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_linefromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_linefromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_linefromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_linefromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_lineinterpolatepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, a_fraction - Returns a point interpolated along a line at a fractional location.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, repeat boolean DEFAULT true\",\n            \"name\": \"st_lineinterpolatepoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, a_fraction, repeat - Returns points interpolated along a line at a fractional interval.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_linelocatepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, a_point - Returns the fractional location of the closest point on a line to a point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, boolean\",\n            \"name\": \"st_linemerge\",\n            \"schema\": \"public\",\n            \"comment\": \"args: amultilinestring, directed - Return the lines formed by sewing together a MultiLineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_linemerge\",\n            \"schema\": \"public\",\n            \"comment\": \"args: amultilinestring - Return the lines formed by sewing together a MultiLineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_linestringfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_linestringfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision\",\n            \"name\": \"st_linesubstring\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, startfraction, endfraction - Returns the part of a line between two fractional locations.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry geometry\",\n            \"name\": \"st_linetocurve\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomANoncircular - Converts a linear geometry to a curved geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry geometry, measure double precision, leftrightoffset double precision DEFAULT 0.0\",\n            \"name\": \"st_locatealong\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom_with_measure, measure, offset = 0 - Returns the point(s) on a geometry that match a measure value.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry geometry, frommeasure double precision, tomeasure double precision, leftrightoffset double precision DEFAULT 0.0\",\n            \"name\": \"st_locatebetween\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, measure_start, measure_end, offset = 0 - Returns the portions of a geometry that match a measure range.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry geometry, fromelevation double precision, toelevation double precision\",\n            \"name\": \"st_locatebetweenelevations\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, elevation_start, elevation_end - Returns the portions of a geometry that lie in an elevation (Z) range.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_longestline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 2D longest line between two geometries.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_m\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_point - Returns the M coordinate of a Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_makebox2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: pointLowLeft, pointUpRight - Creates a BOX2D defined by two 2D point geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, double precision, double precision, integer DEFAULT 0\",\n            \"name\": \"st_makeenvelope\",\n            \"schema\": \"public\",\n            \"comment\": \"args: xmin, ymin, xmax, ymax, srid=unknown - Creates a rectangular Polygon from minimum and maximum coordinates.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_makeline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom1, geom2 - Creates a LineString from Point, MultiPoint, or LineString geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry[]\",\n            \"name\": \"st_makeline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geoms_array - Creates a LineString from Point, MultiPoint, or LineString geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_makeline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geoms - Creates a LineString from Point, MultiPoint, or LineString geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"double precision, double precision\",\n            \"name\": \"st_makepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y - Creates a 2D, 3DZ or 4D Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, double precision, double precision\",\n            \"name\": \"st_makepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, z, m - Creates a 2D, 3DZ or 4D Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, double precision\",\n            \"name\": \"st_makepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, z - Creates a 2D, 3DZ or 4D Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, double precision\",\n            \"name\": \"st_makepointm\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, m - Creates a Point from X, Y and M values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, geometry[]\",\n            \"name\": \"st_makepolygon\",\n            \"schema\": \"public\",\n            \"comment\": \"args: outerlinestring, interiorlinestrings - Creates a Polygon from a shell and optional list of holes.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_makepolygon\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring - Creates a Polygon from a shell and optional list of holes.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, params text\",\n            \"name\": \"st_makevalid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: input, params - Attempts to make an invalid geometry valid without losing vertices.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_makevalid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: input - Attempts to make an invalid geometry valid without losing vertices.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_maxdistance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Returns the 2D largest distance between two geometries in projected units.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, OUT center geometry, OUT nearest geometry, OUT radius double precision\",\n            \"name\": \"st_maximuminscribedcircle\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Computes the largest circle contained within a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_memcollect\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_memsize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the amount of memory space a geometry takes.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_memunion\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomfield - Aggregate function which unions geometries in a memory-efficent but slower way\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"inputgeom geometry, segs_per_quarter integer DEFAULT 48\",\n            \"name\": \"st_minimumboundingcircle\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, num_segs_per_qt_circ=48 - Returns the smallest circle polygon that contains a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, OUT center geometry, OUT radius double precision\",\n            \"name\": \"st_minimumboundingradius\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns the center point and radius of the smallest circle that contains a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_minimumclearance\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns the minimum clearance of a geometry, a measure of a geometrys robustness.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_minimumclearanceline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns the two-point LineString spanning a geometrys minimum clearance.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_mlinefromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_mlinefromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_mlinefromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_mlinefromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_mpointfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_mpointfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_mpointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_mpointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_mpolyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_mpolyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_mpolyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_mpolyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_multi\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Return the geometry as a MULTI* geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_multilinefromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_multilinestringfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_multilinestringfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_multipointfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_multipointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_multipointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_multipolyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_multipolyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_multipolygonfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_multipolygonfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_ndims\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the coordinate dimension of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"g geometry\",\n            \"name\": \"st_node\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Nodes a collection of lines.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry\",\n            \"name\": \"st_normalize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Return the geometry in its canonical form.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_npoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the number of points (vertices) in a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_nrings\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the number of rings in a polygonal geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_numgeometries\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns the number of elements in a geometry collection.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_numinteriorring\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_polygon - Returns the number of interior rings (holes) of a Polygon. Aias for ST_NumInteriorRings\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_numinteriorrings\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_polygon - Returns the number of interior rings (holes) of a Polygon.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_numpatches\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Return the number of faces on a Polyhedral Surface. Will return null for non-polyhedral geometries.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_numpoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the number of points in a LineString or CircularString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"line geometry, distance double precision, params text DEFAULT ''::text\",\n            \"name\": \"st_offsetcurve\",\n            \"schema\": \"public\",\n            \"comment\": \"args: line, signed_distance, style_parameters=' - Returns an offset line at a given distance and side from an input line.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_orderingequals\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_orientedenvelope\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a minimum-area rectangle containing a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_overlaps\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_patchn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, n - Returns the Nth geometry (face) of a PolyhedralSurface.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geog geography, use_spheroid boolean DEFAULT true\",\n            \"name\": \"st_perimeter\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geog, use_spheroid=true - Returns the length of the boundary of a polygonal geometry or geography.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_perimeter\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the length of the boundary of a polygonal geometry or geography.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_perimeter2d\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the 2D perimeter of a polygonal geometry. Alias for ST_Perimeter.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision\",\n            \"name\": \"st_point\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y - Creates a Point with X, Y and SRID values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"double precision, double precision, srid integer\",\n            \"name\": \"st_point\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, srid=unknown - Creates a Point with X, Y and SRID values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer DEFAULT NULL::integer\",\n            \"name\": \"st_pointfromgeohash\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_pointfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_pointfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_pointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_pointfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision\",\n            \"name\": \"st_pointinsidecircle\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"xcoordinate double precision, ycoordinate double precision, mcoordinate double precision, srid integer DEFAULT 0\",\n            \"name\": \"st_pointm\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, m, srid=unknown - Creates a Point with X, Y, M and SRID values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_pointn\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_linestring, n - Returns the Nth point in the first LineString or circular LineString in a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_pointonsurface\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Computes a point guaranteed to lie in a polygon, or on a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_points\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Returns a MultiPoint containing the coordinates of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, srid integer DEFAULT 0\",\n            \"name\": \"st_pointz\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, z, srid=unknown - Creates a Point with X, Y, Z and SRID values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"xcoordinate double precision, ycoordinate double precision, zcoordinate double precision, mcoordinate double precision, srid integer DEFAULT 0\",\n            \"name\": \"st_pointzm\",\n            \"schema\": \"public\",\n            \"comment\": \"args: x, y, z, m, srid=unknown - Creates a Point with X, Y, Z, M and SRID values.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_polyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_polyfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_polyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_polyfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_polygon\",\n            \"schema\": \"public\",\n            \"comment\": \"args: lineString, srid - Creates a Polygon from a LineString with a specified SRID.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_polygonfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, integer\",\n            \"name\": \"st_polygonfromtext\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea, integer\",\n            \"name\": \"st_polygonfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"bytea\",\n            \"name\": \"st_polygonfromwkb\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry[]\",\n            \"name\": \"st_polygonize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom_array - Computes a collection of polygons formed from the linework of a set of geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_polygonize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomfield - Computes a collection of polygons formed from the linework of a set of geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geog geography, distance double precision, azimuth double precision\",\n            \"name\": \"st_project\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, distance, azimuth - Returns a point projected from a start point by a distance and bearing (azimuth).\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"g geometry, prec_x integer, prec_y integer DEFAULT NULL::integer, prec_z integer DEFAULT NULL::integer, prec_m integer DEFAULT NULL::integer\",\n            \"name\": \"st_quantizecoordinates\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, prec_x, prec_y, prec_z, prec_m - Sets least significant bits of coordinates to zero\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, gridsize double precision\",\n            \"name\": \"st_reduceprecision\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g, gridsize - Returns a valid geometry with points rounded to a grid tolerance.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, text\",\n            \"name\": \"st_relate\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_relate\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, integer\",\n            \"name\": \"st_relate\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"st_relatematch\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_removepoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring, offset - Remove a point from a linestring.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, tolerance double precision DEFAULT 0.0\",\n            \"name\": \"st_removerepeatedpoints\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, tolerance - Returns a version of a geometry with duplicate points removed.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_reverse\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Return the geometry with vertex order reversed.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision\",\n            \"name\": \"st_rotate\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians, x0, y0 - Rotates a geometry about an origin point.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_rotate\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians - Rotates a geometry about an origin point.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, geometry\",\n            \"name\": \"st_rotate\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians, pointOrigin - Rotates a geometry about an origin point.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_rotatex\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians - Rotates a geometry about the X axis.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_rotatey\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians - Rotates a geometry about the Y axis.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_rotatez\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, rotRadians - Rotates a geometry about the Z axis.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, geometry, origin geometry\",\n            \"name\": \"st_scale\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, factor, origin - Scales a geometry by given factors.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision\",\n            \"name\": \"st_scale\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, XFactor, YFactor, ZFactor - Scales a geometry by given factors.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"st_scale\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, factor - Scales a geometry by given factors.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision\",\n            \"name\": \"st_scale\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, XFactor, YFactor - Scales a geometry by given factors.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, geometry\",\n            \"name\": \"st_scroll\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring, point - Change start point of a closed LineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, max_segment_length double precision\",\n            \"name\": \"st_segmentize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geog, max_segment_length - Return a modified geometry/geography having no segment longer than the given distance.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_segmentize\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, max_segment_length - Return a modified geometry/geography having no segment longer than the given distance.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision DEFAULT '-1'::integer, integer DEFAULT 1\",\n            \"name\": \"st_seteffectivearea\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, threshold = 0, set_area = 1 - Sets the effective area for each vertex, using the Visvalingam-Whyatt algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, integer, geometry\",\n            \"name\": \"st_setpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: linestring, zerobasedposition, point - Replace point of a linestring with a given point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography, srid integer\",\n            \"name\": \"st_setsrid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, srid integer\",\n            \"name\": \"st_setsrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, srid - Set the SRID on a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_sharedpaths\",\n            \"schema\": \"public\",\n            \"comment\": \"args: lineal1, lineal2 - Returns a collection containing paths shared by the two input linestrings/multilinestrings.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_shiftlongitude\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Shifts the longitude coordinates of a geometry between -180..180 and 0..360.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_shortestline\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom1, geom2 - Returns the 2D shortest line between two geometries\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_simplify\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, tolerance - Returns a simplified version of a geometry, using the Douglas-Peucker algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision, boolean\",\n            \"name\": \"st_simplify\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, tolerance, preserveCollapsed - Returns a simplified version of a geometry, using the Douglas-Peucker algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, vertex_fraction double precision, is_outer boolean DEFAULT true\",\n            \"name\": \"st_simplifypolygonhull\",\n            \"schema\": \"public\",\n            \"comment\": \"args: param_geom, vertex_fraction, is_outer = true - Computes a simplifed topology-preserving outer or inner hull of a polygonal geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_simplifypreservetopology\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, tolerance - Returns a simplified and valid version of a geometry, using the Douglas-Peucker algorithm.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_simplifyvw\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, tolerance - Returns a simplified version of a geometry, using the Visvalingam-Whyatt algorithm\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision\",\n            \"name\": \"st_snap\",\n            \"schema\": \"public\",\n            \"comment\": \"args: input, reference, tolerance - Snap segments and vertices of input geometry to vertices of a reference geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, double precision, double precision, double precision, double precision\",\n            \"name\": \"st_snaptogrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, pointOrigin, sizeX, sizeY, sizeZ, sizeM - Snap all points of the input geometry to a regular grid.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, double precision\",\n            \"name\": \"st_snaptogrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, size - Snap all points of the input geometry to a regular grid.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision\",\n            \"name\": \"st_snaptogrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, sizeX, sizeY - Snap all points of the input geometry to a regular grid.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision, double precision\",\n            \"name\": \"st_snaptogrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, originX, originY, sizeX, sizeY - Snap all points of the input geometry to a regular grid.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_split\",\n            \"schema\": \"public\",\n            \"comment\": \"args: input, blade - Returns a collection of geometries created by splitting a geometry by another geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"size double precision, cell_i integer, cell_j integer, origin geometry DEFAULT '010100000000000000000000000000000000000000'::geometry\",\n            \"name\": \"st_square\",\n            \"schema\": \"public\",\n            \"comment\": \"args: size, cell_i, cell_j, origin - Returns a single square, using the provided edge size and cell coordinate within the square grid space.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"size double precision, bounds geometry, OUT geom geometry, OUT i integer, OUT j integer\",\n            \"name\": \"st_squaregrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: size, bounds - Returns a set of grid squares and cell indices that completely cover the bounds of the geometry argument.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geog geography\",\n            \"name\": \"st_srid\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry\",\n            \"name\": \"st_srid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1 - Returns the spatial reference identifier for a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_startpoint\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns the first point of a LineString.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, maxvertices integer DEFAULT 256, gridsize double precision DEFAULT '-1.0'::numeric\",\n            \"name\": \"st_subdivide\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, max_vertices=256, gridSize = -1 - Computes a rectilinear subdivision of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geography\",\n            \"name\": \"st_summary\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns a text summary of the contents of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_summary\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g - Returns a text summary of the contents of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, ords cstring\",\n            \"name\": \"st_swapordinates\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, ords - Returns a version of the given geometry with given ordinate values swapped.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, gridsize double precision DEFAULT '-1.0'::numeric\",\n            \"name\": \"st_symdifference\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, geomB, gridSize = -1 - Computes a geometry representing the portions of geometries A and B that do not intersect.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_symmetricdifference\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"zoom integer, x integer, y integer, bounds geometry DEFAULT '0102000020110F00000200000093107C45F81B73C193107C45F81B73C193107C45F81B734193107C45F81B7341'::geometry, margin double precision DEFAULT 0.0\",\n            \"name\": \"st_tileenvelope\",\n            \"schema\": \"public\",\n            \"comment\": \"args: tileZoom, tileX, tileY, bounds=SRID=3857;LINESTRING(-20037508.342789 -20037508.342789,20037508.342789 20037508.342789), margin=0.0 - Creates a rectangular Polygon in Web Mercator (SRID:3857) using the XYZ tile system.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_touches\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, from_proj text, to_proj text\",\n            \"name\": \"st_transform\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, from_proj, to_proj - Return a new geometry with coordinates transformed to a different spatial reference system.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom geometry, from_proj text, to_srid integer\",\n            \"name\": \"st_transform\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, from_proj, to_srid - Return a new geometry with coordinates transformed to a different spatial reference system.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, integer\",\n            \"name\": \"st_transform\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, srid - Return a new geometry with coordinates transformed to a different spatial reference system.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, to_proj text\",\n            \"name\": \"st_transform\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, to_proj - Return a new geometry with coordinates transformed to a different spatial reference system.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision\",\n            \"name\": \"st_translate\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, deltax, deltay, deltaz - Translates a geometry by given offsets.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision\",\n            \"name\": \"st_translate\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, deltax, deltay - Translates a geometry by given offsets.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry, double precision, double precision, double precision, double precision\",\n            \"name\": \"st_transscale\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA, deltaX, deltaY, XFactor, YFactor - Translates and scales a geometry by given offsets and factors.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"g1 geometry\",\n            \"name\": \"st_triangulatepolygon\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom - Computes the constrained Delaunay triangulation of polygons\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, gridsize double precision DEFAULT '-1.0'::numeric\",\n            \"name\": \"st_unaryunion\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, gridSize = -1 - Computes the union of the components of a single geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry, gridsize double precision\",\n            \"name\": \"st_union\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2, gridSize - Computes a geometry representing the point-set union of the input geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_union\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, g2 - Computes a geometry representing the point-set union of the input geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry[]\",\n            \"name\": \"st_union\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1_array - Computes a geometry representing the point-set union of the input geometries.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry, gridsize double precision\",\n            \"name\": \"st_union\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1field, gridSize - Computes a geometry representing the point-set union of the input geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_union\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1field - Computes a geometry representing the point-set union of the input geometries.\",\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"g1 geometry, tolerance double precision DEFAULT 0.0, extend_to geometry DEFAULT NULL::geometry\",\n            \"name\": \"st_voronoilines\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, tolerance, extend_to - Returns the boundaries of the Voronoi diagram of the vertices of a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"g1 geometry, tolerance double precision DEFAULT 0.0, extend_to geometry DEFAULT NULL::geometry\",\n            \"name\": \"st_voronoipolygons\",\n            \"schema\": \"public\",\n            \"comment\": \"args: g1, tolerance, extend_to - Returns the cells of the Voronoi diagram of the vertices of a geometry.\",\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geom1 geometry, geom2 geometry\",\n            \"name\": \"st_within\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"wkb bytea\",\n            \"name\": \"st_wkbtosql\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"st_wkttosql\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geom geometry, wrap double precision, move double precision\",\n            \"name\": \"st_wrapx\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geom, wrap, move - Wrap a geometry around an X value.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_x\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_point - Returns the X coordinate of a Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_xmax\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the X maxima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_xmin\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the X minima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_y\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_point - Returns the Y coordinate of a Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_ymax\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the Y maxima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_ymin\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the Y minima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_z\",\n            \"schema\": \"public\",\n            \"comment\": \"args: a_point - Returns the Z coordinate of a Point.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_zmax\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the Z maxima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"st_zmflag\",\n            \"schema\": \"public\",\n            \"comment\": \"args: geomA - Returns a code indicating the ZM coordinate dimension of a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"box3d\",\n            \"name\": \"st_zmin\",\n            \"schema\": \"public\",\n            \"comment\": \"args: aGeomorBox2DorBox3D - Returns the Z minima of a 2D or 3D bounding box or a geometry.\",\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"strict_word_similarity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"strict_word_similarity_commutator_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"strict_word_similarity_dist_commutator_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"strict_word_similarity_dist_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"strict_word_similarity_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"strpos\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"geometry\",\n            \"name\": \"text\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"texticlike\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, text\",\n            \"name\": \"texticlike\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"texticnlike\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, text\",\n            \"name\": \"texticnlike\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, text\",\n            \"name\": \"texticregexeq\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"texticregexeq\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, citext\",\n            \"name\": \"texticregexne\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"citext, text\",\n            \"name\": \"texticregexne\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"internal\"\n        },\n        {\n            \"args\": \"time without time zone, time without time zone\",\n            \"name\": \"time_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"touch_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"citext, citext, text\",\n            \"name\": \"translate\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_after_game_rating_event\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_after_reputation_event\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_after_venue_rating_event\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_arenas_set_search_tsv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_comment_counter\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_games_set_search_tsv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_like_counter\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_post_search_refresh\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_post_search_refresh_from_vibes\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_post_vibes_check\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_posts_primary_vibe_check\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_scan_post\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_spaces_legacy_name_sync\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_squads_owner_default\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_squads_owner_defaults\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_squads_set_search_tsv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_ticket_from_comment_report\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_touch_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trg_venues_set_search_tsv\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_challenges_outbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_games_block_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_games_set_host_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_invite_block_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_joinreq_block_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_joinreq_set_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_meetups_outbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_norm_game_scores\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_norm_venue_scores\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_profiles_username_hist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_roster_block_frozen\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_roster_set_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_squad_members_outbox\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_touch_updated_at\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"trgfn_waitlist_set_user\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"timestamp without time zone, timestamp without time zone\",\n            \"name\": \"ts_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"timestamp with time zone, timestamp with time zone\",\n            \"name\": \"tstz_dist\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"unaccent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"regdictionary, text\",\n            \"name\": \"unaccent\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal\",\n            \"name\": \"unaccent_init\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"internal, internal, internal, internal\",\n            \"name\": \"unaccent_lexize\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text\",\n            \"name\": \"unlockrows\",\n            \"schema\": \"public\",\n            \"comment\": \"args: auth_token - Removes all locks held by an authorization token.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_other_user uuid\",\n            \"name\": \"unsync\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"character varying, character varying, character varying, integer\",\n            \"name\": \"updategeometrysrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: schema_name, table_name, column_name, srid - Updates the SRID of all features in a geometry column, and the table metadata.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"catalogn_name character varying, schema_name character varying, table_name character varying, column_name character varying, new_srid_in integer\",\n            \"name\": \"updategeometrysrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: catalog_name, schema_name, table_name, column_name, srid - Updates the SRID of all features in a geometry column, and the table metadata.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"character varying, character varying, integer\",\n            \"name\": \"updategeometrysrid\",\n            \"schema\": \"public\",\n            \"comment\": \"args: table_name, column_name, srid - Updates the SRID of all features in a geometry column, and the table metadata.\",\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p text\",\n            \"name\": \"username_canon\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p text\",\n            \"name\": \"username_shape\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"p_sport text DEFAULT NULL::text, p_limit integer DEFAULT 20\",\n            \"name\": \"v_rewards_leaderboard\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"venue_rating_rebuild_all\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_venue_id uuid\",\n            \"name\": \"venue_rating_recompute\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_me uuid\",\n            \"name\": \"vibes_base_candidates\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"p_username text\",\n            \"name\": \"whois\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"word_similarity\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"word_similarity_commutator_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"word_similarity_dist_commutator_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"word_similarity_dist_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"text, text\",\n            \"name\": \"word_similarity_op\",\n            \"schema\": \"public\",\n            \"comment\": null,\n            \"language\": \"c\"\n        },\n        {\n            \"args\": \"_bucket_id text, _name text\",\n            \"name\": \"add_prefixes\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"bucketid text, name text, owner uuid, metadata jsonb\",\n            \"name\": \"can_insert_object\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"bucket_ids text[], names text[]\",\n            \"name\": \"delete_leaf_prefixes\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"_bucket_id text, _name text\",\n            \"name\": \"delete_prefix\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"delete_prefix_hierarchy_trigger\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"enforce_bucket_name_length\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"extension\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"filename\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"foldername\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"get_level\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"get_prefix\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"sql\"\n        },\n        {\n            \"args\": \"name text\",\n            \"name\": \"get_prefixes\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"get_size_by_bucket\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text\",\n            \"name\": \"list_multipart_uploads_with_delimiter\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text\",\n            \"name\": \"list_objects_with_delimiter\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"bucket_ids text[], names text[]\",\n            \"name\": \"lock_top_prefixes\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"objects_delete_cleanup\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"objects_insert_prefix_trigger\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"objects_update_cleanup\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"objects_update_level_trigger\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"objects_update_prefix_trigger\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"operation\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"prefixes_delete_cleanup\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"prefixes_insert_trigger\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text\",\n            \"name\": \"search\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text\",\n            \"name\": \"search_legacy_v1\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text\",\n            \"name\": \"search_v1_optimised\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text, sort_order text DEFAULT 'asc'::text, sort_column text DEFAULT 'name'::text, sort_column_after text DEFAULT ''::text\",\n            \"name\": \"search_v2\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        },\n        {\n            \"args\": \"\",\n            \"name\": \"update_updated_at_column\",\n            \"schema\": \"storage\",\n            \"comment\": null,\n            \"language\": \"plpgsql\"\n        }\n    ],\n    \"extensions\": [\n        {\n            \"name\": \"btree_gin\",\n            \"version\": \"1.3\"\n        },\n        {\n            \"name\": \"btree_gist\",\n            \"version\": \"1.7\"\n        },\n        {\n            \"name\": \"citext\",\n            \"version\": \"1.6\"\n        },\n        {\n            \"name\": \"cube\",\n            \"version\": \"1.5\"\n        },\n        {\n            \"name\": \"earthdistance\",\n            \"version\": \"1.2\"\n        },\n        {\n            \"name\": \"pg_graphql\",\n            \"version\": \"1.5.11\"\n        },\n        {\n            \"name\": \"pg_stat_statements\",\n            \"version\": \"1.11\"\n        },\n        {\n            \"name\": \"pg_trgm\",\n            \"version\": \"1.6\"\n        },\n        {\n            \"name\": \"pgcrypto\",\n            \"version\": \"1.3\"\n        },\n        {\n            \"name\": \"plpgsql\",\n            \"version\": \"1.0\"\n        },\n        {\n            \"name\": \"postgis\",\n            \"version\": \"3.3.7\"\n        },\n        {\n            \"name\": \"supabase_vault\",\n            \"version\": \"0.3.1\"\n        },\n        {\n            \"name\": \"unaccent\",\n            \"version\": \"1.1\"\n        },\n        {\n            \"name\": \"uuid-ossp\",\n            \"version\": \"1.1\"\n        }\n    ]\n}"
  }
]